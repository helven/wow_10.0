
PlaterDB = {
	["captured_spells"] = {
		[193473] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "DEBUFF",
			["source"] = "Void Tendril",
			["npcID"] = 192337,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[340144] = {
			["source"] = "Praetorian Windblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173551,
		},
		[339122] = {
			["source"] = "Mortanis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167525,
		},
		[340146] = {
			["source"] = "Enforcer Aegeon",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 171009,
		},
		[333241] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "BUFF",
			["source"] = "Raging Bloodhorn",
			["npcID"] = 170850,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[331966] = {
			["encounterName"] = "Doctor Ickus",
			["type"] = "BUFF",
			["source"] = "Pestilence Slime",
			["encounterID"] = 2384,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165357,
		},
		[331967] = {
			["encounterName"] = "Doctor Ickus",
			["type"] = "DEBUFF",
			["source"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164967,
		},
		[113746] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Fire Spirit",
			["npcID"] = 69791,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56732,
		},
		[338875] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Archilon",
			["npcID"] = 158867,
		},
		[121483] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56448,
		},
		[152175] = {
			["source"] = "Earth Spirit",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 69792,
		},
		[330693] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Disgusting Refuse",
			["npcID"] = 163089,
		},
		[228645] = {
			["source"] = "Rune Weapon",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 27893,
		},
		[330694] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Disgusting Refuse",
			["npcID"] = 163089,
		},
		[340157] = {
			["source"] = "Praetorian Windblade",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 173551,
		},
		[321999] = {
			["source"] = "Pestilence Slime",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164705,
		},
		[372638] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Chaotic Essence",
			["npcID"] = 189706,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[327882] = {
			["source"] = "Plagueroc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168153,
		},
		[330697] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Diseased Horror",
			["npcID"] = 170690,
		},
		[330953] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Asmorda",
			["npcID"] = 161531,
		},
		[334023] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Harugia the Bloodthirsty",
			["npcID"] = 167536,
		},
		[319957] = {
			["source"] = "Chosen Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164824,
		},
		[372642] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[329932] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowlands Wormhole",
			["npcID"] = 169501,
		},
		[387476] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Infernal",
			["npcID"] = 89,
		},
		[330700] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Diseased Horror",
			["npcID"] = 170690,
		},
		[330956] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Asmorda",
			["npcID"] = 161531,
		},
		[342977] = {
			["source"] = "Kyrian Wings",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 173342,
		},
		[341443] = {
			["encounterName"] = "Doctor Ickus",
			["type"] = "BUFF",
			["source"] = "Erupting Ooze",
			["encounterID"] = 2384,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 170927,
		},
		[328400] = {
			["source"] = "Brood Ambusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164737,
		},
		[329935] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowlands Wormhole",
			["npcID"] = 169501,
		},
		[323542] = {
			["encounterName"] = "Gorechop",
			["type"] = "BUFF",
			["source"] = "Oozing Leftovers",
			["npcID"] = 165260,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2365,
		},
		[320729] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Xav the Unfallen",
			["npcID"] = 162329,
		},
		[106653] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59873,
		},
		[325591] = {
			["source"] = "Forsworn Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160359,
		},
		[346307] = {
			["source"] = "Corpselouse Spawnling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 158566,
		},
		[328661] = {
			["source"] = "Gushing Slime",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168969,
		},
		[320989] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Straticus",
			["npcID"] = 158870,
		},
		[328662] = {
			["source"] = "Gushing Slime",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168969,
		},
		[106526] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56448,
		},
		[328409] = {
			["source"] = "Brood Ambusher",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164737,
		},
		[295929] = {
			["source"] = "Oddly Large Mawrat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 154030,
		},
		[192082] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Wind Rush Totem",
			["npcID"] = 97285,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[318181] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Insatiable Etherwyrm",
			["npcID"] = 172704,
		},
		[24394] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Thingone",
			["npcID"] = 165189,
		},
		[318949] = {
			["source"] = "Blighted Spinebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 163894,
		},
		[339155] = {
			["source"] = "Venomous Sniper",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167493,
		},
		[330716] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Portal Guardian",
			["npcID"] = 167998,
		},
		[108446] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 416,
		},
		[196816] = {
			["source"] = "Divine Image",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198236,
		},
		[321000] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Maldraxxi Defector",
			["npcID"] = 177134,
		},
		[342739] = {
			["source"] = "Plaguebound Gargantuan",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 171596,
		},
		[339926] = {
			["source"] = "Goliath Crusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173553,
		},
		[321001] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Straticus",
			["npcID"] = 158870,
		},
		[313329] = {
			["source"] = "Kynthia",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160952,
		},
		[322281] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sparring Aspirant",
			["npcID"] = 159504,
		},
		[336859] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Azmogal",
			["npcID"] = 162873,
		},
		[272156] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Void Terror",
			["npcID"] = 136403,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[353741] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mor'geth",
			["npcID"] = 178958,
		},
		[341977] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Diseased Horror",
			["npcID"] = 170690,
		},
		[30213] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Rivingozin",
			["npcID"] = 17252,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[330725] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Guardian",
			["npcID"] = 167998,
		},
		[331237] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Soulforged Bonereaver",
			["npcID"] = 162763,
		},
		[337887] = {
			["source"] = "Copperfur Lurker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168731,
		},
		[205644] = {
			["source"] = "Treant",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 103822,
		},
		[354256] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Avowed Soulbreaker",
			["npcID"] = 177413,
		},
		[325101] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Steward",
			["npcID"] = 166663,
		},
		[326892] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "BUFF",
			["source"] = "Dessia the Decapitator",
			["npcID"] = 164451,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[324079] = {
			["encounterName"] = "Mordretha",
			["source"] = "Mordretha, the Endless Empress",
			["npcID"] = 165946,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2404,
		},
		[320243] = {
			["source"] = "Augmented Soldier",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 160905,
		},
		[329706] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Archer",
			["npcID"] = 171171,
		},
		[323825] = {
			["encounterName"] = "Mordretha",
			["source"] = "Grasping Rift",
			["encounterID"] = 2404,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165994,
		},
		[342751] = {
			["source"] = "Plaguebound Gargantuan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 171596,
		},
		[260249] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Fenryr",
			["npcID"] = 165189,
		},
		[331245] = {
			["source"] = "Congealed Plague",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 171745,
		},
		[320248] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Paceran the Virulent",
			["npcID"] = 164463,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[138130] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[332525] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Kyrian Goliath",
			["npcID"] = 171396,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[319994] = {
			["source"] = "Gristlebeak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162588,
		},
		[332526] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Kyrian Goliath",
			["npcID"] = 171396,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[107428] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[331248] = {
			["source"] = "Congealed Plague",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 171745,
		},
		[115804] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Soinlove",
			["npcID"] = 165189,
		},
		[101546] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[328180] = {
			["source"] = "Plaguebinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168627,
		},
		[358871] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Avowed Soulbreaker",
			["npcID"] = 177413,
		},
		[107045] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Yu'lon",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56762,
		},
		[339947] = {
			["source"] = "Indomitable Phalynx",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173552,
		},
		[79872] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Chosen Scrapper",
			["npcID"] = 177586,
		},
		[333299] = {
			["source"] = "Nefarious Darkspeaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 169893,
		},
		[320512] = {
			["source"] = "Rotting Slimeclaw",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 163892,
		},
		[100780] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[321024] = {
			["source"] = "Darksworn Forgehand",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160358,
		},
		[331510] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unyielding Contender",
			["npcID"] = 170838,
		},
		[272432] = {
			["encounterName"] = "Stradama Margrave",
			["source"] = "Wrathguard",
			["encounterID"] = 2386,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 136407,
		},
		[321025] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darksworn Forgehand",
			["npcID"] = 160358,
		},
		[322304] = {
			["encounterName"] = "Stradama Margrave",
			["source"] = "Margrave Stradama",
			["encounterID"] = 2386,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164267,
		},
		[192226] = {
			["encounterName"] = "Mordretha",
			["type"] = "BUFF",
			["source"] = "Liquid Magma Totem",
			["npcID"] = 97369,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2404,
		},
		[321538] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "DEBUFF",
			["source"] = "Degu",
			["npcID"] = 165189,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[326654] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Indri the Treesinger",
			["npcID"] = 157426,
		},
		[388035] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Degu",
			["npcID"] = 165189,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[193635] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Void Tendril",
			["npcID"] = 192337,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[277043] = {
			["source"] = "Prisonbreak Mauler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 154018,
		},
		[353769] = {
			["source"] = "Karthazel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 179136,
		},
		[338936] = {
			["source"] = "Gristlebeak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162588,
		},
		[90361] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Degu",
			["npcID"] = 165189,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[345077] = {
			["source"] = "Venthyr Apprentice",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170044,
		},
		[30151] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Rivingozin",
			["npcID"] = 17252,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[113379] = {
			["encounterName"] = "Lorewalker Stonestep",
			["type"] = "BUFF",
			["source"] = "Peril",
			["encounterID"] = 1417,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 59726,
		},
		[122714] = {
			["source"] = "Lorewalker Stonestep",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56843,
		},
		[320272] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Sathel the Accursed",
			["npcID"] = 164461,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[333827] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Advent Nevermore",
			["npcID"] = 167533,
		},
		[35079] = {
			["encounterName"] = "Mordretha",
			["type"] = "BUFF",
			["source"] = "Faultline",
			["npcID"] = 165189,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2404,
		},
		[320529] = {
			["source"] = "Virulax Blightweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168886,
		},
		[54644] = {
			["source"] = "Klia",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[332550] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shackled Soul",
			["npcID"] = 169875,
		},
		[320277] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "BUFF",
			["source"] = "Sathel the Accursed",
			["npcID"] = 164461,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[345085] = {
			["source"] = "Fledgling Faerie",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 170029,
		},
		[331275] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Advent Nevermore",
			["npcID"] = 167533,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["type"] = "BUFF",
			["source"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 56439,
		},
		[325395] = {
			["encounterName"] = "Domina Venomblade",
			["source"] = "Shadowclone Stalker",
			["encounterID"] = 2385,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 166813,
		},
		[335370] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[345089] = {
			["source"] = "Deos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170035,
		},
		[348159] = {
			["encounterName"] = "Doctor Ickus",
			["source"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164967,
		},
		[360947] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dominated Sentry",
			["npcID"] = 183919,
		},
		[356088] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Obliterator",
			["npcID"] = 177404,
		},
		[323608] = {
			["encounterName"] = "Mordretha",
			["source"] = "Mordretha, the Endless Empress",
			["encounterID"] = 2404,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165946,
		},
		[331537] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Shadowgrasp Totem",
			["npcID"] = 170190,
		},
		[345092] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Leftover Parts",
			["npcID"] = 170016,
		},
		[320542] = {
			["source"] = "Virulax Blightweaver",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168886,
		},
		[353534] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mor'geth",
			["npcID"] = 178958,
		},
		[357115] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawsworn Rager",
			["npcID"] = 177915,
		},
		[345095] = {
			["source"] = "Venthyr Apprentice",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170044,
		},
		[341771] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bone Magus",
			["npcID"] = 170882,
		},
		[157331] = {
			["encounterName"] = "Mordretha",
			["source"] = "Greater Storm Elemental",
			["npcID"] = 77936,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2404,
		},
		[319266] = {
			["source"] = "Bonescarred Veteran",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168331,
		},
		[122527] = {
			["source"] = "Lesser Sha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 58319,
		},
		[333845] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rek the Hardened",
			["npcID"] = 167534,
		},
		[328986] = {
			["source"] = "Unstable Canister",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 169159,
		},
		[331288] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Heavin the Breaker",
			["npcID"] = 167532,
		},
		[328475] = {
			["source"] = "Brood Ambusher",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164737,
		},
		[17253] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thingone",
			["npcID"] = 165189,
		},
		[353540] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Jaina Proudmoore",
			["npcID"] = 179152,
		},
		[332313] = {
			["encounterName"] = "Domina Venomblade",
			["source"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164266,
		},
		[320293] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "BUFF",
			["source"] = "Sathel the Accursed",
			["npcID"] = 164461,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[320805] = {
			["source"] = "Praetorian Artificer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160356,
		},
		[332314] = {
			["encounterName"] = "Domina Venomblade",
			["source"] = "Assassin Stalker",
			["encounterID"] = 2385,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170478,
		},
		[347404] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Acolyte",
			["npcID"] = 155790,
		},
		[352520] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Kevin's Oozeling",
			["npcID"] = 178601,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[320040] = {
			["source"] = "Decaying Flesh Giant",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163882,
		},
		[394975] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Void Lasher",
			["npcID"] = 198757,
		},
		[5672] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Healing Stream Totem",
			["npcID"] = 3527,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[353800] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mor'geth",
			["npcID"] = 178958,
		},
		[394976] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Void Lasher",
			["npcID"] = 198757,
		},
		[336666] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Athanos",
			["npcID"] = 158891,
		},
		[319531] = {
			["encounterName"] = "Kul'tharok",
			["type"] = "DEBUFF",
			["source"] = "Kul'tharok",
			["encounterID"] = 2364,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 162309,
		},
		[337178] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Unyielding Contender",
			["npcID"] = 170838,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[317231] = {
			["encounterName"] = "Xav the Unfallen",
			["source"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162329,
		},
		[330786] = {
			["source"] = "Ickor Bileflesh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 169861,
		},
		[377589] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Casketcatcher",
			["npcID"] = 26125,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[303678] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Skeletal Remains",
			["npcID"] = 155793,
		},
		[330532] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shambling Arbalest",
			["npcID"] = 164510,
		},
		[347668] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[332836] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Putrid Butcher",
			["npcID"] = 169927,
		},
		[323885] = {
			["source"] = "Flayedwing Screamer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 170893,
		},
		[332581] = {
			["source"] = "Blighted Spinebreaker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163894,
		},
		[7870] = {
			["source"] = "Sarlia",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1863,
		},
		[333861] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Harugia the Bloodthirsty",
			["npcID"] = 167536,
		},
		[296523] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Seeker",
			["npcID"] = 152708,
		},
		[51963] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[331818] = {
			["encounterName"] = "Domina Venomblade",
			["type"] = "DEBUFF",
			["source"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164266,
		},
		[333353] = {
			["encounterName"] = "Domina Venomblade",
			["type"] = "DEBUFF",
			["source"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164266,
		},
		[195321] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[106612] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56448,
		},
		[352536] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Kevin's Oozeling",
			["npcID"] = 178601,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[333612] = {
			["source"] = "Skittering Animite",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162268,
		},
		[315454] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sparring Aspirant",
			["npcID"] = 161279,
		},
		[347679] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[298831] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Sentry",
			["npcID"] = 153874,
		},
		[330545] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Ancient Captain",
			["npcID"] = 164506,
		},
		[323640] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodtusk Alpha",
			["npcID"] = 165473,
		},
		[330546] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ancient Captain",
			["npcID"] = 164506,
		},
		[323641] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Bloodtusk Alpha",
			["npcID"] = 165473,
		},
		[328501] = {
			["source"] = "Rigged Plagueborer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168891,
		},
		[334640] = {
			["source"] = "Finger Food",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 171474,
		},
		[330037] = {
			["source"] = "Fen Hornet",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168361,
		},
		[320063] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Dessia the Decapitator",
			["npcID"] = 164451,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[324667] = {
			["encounterName"] = "Globgrog",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164255,
		},
		[320576] = {
			["source"] = "Virulax Blightweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168886,
		},
		[343594] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Fledgling Faerie",
			["npcID"] = 170029,
		},
		[354080] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[356382] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mor'geth",
			["npcID"] = 178958,
		},
		[157348] = {
			["encounterName"] = "Mordretha",
			["type"] = "BUFF",
			["source"] = "Greater Storm Elemental",
			["npcID"] = 77936,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2404,
		},
		[355872] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Obliterator",
			["npcID"] = 177404,
		},
		[330553] = {
			["source"] = "Mel'san",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 166008,
		},
		[325694] = {
			["source"] = "Forsworn Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160359,
		},
		[330810] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shackled Soul",
			["npcID"] = 169875,
		},
		[320069] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Dessia the Decapitator",
			["npcID"] = 164451,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[86603] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wary Survivor",
			["npcID"] = 158916,
		},
		[392959] = {
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[320838] = {
			["source"] = "Praetorian Artificer",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 160356,
		},
		[124007] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Xuen",
			["npcID"] = 63508,
		},
		[331069] = {
			["source"] = "Condensed Mucus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 174405,
		},
		[166302] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Blingtron 7000",
			["npcID"] = 153897,
		},
		[338742] = {
			["source"] = "Runebladed Reaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 172397,
		},
		[61684] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "nasty",
			["npcID"] = 165189,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[356134] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Spectral Feline",
			["npcID"] = 180016,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[359459] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dominated Guardian",
			["npcID"] = 183931,
		},
		[330816] = {
			["source"] = "Ickor Bileflesh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 169861,
		},
		[363041] = {
			["source"] = "Fallen Monk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168073,
		},
		[339768] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Athanos",
			["npcID"] = 158891,
		},
		[17735] = {
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[355881] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Avowed Soulbreaker",
			["npcID"] = 177413,
		},
		[330562] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ancient Captain",
			["npcID"] = 164506,
		},
		[332865] = {
			["encounterName"] = "Globgrog",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164255,
		},
		[369183] = {
			["source"] = "Soul Fragment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186150,
		},
		[330565] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ancient Captain",
			["npcID"] = 164506,
		},
		[124009] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Xuen",
			["npcID"] = 63508,
		},
		[304479] = {
			["source"] = "Writhing Soulmass",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 156015,
		},
		[332868] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Trap Door Rift",
			["npcID"] = 170703,
		},
		[336449] = {
			["source"] = "Decaying Flesh Giant",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163882,
		},
		[188046] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Denizen of the Dream",
			["npcID"] = 198489,
		},
		[336451] = {
			["source"] = "Defender of Many Eyes",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163862,
		},
		[196742] = {
			["source"] = "Earth Spirit",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 69792,
		},
		[335685] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Soulweaver",
			["npcID"] = 157807,
		},
		[1604] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Enraged Glutton",
			["npcID"] = 163415,
		},
		[321367] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Forsworn Punisher",
			["npcID"] = 160357,
		},
		[315742] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Athanos",
			["npcID"] = 158891,
		},
		[114805] = {
			["source"] = "Xiang",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 65317,
		},
		[315744] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Athanos",
			["npcID"] = 158891,
		},
		[334926] = {
			["source"] = "Rigged Plagueborer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168891,
		},
		[317791] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[328533] = {
			["source"] = "Defender of Many Eyes",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 163862,
		},
		[317792] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[392983] = {
			["source"] = "Fire Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69791,
		},
		[326745] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Leftover Parts",
			["npcID"] = 170016,
		},
		[334162] = {
			["source"] = "Malifis",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 166908,
		},
		[361016] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dominated Attendant",
			["npcID"] = 183983,
		},
		[270481] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Demonic Tyrant",
			["npcID"] = 135002,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[331606] = {
			["encounterName"] = "Xav the Unfallen",
			["type"] = "DEBUFF",
			["source"] = "Oppressive Banner",
			["npcID"] = 170234,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2366,
		},
		[335187] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Enraged Glutton",
			["npcID"] = 163415,
		},
		[319843] = {
			["source"] = "Champion Shenrak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165747,
		},
		[113656] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[328539] = {
			["source"] = "Domina Venomblade",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164266,
		},
		[330586] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Putrid Butcher",
			["npcID"] = 169927,
		},
		[24450] = {
			["source"] = "Sabertooth",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[328029] = {
			["source"] = "Plagueroc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168310,
		},
		[328285] = {
			["source"] = "Venthyr Apprentice",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170044,
		},
		[324449] = {
			["encounterName"] = "Mordretha",
			["source"] = "Mordretha, the Endless Empress",
			["encounterID"] = 2404,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165946,
		},
		[319590] = {
			["source"] = "Overseer Atticus",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 160409,
		},
		[31707] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[6660] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arena Challenger",
			["npcID"] = 161757,
		},
		[323683] = {
			["encounterName"] = "Mordretha",
			["source"] = "Mordretha, the Endless Empress",
			["encounterID"] = 2404,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165946,
		},
		[320103] = {
			["source"] = "Slithering Ooze",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164550,
		},
		[326497] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Portal Guardian",
			["npcID"] = 167998,
		},
		[328799] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Karaage",
			["npcID"] = 166741,
		},
		[335193] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Enraged Glutton",
			["npcID"] = 163415,
		},
		[326242] = {
			["encounterName"] = "Globgrog",
			["type"] = "DEBUFF",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164255,
		},
		[263840] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thingone",
			["npcID"] = 165189,
		},
		[326499] = {
			["source"] = "Orb Holder",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167953,
		},
		[330847] = {
			["source"] = "Altered Sentinel",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168244,
		},
		[386601] = {
			["source"] = "Krenvazin",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[330592] = {
			["source"] = "Rancid Gasbag",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163086,
		},
		[326501] = {
			["source"] = "Orb Holder",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167953,
		},
		[323689] = {
			["source"] = "Soul-Rotted Flesh",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 158642,
		},
		[331618] = {
			["encounterName"] = "Xav the Unfallen",
			["source"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2366,
		},
		[331874] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Slimelet",
			["npcID"] = 172581,
		},
		[364355] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Enraged Glutton",
			["npcID"] = 163415,
		},
		[13584] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lumbering Creation",
			["npcID"] = 155824,
		},
		[344663] = {
			["source"] = "Mortanis",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167525,
		},
		[324459] = {
			["encounterName"] = "Globgrog",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164255,
		},
		[250208] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "River Terrapin",
			["npcID"] = 158427,
		},
		[356430] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mor'geth",
			["npcID"] = 178958,
		},
		[327019] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Portal",
			["npcID"] = 162105,
		},
		[320114] = {
			["encounterName"] = "Xav the Unfallen",
			["source"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162329,
		},
		[344922] = {
			["source"] = "Drolkrad",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168148,
		},
		[97164] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Chosen Scrapper",
			["npcID"] = 177586,
		},
		[329322] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Disciple",
			["npcID"] = 155830,
		},
		[114811] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59546,
		},
		[336996] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nekthara the Mangler",
			["npcID"] = 162744,
		},
		[322930] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Predatory Bloodtusk",
			["npcID"] = 158752,
		},
		[54049] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jhaafenn",
			["npcID"] = 417,
		},
		[390193] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Wild Imp",
			["npcID"] = 143622,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[322931] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Predatory Bloodtusk",
			["npcID"] = 158752,
		},
		[321141] = {
			["source"] = "Forsworn Punisher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160357,
		},
		[333929] = {
			["source"] = "Deathfang",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 171591,
		},
		[347740] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[50245] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "crusty",
			["npcID"] = 165189,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[320120] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Paceran the Virulent",
			["npcID"] = 164463,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[321399] = {
			["source"] = "Necrotic Ritualist",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 173414,
		},
		[333931] = {
			["source"] = "Deathfang",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 171591,
		},
		[132951] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mordretha, the Endless Empress",
			["npcID"] = 165946,
		},
		[346208] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawsworn Outrider",
			["npcID"] = 177899,
		},
		[330608] = {
			["source"] = "Rancid Gasbag",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163086,
		},
		[88023] = {
			["source"] = "The Golden Beetle",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 59545,
		},
		[263858] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wasp",
			["npcID"] = 165189,
		},
		[118905] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Capacitor Totem",
			["npcID"] = 61245,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[327029] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shambling Arbalest",
			["npcID"] = 164510,
		},
		[347490] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[16827] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "crusty",
			["npcID"] = 165189,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[330868] = {
			["source"] = "Maniacal Soulbinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160495,
		},
		[118714] = {
			["source"] = "Wise Mari",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56448,
		},
		[330614] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rancid Gasbag",
			["npcID"] = 163086,
		},
		[106055] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56448,
		},
		[89751] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Rivingozin",
			["npcID"] = 17252,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[325245] = {
			["encounterName"] = "Domina Venomblade",
			["source"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164266,
		},
		[342125] = {
			["source"] = "Dokigg the Brutalizer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167538,
		},
		[346985] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[343149] = {
			["source"] = "Overseer Phoneira",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173575,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56732,
		},
		[320644] = {
			["encounterName"] = "Xav the Unfallen",
			["source"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2366,
		},
		[201754] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "crusty",
			["npcID"] = 165189,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[330875] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nefarious Darkspeaker",
			["npcID"] = 169893,
		},
		[320390] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Monstrous Overseer",
			["npcID"] = 174095,
		},
		[354405] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[327296] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Straticus",
			["npcID"] = 158870,
		},
		[346989] = {
			["source"] = "Gushing Slime",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168969,
		},
		[328831] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Karaage",
			["npcID"] = 166741,
		},
		[90328] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Degu",
			["npcID"] = 165189,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[342642] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Teleporter",
			["npcID"] = 174461,
		},
		[277035] = {
			["source"] = "Prisonbreak Mauler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 154018,
		},
		[329325] = {
			["source"] = "Empowered Mawsworn Soulbinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168007,
		},
		[339052] = {
			["source"] = "Whirling Blade",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 173245,
		},
		[338904] = {
			["source"] = "Chosen Ragebringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164884,
		},
		[338957] = {
			["source"] = "Captain Hawken",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165998,
		},
		[36213] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Greater Earth Elemental",
			["npcID"] = 95072,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[330770] = {
			["source"] = "Lich's Phylactery",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 169863,
		},
		[309908] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Athanos",
			["npcID"] = 158891,
		},
		[330782] = {
			["source"] = "Mel'san",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 166008,
		},
		[330597] = {
			["source"] = "Mel'san",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 166008,
		},
		[324085] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "BUFF",
			["source"] = "Dessia the Decapitator",
			["npcID"] = 164451,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[110099] = {
			["source"] = "Minion of Doubt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 57109,
		},
		[329326] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Soulbinder",
			["npcID"] = 155831,
		},
		[319628] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Battleready Phalynx",
			["npcID"] = 178359,
		},
		[57984] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Greater Fire Elemental",
			["npcID"] = 95061,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[386176] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
		},
		[3600] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Earthbind Totem",
			["npcID"] = 2630,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[342135] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nekthara the Mangler",
			["npcID"] = 162744,
		},
		[328069] = {
			["source"] = "Gorgebeak",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168240,
		},
		[341118] = {
			["source"] = "Steeltusk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[326494] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Portal Guardian",
			["npcID"] = 167998,
		},
		[91800] = {
			["source"] = "Risen Ghoul",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[334002] = {
			["source"] = "Chosen Gatewatch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173943,
		},
		[372634] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Chaotic Essence",
			["npcID"] = 189706,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[324490] = {
			["encounterName"] = "Globgrog",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164255,
		},
		[337982] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Xantuth the Blighted",
			["npcID"] = 162872,
		},
		[332646] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Xantuth the Blighted",
			["npcID"] = 162872,
		},
		[106112] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Figment of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56792,
		},
		[344951] = {
			["source"] = "Drolkrad",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168148,
		},
		[330676] = {
			["source"] = "Chosen Warhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 172388,
		},
		[344658] = {
			["source"] = "Mindbender",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 62982,
		},
		[328283] = {
			["source"] = "Fallen Monk",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168074,
		},
		[106736] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56439,
		},
		[342139] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Harugia the Bloodthirsty",
			["npcID"] = 167536,
		},
		[2649] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Bulrog",
			["npcID"] = 165189,
		},
		[350280] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[328651] = {
			["source"] = "Venomous Sniper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167493,
		},
		[327233] = {
			["source"] = "Plaguebelcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168393,
		},
		[342873] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Frostwolf Warrior",
			["npcID"] = 177589,
		},
		[331399] = {
			["encounterName"] = "Stradama Margrave",
			["type"] = "DEBUFF",
			["source"] = "Margrave Stradama",
			["encounterID"] = 2386,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164267,
		},
		[320081] = {
			["source"] = "Fledgling Faerie",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170029,
		},
		[383061] = {
			["encounterName"] = "Mordretha",
			["source"] = "Liquid Magma Totem",
			["npcID"] = 97369,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2404,
		},
		[329395] = {
			["source"] = "Venthyr Apprentice",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170044,
		},
		[340392] = {
			["source"] = "Drolkrad",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168148,
		},
		[357365] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Obliterator",
			["npcID"] = 177404,
		},
		[321355] = {
			["source"] = "Archonic Bulwark",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 162912,
		},
		[357183] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawforged Construct",
			["npcID"] = 177938,
		},
		[333294] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nefarious Darkspeaker",
			["npcID"] = 169893,
		},
		[333703] = {
			["source"] = "Animite Broodmother",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162274,
		},
		[104318] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Wild Imp",
			["npcID"] = 55659,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[327054] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Epilon",
			["npcID"] = 158869,
		},
		[331402] = {
			["source"] = "Darksworn Forgehand",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160358,
		},
		[319626] = {
			["encounterName"] = "Kul'tharok",
			["source"] = "Kul'tharok",
			["npcID"] = 162309,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2364,
		},
		[319539] = {
			["encounterName"] = "Kul'tharok",
			["type"] = "DEBUFF",
			["source"] = "Kul'tharok",
			["encounterID"] = 2364,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 162309,
		},
		[63619] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Mindbender",
			["npcID"] = 62982,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[319127] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cloudrift Runner",
			["npcID"] = 157973,
		},
		[3716] = {
			["source"] = "Tangdok",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[322743] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Skeletal Vestige",
			["npcID"] = 171597,
		},
		[331316] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dokigg the Brutalizer",
			["npcID"] = 167538,
		},
		[114803] = {
			["source"] = "Xiang",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 65317,
		},
		[369185] = {
			["source"] = "Soul Fragment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186150,
		},
		[337131] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Xantuth the Blighted",
			["npcID"] = 162872,
		},
		[340356] = {
			["source"] = "Pestilence Slime",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164705,
		},
		[334899] = {
			["source"] = "Venomous Sniper",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 174802,
		},
		[336910] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Xantuth the Blighted",
			["npcID"] = 162872,
		},
		[333600] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Colossal Feaster",
			["npcID"] = 166728,
		},
		[340357] = {
			["source"] = "Pestilence Slime",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164705,
		},
		[113315] = {
			["encounterName"] = "Lorewalker Stonestep",
			["type"] = "BUFF",
			["source"] = "Strife",
			["encounterID"] = 1417,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 59051,
		},
		[333708] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Maniacal Soulbinder",
			["npcID"] = 160495,
		},
		[343138] = {
			["source"] = "Overseer Phoneira",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173575,
		},
		[319898] = {
			["source"] = "Slime Tentacle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168022,
		},
		[328338] = {
			["source"] = "Venomous Sniper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167493,
		},
		[117570] = {
			["encounterName"] = "Sha of Doubt",
			["type"] = "BUFF",
			["source"] = "Figment of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 56792,
		},
		[334988] = {
			["source"] = "Plaguebound Gargantuan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 171596,
		},
		[58729] = {
			["source"] = "Dwarven Spirit Guide",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 31842,
		},
		[323056] = {
			["source"] = "Kynthia",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160952,
		},
		[3110] = {
			["source"] = "Pipnik",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 416,
		},
		[369187] = {
			["source"] = "Soul Fragment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186150,
		},
		[328084] = {
			["source"] = "Gorgebeak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168240,
		},
		[331412] = {
			["source"] = "Blazing Forgehound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165960,
		},
		[386195] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Dreadstalker",
			["npcID"] = 98035,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[330898] = {
			["source"] = "Fallen Monk",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168033,
		},
		[346121] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawforged Construct",
			["npcID"] = 177938,
		},
		[325272] = {
			["source"] = "Eager Aspirant",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 170035,
		},
		[106062] = {
			["encounterName"] = "Wise Mari",
			["type"] = "BUFF",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 56448,
		},
		[338851] = {
			["source"] = "Mortanis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167525,
		},
		[325552] = {
			["encounterName"] = "Domina Venomblade",
			["source"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164266,
		},
		[347274] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "DEBUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[127801] = {
			["source"] = "Turnip Punching Bag",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 65310,
		},
		[359544] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dominated Guardian",
			["npcID"] = 183931,
		},
		[329110] = {
			["encounterName"] = "Doctor Ickus",
			["source"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164967,
		},
		[328343] = {
			["source"] = "Venomfang",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168747,
		},
		[339954] = {
			["source"] = "Indomitable Phalynx",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173552,
		},
		[347269] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[338850] = {
			["source"] = "Mortanis",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167525,
		},
		[320050] = {
			["encounterName"] = "Xav the Unfallen",
			["source"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 162329,
		},
		[114404] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Void Tendril",
			["npcID"] = 65282,
		},
		[106113] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 56439,
		},
		[338849] = {
			["source"] = "Mortanis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167525,
		},
		[356814] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Avowed Soulbreaker",
			["npcID"] = 177413,
		},
		[332798] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodtusk Alpha",
			["npcID"] = 165473,
		},
		[359547] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dominated Guardian",
			["npcID"] = 183931,
		},
		[330784] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Battlefield Ritualist",
			["npcID"] = 174197,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[338848] = {
			["source"] = "Mortanis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167525,
		},
		[64695] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Earthgrab Totem",
			["npcID"] = 60561,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[317605] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nekthara the Mangler",
			["npcID"] = 162744,
		},
		[112042] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1860,
		},
		[319997] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shambling Arbalest",
			["npcID"] = 164510,
		},
		[341902] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Battlefield Ritualist",
			["npcID"] = 174197,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[329247] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Orb Holder",
			["npcID"] = 169268,
		},
		[339977] = {
			["source"] = "Praetorian Windblade",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 173551,
		},
		[31289] = {
			["source"] = "The Nodding Tiger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59544,
		},
		[327581] = {
			["source"] = "Plaguebelcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168396,
		},
		[333975] = {
			["source"] = "Captain Hawken",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165998,
		},
		[264667] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "BUFF",
			["source"] = "Thingone",
			["npcID"] = 165189,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2391,
		},
		[55078] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Rune Weapon",
			["npcID"] = 27893,
		},
		[357516] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Chained Dusksavage",
			["npcID"] = 177137,
		},
		[338846] = {
			["source"] = "Mortanis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167525,
		},
		[328094] = {
			["source"] = "Plaguebinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168627,
		},
		[337557] = {
			["source"] = "Unbreakable Urtz",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 162853,
		},
		[323107] = {
			["encounterName"] = "Gorechop",
			["source"] = "Oozing Leftovers",
			["npcID"] = 165260,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2365,
		},
		[336893] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azmogal",
			["npcID"] = 162873,
		},
		[19483] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Infernal",
			["npcID"] = 89,
		},
		[346986] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "DEBUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[327584] = {
			["source"] = "Plaguebelcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168393,
		},
		[330909] = {
			["source"] = "Fallen Monk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168073,
		},
		[330901] = {
			["source"] = "Fallen Monk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168033,
		},
		[322087] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Kul'tharok",
			["npcID"] = 162309,
		},
		[322470] = {
			["source"] = "Deos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170035,
		},
		[345238] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Siege Ballista",
			["npcID"] = 165124,
		},
		[259597] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anima-Starved Cloudfeather",
			["npcID"] = 158110,
		},
		[329376] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Fog Dweller",
			["npcID"] = 164897,
		},
		[329245] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Orb Holder",
			["npcID"] = 169268,
		},
		[330911] = {
			["source"] = "Fallen Monk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168073,
		},
		[323110] = {
			["encounterName"] = "Gorechop",
			["source"] = "Oozing Leftovers",
			["npcID"] = 165260,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2365,
		},
		[267997] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[17767] = {
			["source"] = "Charthak",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1860,
		},
		[347283] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[340375] = {
			["source"] = "Drolkrad",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168148,
		},
		[320300] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Sathel the Accursed",
			["npcID"] = 164461,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[227291] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Niuzao",
			["npcID"] = 73967,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[333839] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Rek the Hardened",
			["npcID"] = 167534,
		},
		[326940] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Khaliiq",
			["npcID"] = 173019,
		},
		[267999] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[355210] = {
			["source"] = "Maw Gateway",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 179751,
		},
		[389541] = {
			["source"] = "White Tiger Statue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196581,
		},
		[114599] = {
			["source"] = "Lesser Sha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59598,
		},
		[330403] = {
			["source"] = "Plagueroc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168153,
		},
		[340358] = {
			["source"] = "Plaguebinder",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168627,
		},
		[345237] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Siege Ballista",
			["npcID"] = 165124,
		},
		[89753] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Rivingozin",
			["npcID"] = 17252,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[339963] = {
			["source"] = "Indomitable Phalynx",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173552,
		},
		[355212] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mawsworn Seeker",
			["npcID"] = 178630,
		},
		[338077] = {
			["source"] = "Brood Ambusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164737,
		},
		[342675] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bone Magus",
			["npcID"] = 170882,
		},
		[110125] = {
			["source"] = "Minion of Doubt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 57109,
		},
		[339252] = {
			["source"] = "Mortanis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167525,
		},
		[114826] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59553,
		},
		[345495] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Frothing Pustule",
			["npcID"] = 175519,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[320679] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Unyielding Contender",
			["npcID"] = 170838,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[332708] = {
			["source"] = "Heavin the Breaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 167532,
		},
		[338079] = {
			["source"] = "Brood Ambusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164737,
		},
		[259277] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Soinlove",
			["npcID"] = 165189,
		},
		[331909] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodtusk Alpha",
			["npcID"] = 165473,
		},
		[338847] = {
			["source"] = "Mortanis",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167525,
		},
		[332952] = {
			["source"] = "Gristlebeak",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 162588,
		},
		[91797] = {
			["source"] = "Hammerripper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[360075] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magically Regulated Automa Core",
			["npcID"] = 182210,
		},
		[330664] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frostwolf Warrior",
			["npcID"] = 177589,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Peril",
			["encounterID"] = 1417,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59726,
		},
		[288210] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arena Challenger",
			["npcID"] = 163032,
		},
		[171982] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[324527] = {
			["encounterName"] = "Globgrog",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164255,
		},
		[334713] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Void Terror",
			["npcID"] = 136403,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[199373] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Army of the Dead",
			["npcID"] = 24207,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[320180] = {
			["encounterName"] = "An Affront of Challengers",
			["type"] = "DEBUFF",
			["source"] = "Paceran the Virulent",
			["encounterID"] = 2391,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164463,
		},
		[325551] = {
			["encounterName"] = "Domina Venomblade",
			["type"] = "BUFF",
			["source"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164266,
		},
		[319290] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Diseased Horror",
			["npcID"] = 170690,
		},
		[324652] = {
			["encounterName"] = "Globgrog",
			["source"] = "Globgrog",
			["encounterID"] = 2382,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164255,
		},
		[328365] = {
			["source"] = "Venomous Sniper",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 167493,
		},
		[360334] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dominated Attendant",
			["npcID"] = 183983,
		},
		[345245] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Rancid Gasbag",
			["npcID"] = 163086,
		},
		[339184] = {
			["source"] = "Domina Venomblade",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 164266,
		},
		[205231] = {
			["source"] = "Darkglare",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 103673,
		},
		[335783] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Acolyte",
			["npcID"] = 155790,
		},
		[319560] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anima-Starved Wyrm",
			["npcID"] = 158054,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["type"] = "BUFF",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 56732,
		},
		[334167] = {
			["source"] = "Malifis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 166908,
		},
		[319521] = {
			["encounterName"] = "Kul'tharok",
			["source"] = "Kul'tharok",
			["npcID"] = 162309,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2364,
		},
		[333293] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Bone Magus",
			["npcID"] = 170882,
		},
		[128051] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 59545,
		},
		[340141] = {
			["source"] = "Praetorian Windblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173551,
		},
		[327315] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Straticus",
			["npcID"] = 158870,
		},
		[386542] = {
			["source"] = "Krenvazin",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[135029] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[320517] = {
			["source"] = "Blighted Spinebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 163894,
		},
		[336809] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azmogal",
			["npcID"] = 162873,
		},
		[326835] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ossified Conscript",
			["npcID"] = 167994,
		},
		[228649] = {
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[322232] = {
			["encounterName"] = "Stradama Margrave",
			["source"] = "Margrave Stradama",
			["encounterID"] = 2386,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 164267,
		},
		[372636] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Chaotic Mote",
			["npcID"] = 189707,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[320072] = {
			["source"] = "Decaying Flesh Giant",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163882,
		},
		[320067] = {
			["source"] = "Fledgling Faerie",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170029,
		},
		[321124] = {
			["source"] = "Enforcer Aegeon",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 171009,
		},
		[304075] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Ritualist",
			["npcID"] = 155812,
		},
		[320463] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Leftover Parts",
			["npcID"] = 170016,
		},
		[333231] = {
			["encounterName"] = "An Affront of Challengers",
			["source"] = "Sathel the Accursed",
			["npcID"] = 164461,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2391,
		},
		[336556] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Fog Dweller",
			["npcID"] = 164897,
		},
		[81262] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "BUFF",
			["source"] = "Efflorescence",
			["npcID"] = 47649,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[57723] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "DEBUFF",
			["source"] = "Chaotic Essence",
			["npcID"] = 189706,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[347554] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "DEBUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[49966] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Faultline",
			["npcID"] = 165189,
		},
		[134477] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[89766] = {
			["source"] = "Kowlferil",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[339927] = {
			["source"] = "Goliath Crusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173553,
		},
		[357194] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawforged Construct",
			["npcID"] = 177938,
		},
		[323515] = {
			["encounterName"] = "Gorechop",
			["source"] = "Gorechop",
			["npcID"] = 162317,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2365,
		},
		[59638] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[100784] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Spirit",
			["npcID"] = 69792,
		},
		[315076] = {
			["source"] = "Necrotic Ritualist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 173414,
		},
		[325719] = {
			["source"] = "Forsworn Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 160359,
		},
		[341163] = {
			["encounterName"] = "The Tarragrue",
			["source"] = "Kyrian Goliath",
			["npcID"] = 171396,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2423,
		},
		[360856] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dominated Guardian",
			["npcID"] = 183931,
		},
		[211887] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Elisande",
			["npcID"] = 106643,
		},
		[335720] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Acolyte",
			["npcID"] = 155790,
		},
		[329911] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowlands Wormhole",
			["npcID"] = 169501,
		},
		[342443] = {
			["source"] = "Plagueroc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 168310,
		},
		[330423] = {
			["source"] = "Fungi Stormer",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168572,
		},
		[335680] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Soulweaver",
			["npcID"] = 157807,
		},
		[359334] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Empowered Attendant",
			["npcID"] = 183988,
		},
		[294165] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawsworn Guard",
			["npcID"] = 150958,
		},
		[357431] = {
			["encounterName"] = "The Tarragrue",
			["type"] = "DEBUFF",
			["source"] = "The Tarragrue",
			["npcID"] = 175611,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2423,
		},
		[339932] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Goliath Crusher",
			["npcID"] = 173553,
		},
		[329913] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mawsworn Shadestalker",
			["npcID"] = 171173,
		},
		[212061] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mawsworn Shadestalker",
			["npcID"] = 171173,
		},
	},
	["profiles"] = {
		["Default"] = {
			["aura_breakline_space"] = 0,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1655636933,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["Revision"] = 356,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Scale",
						}, -- [13]
					},
					["Enabled"] = true,
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
						80875, -- [7]
						163746, -- [8]
						152033, -- [9]
					},
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Unit - Important [Plater]",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["semver"] = "",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1630581405,
					["NpcNames"] = {
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["Revision"] = 614,
					["semver"] = "",
					["Name"] = "Aura - Buff Alert [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						323149, -- [1]
						324392, -- [2]
						340544, -- [3]
						342189, -- [4]
						333227, -- [5]
						163689, -- [6]
						227931, -- [7]
						233210, -- [8]
						300207, -- [9]
						301629, -- [10]
						297133, -- [11]
					},
					["PlaterCore"] = 1,
					["Desc"] = "Add the buff name in the trigger box.",
					["Enabled"] = false,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1612879332,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["Revision"] = 187,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["Icon"] = 135945,
					["Enabled"] = false,
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "M+ Spiteful",
					["Desc"] = "Time to die Spiteful affix",
					["semver"] = "",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
						350687, -- [22]
						161090, -- [23]
						156301, -- [24]
						166341, -- [25]
						163379, -- [26]
						166923, -- [27]
						172952, -- [28]
						164426, -- [29]
						163665, -- [30]
						227578, -- [31]
						228528, -- [32]
						227789, -- [33]
						227779, -- [34]
						229608, -- [35]
						227925, -- [36]
						300129, -- [37]
						296522, -- [38]
						294349, -- [39]
						293854, -- [40]
						297834, -- [41]
						299588, -- [42]
						302682, -- [43]
						291946, -- [44]
						295169, -- [45]
						285440, -- [46]
						291613, -- [47]
						283551, -- [48]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655637058,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Revision"] = 464,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Explosion Affix M+ [Plater]",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["semver"] = "",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1630581368,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["Revision"] = 355,
					["semver"] = "",
					["NpcNames"] = {
					},
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Desc"] = "Add the debuff name in the trigger box.",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["Enabled"] = false,
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						332329, -- [1]
						320103, -- [2]
						321406, -- [3]
						335817, -- [4]
						321061, -- [5]
						320141, -- [6]
						326171, -- [7]
						163966, -- [8]
						227966, -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1655636954,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["url"] = "",
					["NpcNames"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["Revision"] = 1065,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["Enabled"] = true,
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						329239, -- [62]
						328400, -- [63]
						164192, -- [64]
						176032, -- [65]
						166335, -- [66]
						166387, -- [67]
						162066, -- [68]
						163689, -- [69]
						227592, -- [70]
						228254, -- [71]
						227999, -- [72]
						227987, -- [73]
						232115, -- [74]
						29580, -- [75]
						227616, -- [76]
						241828, -- [77]
						228606, -- [78]
						227800, -- [79]
						228239, -- [80]
						229706, -- [81]
						294884, -- [82]
						301629, -- [83]
						284219, -- [84]
						301689, -- [85]
						300650, -- [86]
						297835, -- [87]
						300171, -- [88]
						300087, -- [89]
						300414, -- [90]
						300436, -- [91]
						301088, -- [92]
						293729, -- [93]
						291928, -- [94]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["Icon"] = -21623,
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1612879304,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Revision"] = 596,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = false,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						320170, -- [1]
						320171, -- [2]
						320462, -- [3]
						330712, -- [4]
						332170, -- [5]
						333875, -- [6]
						326836, -- [7]
						342135, -- [8]
						333861, -- [9]
						341969, -- [10]
						317963, -- [11]
						327481, -- [12]
						328331, -- [13]
						322614, -- [14]
						325701, -- [15]
						326438, -- [16]
						323538, -- [17]
						321764, -- [18]
						296523, -- [19]
						330755, -- [20]
						295929, -- [21]
						296019, -- [22]
						335685, -- [23]
						170751, -- [24]
						342207, -- [25]
						350554, -- [26]
						348513, -- [27]
						351779, -- [28]
						328180, -- [29]
						319898, -- [30]
						166335, -- [31]
						172810, -- [32]
						172943, -- [33]
						173148, -- [34]
						163376, -- [35]
						228011, -- [36]
						228277, -- [37]
						29928, -- [38]
						228559, -- [39]
						230050, -- [40]
						374743, -- [41]
						227615, -- [42]
						229716, -- [43]
						229083, -- [44]
						299525, -- [45]
						300514, -- [46]
						285388, -- [47]
						294324, -- [48]
						294180, -- [49]
						293827, -- [50]
						297128, -- [51]
						294015, -- [52]
						291865, -- [53]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Cast - Small Alert [Plater]",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["semver"] = "",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1628885394,
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Revision"] = 67,
					["semver"] = "",
					["Name"] = "Auto Set Skull",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Desc"] = "Auto set skull marker",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["Enabled"] = false,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1655636940,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["Revision"] = 407,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["Enabled"] = true,
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
						179124, -- [3]
					},
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Unit - Main Target [P]",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["semver"] = "",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1655636946,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["NpcNames"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Revision"] = 376,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["Enabled"] = false,
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = false,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655636927,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["Icon"] = -21644,
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["Revision"] = 111,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
					["Enabled"] = true,
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Unit - Health Markers [P]",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["semver"] = "",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1612879297,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Revision"] = 461,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = false,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						323489, -- [1]
						323496, -- [2]
						319941, -- [3]
						319592, -- [4]
						334266, -- [5]
						325258, -- [6]
						334913, -- [7]
						326221, -- [8]
						322936, -- [9]
						323236, -- [10]
						321834, -- [11]
						336752, -- [12]
						325418, -- [13]
						324667, -- [14]
						327233, -- [15]
						324368, -- [16]
						324205, -- [17]
						323943, -- [18]
						319713, -- [19]
						320596, -- [20]
						320729, -- [21]
						323608, -- [22]
						330614, -- [23]
						320063, -- [24]
						332708, -- [25]
						334023, -- [26]
						317231, -- [27]
						317943, -- [28]
						320966, -- [29]
						334053, -- [30]
						328458, -- [31]
						321968, -- [32]
						331718, -- [33]
						325793, -- [34]
						330453, -- [35]
						326997, -- [36]
						334051, -- [37]
						292903, -- [38]
						330843, -- [39]
						294173, -- [40]
						189200, -- [41]
						352833, -- [42]
						330403, -- [43]
						166675, -- [44]
						176127, -- [45]
						166380, -- [46]
						162058, -- [47]
						167516, -- [48]
						166923, -- [49]
						178299, -- [50]
						172982, -- [51]
						163390, -- [52]
						173384, -- [53]
						173514, -- [54]
						29513, -- [55]
						227672, -- [56]
						228603, -- [57]
						227339, -- [58]
						227493, -- [59]
						241774, -- [60]
						229611, -- [61]
						229151, -- [62]
						300188, -- [63]
						299475, -- [64]
						299502, -- [65]
						300777, -- [66]
						301681, -- [67]
						298946, -- [68]
						298940, -- [69]
						300424, -- [70]
						283422, -- [71]
						294290, -- [72]
						291973, -- [73]
						293986, -- [74]
						291878, -- [75]
						292264, -- [76]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["semver"] = "",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1641489811,
					["Icon"] = 1029718,
					["url"] = "",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["semver"] = "",
					["Enabled"] = false,
					["Revision"] = 272,
					["Options"] = {
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Name"] = "Fixate [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1641489800,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["url"] = "",
					["NpcNames"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["Revision"] = 844,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["Enabled"] = false,
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						321828, -- [1]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Tank Interrupt [P]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["Icon"] = -21625,
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655636942,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
						150159, -- [7]
					},
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 235,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["Icon"] = 136048,
					["Enabled"] = true,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Unit - Show Energy [Plater]",
					["Desc"] = "Show the energy amount above the nameplate.",
					["semver"] = "",
				}, -- [18]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1655636948,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = false,
					["Revision"] = 270,
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["url"] = "",
					["Author"] = "Tecno-Azralon",
					["Icon"] = 841383,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Name"] = "Fixate On You [Plater]",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Options"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1655636954,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["url"] = "https://wago.io/gKTEW3X4M/1",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["Enabled"] = true,
					["Revision"] = 983,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						335305, -- [62]
						164192, -- [63]
						176032, -- [64]
						166335, -- [65]
						166387, -- [66]
						162066, -- [67]
						163689, -- [68]
						227592, -- [69]
						228254, -- [70]
						227999, -- [71]
						227987, -- [72]
						232115, -- [73]
						29580, -- [74]
						227616, -- [75]
						241828, -- [76]
						228606, -- [77]
						227800, -- [78]
						228239, -- [79]
						229706, -- [80]
						294884, -- [81]
						301629, -- [82]
						284219, -- [83]
						301689, -- [84]
						300650, -- [85]
						297835, -- [86]
						300171, -- [87]
						300087, -- [88]
						300414, -- [89]
						300436, -- [90]
						301088, -- [91]
						293729, -- [92]
						291928, -- [93]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = 1,
					["semver"] = "1.0.0",
					["Icon"] = -21623,
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["OptionsValues"] = {
						["customSize"] = {
							{
								"17", -- [1]
								"120, 16", -- [2]
							}, -- [1]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1655636958,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = -21622,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["Revision"] = 284,
					["Options"] = {
						{
							["Type"] = 7,
							["Key"] = "customSize",
							["Value"] = {
								{
									"17", -- [1]
									"120, 16", -- [2]
								}, -- [1]
							},
							["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 120,
							["Key"] = "width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Width",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 5,
							["Name"] = "Cast Bar Height",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "height",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Set the size of the cast time",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "timerFontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Timer Size",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option7",
							["Value"] = "Time Separators",
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "separatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.5992676615715027, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 1,
							["Key"] = "separatorWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [9]
					},
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["SpellIds"] = {
						354080, -- [1]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Cast - Castbar is Timer [P]",
					["Desc"] = "When a spell resembles more a timer than a spell being cast",
					["semver"] = "",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1641489780,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = -21626,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["Revision"] = 837,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Width",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameHeight",
						}, -- [35]
					},
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						354173, -- [1]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Name"] = "Cast - Important Target [P]",
					["Desc"] = "Highlight the target name",
					["semver"] = "",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
						["timerList"] = {
							{
								"350421", -- [1]
								"5", -- [2]
							}, -- [1]
							{
								"355787", -- [1]
								"15", -- [2]
							}, -- [2]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [3]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [4]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1655636950,
					["semver"] = "",
					["url"] = "",
					["Icon"] = -21623,
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["Revision"] = 1165,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "ColorSettingsAnchor",
							["Value"] = "Color Settings",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Haste Color",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "hasteColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "msColor",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "Moviment Speep Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Cooldown Reduction Color",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Key"] = "cdrColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "SizeSettingsAnchor",
							["Value"] = "Size Settings",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "canChangeSize",
							["Value"] = false,
							["Name"] = "Change Nameplate Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Key"] = "width",
							["Value"] = 100,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Height",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "BorderSettingsAnchor",
							["Value"] = "Border Settings",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Paint Border",
							["Value"] = true,
							["Key"] = "showBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 12",
							["Value"] = 0,
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "NameSettings",
							["Value"] = "Name Settings",
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Name"] = "Haste Name",
							["Value"] = "HASTE",
							["Key"] = "hasteName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Key"] = "cdrName",
							["Value"] = "CDR",
							["Name"] = "Cooldown Reduction Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Name"] = "Movement Speed Name",
							["Value"] = "MS",
							["Key"] = "msName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Relics 9.2 M Dungeons",
					["NpcNames"] = {
						"185685", -- [1]
						"185680", -- [2]
						"185683", -- [3]
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1660259323,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 52,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						227548, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1660340256,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 25,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						285388, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n\n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1666836560,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 346,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						373429, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [27]
			},
			["npcs_renamed"] = {
				[185680] = "Vy Haste",
				[185685] = "Urh CD",
				[185683] = "Wo Invis",
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateOverlapV"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["ShowNamePlateLoseAggroFlash"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowEnemyMinus"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["NamePlateClassificationScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1442",
				["nameplateShowFriendlyTotems"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplatePersonalHideDelaySeconds"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowFriendlyPets"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateOverlapH"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplatePersonalShowWithTarget"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4458",
				["nameplateResourceOnTarget"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["clampTargetNameplateToScreen"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowAll"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateMaxDistance"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowFriendlyMinions"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateTargetBehindMaxDistance"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"ALLNAMEPLATES\"]:4: in function <[string \"ALLNAMEPLATES\"]:1>\n",
				["NamePlateVerticalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1441",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4460",
				["nameplateShowSelf"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplatePersonalShowAlways"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateMotionSpeed"] = "Interface/AddOns/Senjitsu/Senjitsu.lua:10",
				["nameplateGlobalScale"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowEnemyMinions"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowEnemyPets"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Senjitsu/Senjitsu.lua:11",
				["nameplateSelectedScale"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8366",
				["nameplateMinScale"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4459",
				["nameplateOtherTopInset"] = "Interface/AddOns/Senjitsu/Senjitsu.lua:9",
				["nameplateOtherAtBase"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateOccludedAlphaMult"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowEnemyTotems"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowFriendlyGuardians"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["NamePlateHorizontalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1440",
				["nameplateShowDebuffsOnFriendly"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateTargetRadialPosition"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateLargeTopInset"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
				["nameplateShowOnlyNames"] = "Interface\\AddOns\\Plater\\Plater.lua:2019",
			},
			["aura_cache_by_name"] = {
				["volatile bomb"] = {
					178557, -- [1]
					271045, -- [2]
					271047, -- [3]
					271048, -- [4]
					271049, -- [5]
					271050, -- [6]
				},
				["kidney shot"] = {
					408, -- [1]
					27615, -- [2]
					30621, -- [3]
					30832, -- [4]
					32864, -- [5]
					41389, -- [6]
					49616, -- [7]
					72335, -- [8]
					176050, -- [9]
					221792, -- [10]
					283661, -- [11]
					326697, -- [12]
					330469, -- [13]
				},
				["cheap shot"] = {
					1833, -- [1]
					6409, -- [2]
					14902, -- [3]
					30986, -- [4]
					31819, -- [5]
					31843, -- [6]
					34243, -- [7]
					132651, -- [8]
					133002, -- [9]
					138412, -- [10]
					145424, -- [11]
					171953, -- [12]
					188148, -- [13]
					188150, -- [14]
					209238, -- [15]
					257738, -- [16]
					263640, -- [17]
					268987, -- [18]
					268993, -- [19]
					283655, -- [20]
					288588, -- [21]
					326696, -- [22]
				},
				["flayedwing toxin"] = {
					345545, -- [1]
					345546, -- [2]
					345547, -- [3]
				},
				["music of bastion"] = {
					329289, -- [1]
					344873, -- [2]
					344893, -- [3]
					344894, -- [4]
					344895, -- [5]
					344896, -- [6]
					344897, -- [7]
					344912, -- [8]
				},
				["barbed shot"] = {
					62318, -- [1]
					217200, -- [2]
					246152, -- [3]
					246851, -- [4]
					246852, -- [5]
					246853, -- [6]
					246854, -- [7]
					284228, -- [8]
					284253, -- [9]
					284254, -- [10]
					284255, -- [11]
					284257, -- [12]
					284258, -- [13]
					325234, -- [14]
				},
				["serpent sting"] = {
					31975, -- [1]
					35511, -- [2]
					36984, -- [3]
					38859, -- [4]
					38914, -- [5]
					39182, -- [6]
					80009, -- [7]
					87935, -- [8]
					97153, -- [9]
					118253, -- [10]
					125906, -- [11]
					145656, -- [12]
					160503, -- [13]
					162754, -- [14]
					255556, -- [15]
					259293, -- [16]
					259491, -- [17]
					268423, -- [18]
					271788, -- [19]
					282211, -- [20]
					295311, -- [21]
				},
				["shrapnel bomb"] = {
					38753, -- [1]
					130413, -- [2]
					270335, -- [3]
					270336, -- [4]
					270338, -- [5]
					270339, -- [6]
					271020, -- [7]
				},
				["pouch of razor fragments"] = {
					356618, -- [1]
					356620, -- [2]
				},
				["rake"] = {
					1822, -- [1]
					24331, -- [2]
					24332, -- [3]
					27556, -- [4]
					27638, -- [5]
					36332, -- [6]
					53499, -- [7]
					54668, -- [8]
					59881, -- [9]
					65406, -- [10]
					89593, -- [11]
					115871, -- [12]
					120560, -- [13]
					125099, -- [14]
					130191, -- [15]
					147396, -- [16]
					155722, -- [17]
					163505, -- [18]
					217369, -- [19]
					223111, -- [20]
					223954, -- [21]
					231052, -- [22]
					239675, -- [23]
					242931, -- [24]
					250393, -- [25]
					262557, -- [26]
					283699, -- [27]
					283700, -- [28]
					292610, -- [29]
					292611, -- [30]
					319628, -- [31]
				},
				["rip"] = {
					1079, -- [1]
					33912, -- [2]
					36590, -- [3]
					57661, -- [4]
					59989, -- [5]
					71926, -- [6]
					79829, -- [7]
					126120, -- [8]
					133081, -- [9]
					173299, -- [10]
					188353, -- [11]
					208946, -- [12]
					214686, -- [13]
					251332, -- [14]
					256920, -- [15]
					259873, -- [16]
					275440, -- [17]
					283708, -- [18]
					288535, -- [19]
					292626, -- [20]
				},
				["shiv"] = {
					5938, -- [1]
					76511, -- [2]
					159245, -- [3]
					269999, -- [4]
					271443, -- [5]
					277292, -- [6]
					319032, -- [7]
					319504, -- [8]
				},
				["hunter's mark"] = {
					1130, -- [1]
					31615, -- [2]
					56303, -- [3]
					80016, -- [4]
					143882, -- [5]
					145663, -- [6]
					152771, -- [7]
					154170, -- [8]
					163446, -- [9]
					163447, -- [10]
					177114, -- [11]
					189478, -- [12]
					189480, -- [13]
					195515, -- [14]
					250124, -- [15]
					257284, -- [16]
					259556, -- [17]
					259558, -- [18]
					316930, -- [19]
				},
				["moonfire"] = {
					8921, -- [1]
					15798, -- [2]
					20690, -- [3]
					21669, -- [4]
					22206, -- [5]
					23380, -- [6]
					24957, -- [7]
					27737, -- [8]
					31270, -- [9]
					31401, -- [10]
					32373, -- [11]
					32415, -- [12]
					37328, -- [13]
					43545, -- [14]
					45821, -- [15]
					45900, -- [16]
					47072, -- [17]
					52502, -- [18]
					57647, -- [19]
					59987, -- [20]
					65856, -- [21]
					75329, -- [22]
					82816, -- [23]
					101633, -- [24]
					155625, -- [25]
					162623, -- [26]
					164812, -- [27]
					185467, -- [28]
					186624, -- [29]
					208943, -- [30]
					218796, -- [31]
					218797, -- [32]
					224066, -- [33]
					241130, -- [34]
					241144, -- [35]
					243383, -- [36]
					243829, -- [37]
					277921, -- [38]
					278946, -- [39]
					303027, -- [40]
					311738, -- [41]
					315843, -- [42]
					326646, -- [43]
					326654, -- [44]
					328023, -- [45]
					343037, -- [46]
				},
				["intimidation"] = {
					7093, -- [1]
					19577, -- [2]
					24394, -- [3]
					70495, -- [4]
					120558, -- [5]
					123646, -- [6]
					160109, -- [7]
					284378, -- [8]
					284379, -- [9]
					355716, -- [10]
					355719, -- [11]
				},
				["concussive shot"] = {
					5116, -- [1]
					17174, -- [2]
					22914, -- [3]
					27634, -- [4]
					97154, -- [5]
					125909, -- [6]
					142632, -- [7]
					193822, -- [8]
					195521, -- [9]
					203105, -- [10]
					240566, -- [11]
					284217, -- [12]
					292701, -- [13]
					295282, -- [14]
					321023, -- [15]
				},
				["pheromone bomb"] = {
					270323, -- [1]
					270327, -- [2]
					270329, -- [3]
					270332, -- [4]
					271015, -- [5]
				},
				["sap"] = {
					6770, -- [1]
					30980, -- [2]
					73154, -- [3]
					134205, -- [4]
					173107, -- [5]
					193082, -- [6]
					210539, -- [7]
					219692, -- [8]
					257740, -- [9]
					274055, -- [10]
					291391, -- [11]
					292649, -- [12]
					303403, -- [13]
					303406, -- [14]
					324600, -- [15]
				},
				["growl"] = {
					2649, -- [1]
					6795, -- [2]
					31334, -- [3]
					39270, -- [4]
					102649, -- [5]
					173088, -- [6]
					182848, -- [7]
					192640, -- [8]
					210037, -- [9]
					214413, -- [10]
					218312, -- [11]
					218608, -- [12]
					225041, -- [13]
					337176, -- [14]
				},
				["kill command"] = {
					34026, -- [1]
					83381, -- [2]
					118171, -- [3]
					152574, -- [4]
					152637, -- [5]
					152639, -- [6]
					166979, -- [7]
					202198, -- [8]
					205440, -- [9]
					240567, -- [10]
					240568, -- [11]
					259277, -- [12]
					259489, -- [13]
					263186, -- [14]
					268783, -- [15]
					282206, -- [16]
					284266, -- [17]
					284381, -- [18]
					284384, -- [19]
					291367, -- [20]
					291369, -- [21]
				},
				["liquefying ooze"] = {
					345466, -- [1]
				},
				["devotion aura"] = {
					465, -- [1]
					8258, -- [2]
					17232, -- [3]
					41452, -- [4]
					52442, -- [5]
					57740, -- [6]
					58944, -- [7]
					165712, -- [8]
					344218, -- [9]
					353101, -- [10]
				},
				["thrash"] = {
					3391, -- [1]
					3417, -- [2]
					8876, -- [3]
					12787, -- [4]
					21919, -- [5]
					54913, -- [6]
					74979, -- [7]
					77758, -- [8]
					106830, -- [9]
					106832, -- [10]
					131657, -- [11]
					131659, -- [12]
					131993, -- [13]
					131994, -- [14]
					131996, -- [15]
					158175, -- [16]
					158176, -- [17]
					158435, -- [18]
					158436, -- [19]
					158723, -- [20]
					158790, -- [21]
					161129, -- [22]
					163040, -- [23]
					164124, -- [24]
					172035, -- [25]
					174081, -- [26]
					174082, -- [27]
					174916, -- [28]
					174917, -- [29]
					177422, -- [30]
					181269, -- [31]
					182846, -- [32]
					192090, -- [33]
					196345, -- [34]
					207487, -- [35]
					211141, -- [36]
					219286, -- [37]
					219339, -- [38]
					220964, -- [39]
					222814, -- [40]
					242323, -- [41]
					250428, -- [42]
					256409, -- [43]
					257266, -- [44]
					257271, -- [45]
					260321, -- [46]
					260322, -- [47]
					261892, -- [48]
					265539, -- [49]
					275043, -- [50]
					292576, -- [51]
					297382, -- [52]
					297383, -- [53]
					300109, -- [54]
					300110, -- [55]
					301061, -- [56]
					308556, -- [57]
					313970, -- [58]
					313971, -- [59]
					319219, -- [60]
					319222, -- [61]
					319223, -- [62]
					320843, -- [63]
					326409, -- [64]
					326426, -- [65]
					329564, -- [66]
				},
				["charged"] = {
					37234, -- [1]
					136742, -- [2]
					148296, -- [3]
					149328, -- [4]
					172178, -- [5]
					174407, -- [6]
					207566, -- [7]
					207567, -- [8]
					260102, -- [9]
					261838, -- [10]
					277186, -- [11]
					288016, -- [12]
				},
				["harpoon"] = {
					108038, -- [1]
					125245, -- [2]
					147613, -- [3]
					147625, -- [4]
					186260, -- [5]
					190925, -- [6]
					190927, -- [7]
					209035, -- [8]
					212331, -- [9]
					212353, -- [10]
					231550, -- [11]
					232977, -- [12]
					232978, -- [13]
					232979, -- [14]
					235913, -- [15]
					271282, -- [16]
					271625, -- [17]
					288386, -- [18]
					288387, -- [19]
					324485, -- [20]
					324488, -- [21]
					324493, -- [22]
					348486, -- [23]
				},
				["freezing trap"] = {
					3355, -- [1]
					27753, -- [2]
					31933, -- [3]
					32419, -- [4]
					37368, -- [5]
					41085, -- [6]
					43414, -- [7]
					43415, -- [8]
					43447, -- [9]
					43448, -- [10]
					44136, -- [11]
					55040, -- [12]
					153574, -- [13]
					173866, -- [14]
					187650, -- [15]
					187651, -- [16]
					203337, -- [17]
					204460, -- [18]
					212365, -- [19]
					240571, -- [20]
					240572, -- [21]
					240574, -- [22]
					278463, -- [23]
					278464, -- [24]
					278466, -- [25]
					278468, -- [26]
					321159, -- [27]
					321164, -- [28]
					321165, -- [29]
					321177, -- [30]
				},
				["marksman's advantage"] = {
					339264, -- [1]
					339284, -- [2]
				},
				["chains of ice"] = {
					113, -- [1]
					512, -- [2]
					22744, -- [3]
					22745, -- [4]
					29991, -- [5]
					39268, -- [6]
					45524, -- [7]
					53534, -- [8]
					58464, -- [9]
					61077, -- [10]
					65173, -- [11]
					65174, -- [12]
					66020, -- [13]
					72171, -- [14]
					79899, -- [15]
					96294, -- [16]
					283558, -- [17]
					304831, -- [18]
				},
				["deep wounds"] = {
					23256, -- [1]
					43100, -- [2]
					115767, -- [3]
					115768, -- [4]
					262115, -- [5]
					262304, -- [6]
				},
				["concentration aura"] = {
					79963, -- [1]
					81455, -- [2]
					317920, -- [3]
					344220, -- [4]
				},
				["flayed shot"] = {
					324149, -- [1]
					337046, -- [2]
				},
				["retribution aura"] = {
					8990, -- [1]
					13008, -- [2]
					79976, -- [3]
					165746, -- [4]
					183435, -- [5]
					317906, -- [6]
					342227, -- [7]
					342228, -- [8]
					342229, -- [9]
					344217, -- [10]
				},
				["bolster"] = {
					209859, -- [1]
					280001, -- [2]
				},
				["hand of hindrance"] = {
					183218, -- [1]
				},
				["nimble steps"] = {
					352366, -- [1]
					354050, -- [2]
					354051, -- [3]
					354052, -- [4]
				},
				["scare beast"] = {
					1513, -- [1]
				},
				["summon phantasmal possessor"] = {
					32857, -- [1]
				},
				["intimidating shout"] = {
					5246, -- [1]
					65930, -- [2]
					65931, -- [3]
					95199, -- [4]
					97933, -- [5]
					97934, -- [6]
					155582, -- [7]
					164464, -- [8]
					164465, -- [9]
					167259, -- [10]
					167261, -- [11]
					169432, -- [12]
					223169, -- [13]
					236353, -- [14]
					240190, -- [15]
					273867, -- [16]
					316593, -- [17]
					316594, -- [18]
					316595, -- [19]
				},
				["untouchable"] = {
					126646, -- [1]
					295277, -- [2]
					295278, -- [3]
				},
				["internal bleeding"] = {
					135345, -- [1]
					154904, -- [2]
					154953, -- [3]
					270343, -- [4]
				},
				["charge"] = {
					100, -- [1]
					20508, -- [2]
					22120, -- [3]
					22911, -- [4]
					24023, -- [5]
					24193, -- [6]
					24315, -- [7]
					24408, -- [8]
					25821, -- [9]
					29320, -- [10]
					29847, -- [11]
					31733, -- [12]
					32323, -- [13]
					33709, -- [14]
					34846, -- [15]
					35412, -- [16]
					35570, -- [17]
					35754, -- [18]
					36058, -- [19]
					36140, -- [20]
					36509, -- [21]
					37511, -- [22]
					38461, -- [23]
					39574, -- [24]
					40602, -- [25]
					41581, -- [26]
					42003, -- [27]
					43519, -- [28]
					43651, -- [29]
					43807, -- [30]
					44357, -- [31]
					44884, -- [32]
					49758, -- [33]
					51492, -- [34]
					51756, -- [35]
					51842, -- [36]
					52538, -- [37]
					52577, -- [38]
					52856, -- [39]
					53148, -- [40]
					54460, -- [41]
					55317, -- [42]
					55530, -- [43]
					57627, -- [44]
					58619, -- [45]
					58991, -- [46]
					59040, -- [47]
					59611, -- [48]
					60067, -- [49]
					61685, -- [50]
					62563, -- [51]
					62613, -- [52]
					62614, -- [53]
					62874, -- [54]
					62960, -- [55]
					62961, -- [56]
					62977, -- [57]
					63003, -- [58]
					63010, -- [59]
					63661, -- [60]
					63665, -- [61]
					64591, -- [62]
					64719, -- [63]
					65927, -- [64]
					66481, -- [65]
					68282, -- [66]
					68284, -- [67]
					68301, -- [68]
					68307, -- [69]
					68321, -- [70]
					68498, -- [71]
					68501, -- [72]
					69879, -- [73]
					71553, -- [74]
					74399, -- [75]
					75756, -- [76]
					75915, -- [77]
					77876, -- [78]
					79156, -- [79]
					79904, -- [80]
					80183, -- [81]
					81574, -- [82]
					85250, -- [83]
					87930, -- [84]
					88288, -- [85]
					88295, -- [86]
					88540, -- [87]
					90928, -- [88]
					91187, -- [89]
					91309, -- [90]
					93515, -- [91]
					97164, -- [92]
					97557, -- [93]
					97558, -- [94]
					104056, -- [95]
					105771, -- [96]
					109128, -- [97]
					125277, -- [98]
					126664, -- [99]
					127724, -- [100]
					133253, -- [101]
					135890, -- [102]
					135905, -- [103]
					135906, -- [104]
					136769, -- [105]
					138660, -- [106]
					138796, -- [107]
					138827, -- [108]
					138845, -- [109]
					138848, -- [110]
					138850, -- [111]
					138851, -- [112]
					139961, -- [113]
					141193, -- [114]
					141198, -- [115]
					141202, -- [116]
					141294, -- [117]
					144166, -- [118]
					144608, -- [119]
					144609, -- [120]
					145048, -- [121]
					146740, -- [122]
					147640, -- [123]
					148293, -- [124]
					148294, -- [125]
					149325, -- [126]
					149326, -- [127]
					150502, -- [128]
					153635, -- [129]
					154547, -- [130]
					154548, -- [131]
					154549, -- [132]
					154994, -- [133]
					155114, -- [134]
					155235, -- [135]
					156086, -- [136]
					158022, -- [137]
					160167, -- [138]
					160168, -- [139]
					163635, -- [140]
					165216, -- [141]
					166973, -- [142]
					166975, -- [143]
					168627, -- [144]
					168628, -- [145]
					172179, -- [146]
					175543, -- [147]
					181789, -- [148]
					181796, -- [149]
					181886, -- [150]
					182556, -- [151]
					184121, -- [152]
					184167, -- [153]
					184195, -- [154]
					184197, -- [155]
					184406, -- [156]
					184864, -- [157]
					184881, -- [158]
					184930, -- [159]
					188503, -- [160]
					190278, -- [161]
					190329, -- [162]
					191531, -- [163]
					191532, -- [164]
					191535, -- [165]
					191643, -- [166]
					194247, -- [167]
					194591, -- [168]
					194592, -- [169]
					194593, -- [170]
					198337, -- [171]
					198729, -- [172]
					199172, -- [173]
					199173, -- [174]
					199174, -- [175]
					199575, -- [176]
					201681, -- [177]
					203365, -- [178]
					203372, -- [179]
					203418, -- [180]
					206636, -- [181]
					212406, -- [182]
					215214, -- [183]
					215217, -- [184]
					215803, -- [185]
					215807, -- [186]
					218104, -- [187]
					218428, -- [188]
					220383, -- [189]
					220617, -- [190]
					221175, -- [191]
					221403, -- [192]
					224490, -- [193]
					224491, -- [194]
					224516, -- [195]
					228602, -- [196]
					228603, -- [197]
					229108, -- [198]
					232134, -- [199]
					232177, -- [200]
					232178, -- [201]
					233334, -- [202]
					233507, -- [203]
					233511, -- [204]
					235693, -- [205]
					236027, -- [206]
					236217, -- [207]
					236220, -- [208]
					236365, -- [209]
					236366, -- [210]
					236599, -- [211]
					240180, -- [212]
					242741, -- [213]
					243242, -- [214]
					244880, -- [215]
					246123, -- [216]
					246124, -- [217]
					246125, -- [218]
					248837, -- [219]
					248839, -- [220]
					249089, -- [221]
					249101, -- [222]
					251920, -- [223]
					252849, -- [224]
					253078, -- [225]
					255946, -- [226]
					256089, -- [227]
					256091, -- [228]
					256378, -- [229]
					256379, -- [230]
					260290, -- [231]
					260292, -- [232]
					260303, -- [233]
					260312, -- [234]
					261488, -- [235]
					265403, -- [236]
					271824, -- [237]
					272356, -- [238]
					275087, -- [239]
					275651, -- [240]
					281528, -- [241]
					281529, -- [242]
					282511, -- [243]
					283407, -- [244]
					283408, -- [245]
					287039, -- [246]
					292703, -- [247]
					293129, -- [248]
					293130, -- [249]
					297243, -- [250]
					299091, -- [251]
					300643, -- [252]
					301681, -- [253]
					301686, -- [254]
					304255, -- [255]
					304256, -- [256]
					305093, -- [257]
					308978, -- [258]
					308979, -- [259]
					312646, -- [260]
					313700, -- [261]
					313701, -- [262]
					314315, -- [263]
					319157, -- [264]
					320661, -- [265]
					320679, -- [266]
					321627, -- [267]
					321628, -- [268]
					323593, -- [269]
					328944, -- [270]
					328945, -- [271]
					329987, -- [272]
					334100, -- [273]
					338308, -- [274]
					339623, -- [275]
					340027, -- [276]
					340031, -- [277]
					341206, -- [278]
					341208, -- [279]
					341219, -- [280]
					341226, -- [281]
					341571, -- [282]
					342251, -- [283]
					342820, -- [284]
					343259, -- [285]
					344966, -- [286]
					357522, -- [287]
					357531, -- [288]
				},
				["blind"] = {
					2094, -- [1]
					21060, -- [2]
					34654, -- [3]
					34694, -- [4]
					42972, -- [5]
					43433, -- [6]
					65960, -- [7]
					127886, -- [8]
					175276, -- [9]
					178058, -- [10]
					214299, -- [11]
					257748, -- [12]
					285136, -- [13]
				},
				["condemned"] = {
					317491, -- [1]
				},
				["serrated bone spike"] = {
					324073, -- [1]
					324074, -- [2]
					325333, -- [3]
					328547, -- [4]
					328548, -- [5]
					328549, -- [6]
					335940, -- [7]
					341277, -- [8]
					343217, -- [9]
				},
				["sinful revelation"] = {
					309623, -- [1]
					324260, -- [2]
				},
				["hamstring"] = {
					1715, -- [1]
					9080, -- [2]
					26141, -- [3]
					26211, -- [4]
					27584, -- [5]
					29667, -- [6]
					30989, -- [7]
					31553, -- [8]
					38262, -- [9]
					38995, -- [10]
					48639, -- [11]
					62845, -- [12]
					87704, -- [13]
					144582, -- [14]
					162350, -- [15]
					188624, -- [16]
					198374, -- [17]
					230003, -- [18]
					240196, -- [19]
					329310, -- [20]
				},
				["crippling poison"] = {
					3408, -- [1]
					3409, -- [2]
					25809, -- [3]
					30981, -- [4]
					44289, -- [5]
					115196, -- [6]
					132747, -- [7]
					132748, -- [8]
					169622, -- [9]
					169623, -- [10]
					283648, -- [11]
					283649, -- [12]
				},
				["crusader aura"] = {
					32223, -- [1]
					225454, -- [2]
					328557, -- [3]
					344219, -- [4]
				},
				["mortal wounds"] = {
					115804, -- [1]
					201075, -- [2]
					201091, -- [3]
					213667, -- [4]
					246249, -- [5]
				},
				["curse of exhaustion"] = {
					29539, -- [1]
					46434, -- [2]
					65815, -- [3]
					77357, -- [4]
					164841, -- [5]
					167587, -- [6]
					170785, -- [7]
					183350, -- [8]
					330371, -- [9]
					334275, -- [10]
				},
				["storm bolt"] = {
					20685, -- [1]
					55958, -- [2]
					61129, -- [3]
					61628, -- [4]
					73564, -- [5]
					84831, -- [6]
					91853, -- [7]
					107570, -- [8]
					132169, -- [9]
					133396, -- [10]
					133990, -- [11]
					139275, -- [12]
					222897, -- [13]
					259867, -- [14]
					259870, -- [15]
					317277, -- [16]
					348599, -- [17]
				},
				["die by the sword"] = {
					118038, -- [1]
					236385, -- [2]
					315948, -- [3]
				},
				["lightning shield"] = {
					8788, -- [1]
					12550, -- [2]
					13585, -- [3]
					15507, -- [4]
					19514, -- [5]
					20545, -- [6]
					23551, -- [7]
					23552, -- [8]
					25020, -- [9]
					27635, -- [10]
					28820, -- [11]
					28821, -- [12]
					31765, -- [13]
					39067, -- [14]
					41151, -- [15]
					50831, -- [16]
					51620, -- [17]
					51776, -- [18]
					52651, -- [19]
					56221, -- [20]
					59025, -- [21]
					59845, -- [22]
					61570, -- [23]
					75381, -- [24]
					82910, -- [25]
					96414, -- [26]
					101639, -- [27]
					131844, -- [28]
					135999, -- [29]
					138714, -- [30]
					149565, -- [31]
					164470, -- [32]
					170980, -- [33]
					192106, -- [34]
					192109, -- [35]
					232857, -- [36]
					247584, -- [37]
					261872, -- [38]
					261873, -- [39]
					263246, -- [40]
					268831, -- [41]
					268851, -- [42]
					268938, -- [43]
					273324, -- [44]
					273411, -- [45]
					273430, -- [46]
					273446, -- [47]
					274336, -- [48]
					291512, -- [49]
					344174, -- [50]
				},
				["dire beast: hawk"] = {
					208652, -- [1]
					208679, -- [2]
					208684, -- [3]
					208819, -- [4]
					240698, -- [5]
				},
				["disable"] = {
					116095, -- [1]
					116706, -- [2]
					203543, -- [3]
					292785, -- [4]
					311672, -- [5]
					332145, -- [6]
					343731, -- [7]
					345358, -- [8]
					345360, -- [9]
					345362, -- [10]
				},
			},
			["indicator_raidmark_scale"] = 0.7999999523162842,
			["cast_statusbar_spark_alpha"] = 0.7999999523162842,
			["aura2_y_offset"] = 40,
			["npc_cache"] = {
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[22885] = {
					"Dragon Turtle", -- [1]
					"Black Temple", -- [2]
				},
				[23397] = {
					"Illidari Blood Lord", -- [1]
					"Black Temple", -- [2]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[16243] = {
					"Plague Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[73095] = {
					"Blackfuse Engineer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[82310] = {
					"Stonehide Riverbeast", -- [1]
					"Ashran", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
				},
				[168700] = {
					"Pestering Fiend", -- [1]
					"Castle Nathria", -- [2]
				},
				[85382] = {
					"Wrynn's Vanguard Battle Standard", -- [1]
					"Ashran", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[44999] = {
					"Shen'dralar Watcher", -- [1]
					"Dire Maul", -- [2]
				},
				[9268] = {
					"Smolderthorn Berserker", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[92038] = {
					"Salivating Bloodthirster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[84359] = {
					"Grom'kar Shadowblade", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[85383] = {
					"Vol'jin's Spear Battle Standard", -- [1]
					"Ashran", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[88967] = {
					"Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[180990] = {
					"The Jailer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[10420] = {
					"Risen Initiate", -- [1]
					"Stratholme", -- [2]
				},
				[92039] = {
					"Bleeding Grunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[58822] = {
					"Risen Guard", -- [1]
					"Scholomance", -- [2]
				},
				[42696] = {
					"Stonecore Warbringer", -- [1]
					"The Stonecore", -- [2]
				},
				[35273] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				[137989] = {
					"Embalming Fluid", -- [1]
					"Kings' Rest", -- [2]
				},
				[114565] = {
					"Guardian of the Forgotten Queen", -- [1]
					"Alterac Valley", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[75658] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[108934] = {
					"Tainted Blood", -- [1]
					"The Nighthold", -- [2]
				},
				[125828] = {
					"Drunkwitch", -- [1]
					"Atal'Dazar", -- [2]
				},
				[23398] = {
					"Angered Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				[39625] = {
					"General Umbriss", -- [1]
					"Grim Batol", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[92041] = {
					"Bleeding Darkcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[50376] = {
					"Angered Earth", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[58823] = {
					"Scholomance Neophyte", -- [1]
					"Scholomance", -- [2]
				},
				[78731] = {
					"Khatuun", -- [1]
					"Auchindoun", -- [2]
				},
				[13236] = {
					"Primalist Thurloga", -- [1]
					"Alterac Valley", -- [2]
				},
				[13300] = {
					"Lieutenant Mancuso", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[92554] = {
					"Mek'barash", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[84875] = {
					"Ancient Inferno", -- [1]
					"Ashran", -- [2]
				},
				[166663] = {
					"Ilapos", -- [1]
					"Silvershard Mines", -- [2]
				},
				[184069] = {
					"Dominated Excavator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[88971] = {
					"Magma Totem", -- [1]
					"Ashran", -- [2]
				},
				[73101] = {
					"Cursed Wolf", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[75149] = {
					"Aggem Thorncurse", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[84876] = {
					"Ashmaul Destroyer", -- [1]
					"Ashran", -- [2]
				},
				[14772] = {
					"East Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[102282] = {
					"Lord Malgath", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166665] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[44234] = {
					"Vicious Leech", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[97163] = {
					"Cursed Falke", -- [1]
					"Maw of Souls", -- [2]
				},
				[22887] = {
					"High Warlord Naj'entus", -- [1]
					"Black Temple", -- [2]
				},
				[84877] = {
					"Ashmaul Stoneshaper", -- [1]
					"Ashran", -- [2]
				},
				[23399] = {
					"Suffering Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[94604] = {
					"Gorebound Corruptor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[16244] = {
					"Infectious Ghoul", -- [1]
					"Naxxramas", -- [2]
				},
				[16488] = {
					"Arcane Anomaly", -- [1]
					"Karazhan", -- [2]
				},
				[58569] = {
					"Scarlet Purifier", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[84878] = {
					"Ashmaul Pyromancer", -- [1]
					"Ashran", -- [2]
				},
				[78735] = {
					"Zar'shuul", -- [1]
					"Auchindoun", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[178956] = {
					"Terrified Veilwing", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
				},
				[75152] = {
					"Death Speaker Jargba", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[178957] = {
					"Empowered Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[9717] = {
					"Bloodaxe Summoner", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[95630] = {
					"Construct Peacekeeper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[10421] = {
					"Risen Defender", -- [1]
					"Stratholme", -- [2]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[77201] = {
					"Fireblade Invoker", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[156434] = {
					"Crippling Pride", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[103822] = {
					"Treant", -- [1]
					"Eye of the Storm", -- [2]
				},
				[10997] = {
					"Willey Hopebreaker", -- [1]
					"Stratholme", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[23400] = {
					"Illidari Archon", -- [1]
					"Black Temple", -- [2]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				[150293] = {
					"Mechagon Prowler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[24552] = {
					"Sliver", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[125837] = {
					"Torment of Aman'Thul", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[77203] = {
					"Grom'kar Grimshot", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[150295] = {
					"Tank Buster MK1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[61131] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[61387] = {
					"Quilen Guardian", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
				},
				[77204] = {
					"Grom'kar Shadowblade", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[169751] = {
					"Ashen Wasp", -- [1]
					"Theater of Pain", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[75157] = {
					"Aku'mai the Venomous", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[7291] = {
					"Galgann Firehammer", -- [1]
					"Uldaman", -- [2]
				},
				[77205] = {
					"Burning Blademaster", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[43214] = {
					"Slabhide", -- [1]
					"The Stonecore", -- [2]
				},
				[176920] = {
					"Domination Arrow", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[61644] = {
					"Dark Shaman Researcher", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[91540] = {
					"Illusionary Outcast", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[92564] = {
					"Mo'arg Painbringer", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[23401] = {
					"Hungering Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[95636] = {
					"Sargerei Adjutant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[113554] = {
					"Astral Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[24553] = {
					"Apoko", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[166684] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77207] = {
					"Grom'kar Deadeye", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[113555] = {
					"Xalian Felblaze", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
				},
				[145185] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162591] = {
					"Ben Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[95638] = {
					"Sargerei Bannerman", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[151329] = {
					"Warden Skoldus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[135971] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[177950] = {
					"Soul Prison", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165664] = {
					"Befouler Ahnqat", -- [1]
					"Isle of Conquest", -- [2]
				},
				[10422] = {
					"Risen Sorcerer", -- [1]
					"Stratholme", -- [2]
				},
				[78233] = {
					"Darkshard Crystalback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[87448] = {
					"Ironworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[23018] = {
					"Shadowmoon Houndmaster", -- [1]
					"Black Temple", -- [2]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[23402] = {
					"Illidari Battle-mage", -- [1]
					"Black Temple", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[55503] = {
					"Legion Demon", -- [1]
					"Well of Eternity", -- [2]
				},
				[95640] = {
					"Sargerei Soul Cleaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122773] = {
					"Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16491] = {
					"Mana Feeder", -- [1]
					"Karazhan", -- [2]
				},
				[57807] = {
					"Twilight Frost Evoker", -- [1]
					"Dragon Soul", -- [2]
				},
				[158501] = {
					"Warmaster Laggrond", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[153382] = {
					"Maw of the Maw", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[94617] = {
					"Glynevere", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[18155] = {
					"Bloodfalcon", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
				},
				[74652] = {
					"Razorfen Thornbolt", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[19307] = {
					"Nexus Terror", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[94618] = {
					"Cattwen", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[95642] = {
					"Korvos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[39890] = {
					"Twilight Earthshaper", -- [1]
					"Grim Batol", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[61392] = {
					"Harthak Flameseeker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[23147] = {
					"Shadowmoon Grunt", -- [1]
					"Black Temple", -- [2]
				},
				[84893] = {
					"Goregore", -- [1]
					"Ashran", -- [2]
				},
				[23403] = {
					"Illidari Assassin", -- [1]
					"Black Temple", -- [2]
				},
				[15990] = {
					"Kel'Thuzad", -- [1]
					"Naxxramas", -- [2]
				},
				[133935] = {
					"Animated Guardian", -- [1]
					"Kings' Rest", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[24555] = {
					"Garaxxas", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[90525] = {
					"Eredar Chaos Guard", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[33236] = {
					"Steelforged Defender", -- [1]
					"Ulduar", -- [2]
				},
				[165677] = {
					"Brittlebark Manifestation", -- [1]
					"Eye of the Storm", -- [2]
				},
				[176940] = {
					"Soulember", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[36564] = {
					"Soulguard Bonecaster", -- [1]
					"The Forge of Souls", -- [2]
				},
				[122778] = {
					"Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[4860] = {
					"Stone Steward", -- [1]
					"Uldaman", -- [2]
				},
				[184109] = {
					"Remnant of Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[33237] = {
					"Ulduar Colossus", -- [1]
					"Ulduar", -- [2]
				},
				[10423] = {
					"Risen Priest", -- [1]
					"Stratholme", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[74146] = {
					"Podling Nibbler", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[158515] = {
					"Lieutenant Haggerdin", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[125340] = {
					"Shadewing", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[39381] = {
					"Crimsonborne Guardian", -- [1]
					"Grim Batol", -- [2]
				},
				[133943] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[24556] = {
					"Zelfan", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24684] = {
					"Sunblade Blood Knight", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[133944] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[84386] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[85410] = {
					"Disturbed Podling", -- [1]
					"Ashran", -- [2]
				},
				[94113] = {
					"Rukmaz", -- [1]
					"Ashran", -- [2]
				},
				[97185] = {
					"The Grimewalker", -- [1]
					"Maw of Souls", -- [2]
				},
				[81315] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[45269] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[99233] = {
					"Ember", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[75172] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111008] = {
					"Hatespawn Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[79268] = {
					"Stormshield Footman", -- [1]
					"Ashran", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14327] = {
					"Lethtendris", -- [1]
					"Dire Maul", -- [2]
				},
				[7228] = {
					"Ironaya", -- [1]
					"Uldaman", -- [2]
				},
				[14775] = {
					"Stonehearth Warmaster", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[34775] = {
					"Demolisher", -- [1]
					"Isle of Conquest", -- [2]
				},
				[79269] = {
					"Warspear Grunt", -- [1]
					"Ashran", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[176953] = {
					"Mawsworn Flamehand", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[81318] = {
					"Iron Gunnery Sergeant", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[24557] = {
					"Kagani Nightstrike", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24685] = {
					"Sunblade Magister", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[125857] = {
					"Lashing Voidling", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[118690] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[59605] = {
					"Sodden Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[176956] = {
					"Shadowsteel Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[55510] = {
					"Abyssal Doombringer", -- [1]
					"Well of Eternity", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[10424] = {
					"Risen Gallant", -- [1]
					"Stratholme", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[84904] = {
					"Oraggro", -- [1]
					"Ashran", -- [2]
				},
				[10808] = {
					"Timmy the Cruel", -- [1]
					"Stratholme", -- [2]
				},
				[61398] = {
					"Xin the Weaponmaster", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[125860] = {
					"Rift Warden", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[24558] = {
					"Ellrys Duskhallow", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24686] = {
					"Sunblade Warlock", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[33754] = {
					"Dark Rune Thunderer", -- [1]
					"Ulduar", -- [2]
				},
				[17007] = {
					"Lady Keira Berrybuck", -- [1]
					"Karazhan", -- [2]
				},
				[84906] = {
					"Ashmaul Magma Caster", -- [1]
					"Ashran", -- [2]
				},
				[60375] = {
					"Zandalari Skullcharger", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[13176] = {
					"Smith Regzar", -- [1]
					"Alterac Valley", -- [2]
				},
				[61399] = {
					"Glintrok Scout", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
				},
				[63191] = {
					"Garalon", -- [1]
					"Heart of Fear", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[74669] = {
					"Crystalfire Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[33755] = {
					"Dark Rune Ravager", -- [1]
					"Ulduar", -- [2]
				},
				[76205] = {
					"Blooded Bladefeather", -- [1]
					"Skyreach", -- [2]
				},
				[34267] = {
					"Parts Recovery Technician", -- [1]
					"Ulduar", -- [2]
				},
				[14776] = {
					"Tower Point Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[127911] = {
					"Void-Blade Zedaat", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[74158] = {
					"Kor'kron Gunner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[15928] = {
					"Thaddius", -- [1]
					"Naxxramas", -- [2]
				},
				[16056] = {
					"Diseased Maggot", -- [1]
					"Naxxramas", -- [2]
				},
				[134991] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
				},
				[24687] = {
					"Sunblade Physician", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[77231] = {
					"Enforcer Sorka", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[134993] = {
					"Mchimba the Embalmer", -- [1]
					"Kings' Rest", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77232] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[4861] = {
					"Shrike Bat", -- [1]
					"Uldaman", -- [2]
				},
				[39900] = {
					"Enslaved Rock Elemental", -- [1]
					"Grim Batol", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[10425] = {
					"Risen Battle Mage", -- [1]
					"Stratholme", -- [2]
				},
				[84400] = {
					"Gnarled Ancient", -- [1]
					"The Everbloom", -- [2]
				},
				[34269] = {
					"XR-949 Salvagebot", -- [1]
					"Ulduar", -- [2]
				},
				[118700] = {
					"Felblight Stalker", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[30319] = {
					"Twilight Darkcaster", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[90544] = {
					"Krosus", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Theater of Pain", -- [2]
				},
				[84401] = {
					"Swift Sproutling", -- [1]
					"The Everbloom", -- [2]
				},
				[93104] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[111022] = {
					"The Demon Within", -- [1]
					"The Nighthold", -- [2]
				},
				[71603] = {
					"Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[12217] = {
					"Corruptor", -- [1]
					"Maraudon", -- [2]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
				},
				[156501] = {
					"Ravnyr", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[57819] = {
					"Corrupted Fragment", -- [1]
					"Dragon Soul", -- [2]
				},
				[34014] = {
					"Sanctum Sentry", -- [1]
					"Ulduar", -- [2]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[139097] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Isle of Conquest", -- [2]
				},
				[179029] = {
					"Tormented Demolisher", -- [1]
					"Eye of the Storm", -- [2]
				},
				[118703] = {
					"Felborne Botanist", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[39390] = {
					"Twilight Drake", -- [1]
					"Grim Batol", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
				},
				[34271] = {
					"XD-175 Compactobot", -- [1]
					"Ulduar", -- [2]
				},
				[14777] = {
					"West Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[118704] = {
					"Dul'zak", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22897] = {
					"Summoned Windfury Totem", -- [1]
					"Black Temple", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
				},
				[118705] = {
					"Nal'asha", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[15929] = {
					"Stalagg", -- [1]
					"Naxxramas", -- [2]
				},
				[16057] = {
					"Rotting Maggot", -- [1]
					"Naxxramas", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[56541] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[24561] = {
					"Yazzai", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24689] = {
					"Wretched Bruiser", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
				},
				[170844] = {
					"Ratharae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[118706] = {
					"Necrotic Spiderling", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[59613] = {
					"Professor Slate", -- [1]
					"Scholomance", -- [2]
				},
				[60381] = {
					"Zandalari Infiltrator", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[170845] = {
					"Hezket", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[83895] = {
					"Wolf Rider", -- [1]
					"Ashran", -- [2]
				},
				[39392] = {
					"Faceless Corruptor", -- [1]
					"Grim Batol", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[169823] = {
					"Gorm Behemoth", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[58590] = {
					"Scarlet Zealot", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[34273] = {
					"XB-488 Disposalbot", -- [1]
					"Ulduar", -- [2]
				},
				[163681] = {
					"Brewmaster Roland", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[75194] = {
					"Gnasher", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[139110] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[87993] = {
					"Living Flames", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[56799] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[172899] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[57823] = {
					"Stormbinder Adept", -- [1]
					"Dragon Soul", -- [2]
				},
				[93113] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[118198] = {
					"Osseine", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[17395] = {
					"Shadowmoon Summoner", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[12922] = {
					"Imp Minion", -- [1]
					"Ashran", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[18419] = {
					"Bloodwarder Greenkeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[3343] = {
					"Grelkor", -- [1]
					"Alterac Valley", -- [2]
				},
				[76220] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[118199] = {
					"Pestulon", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[118712] = {
					"Felstrider Enforcer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[60384] = {
					"Zandalari Pterror Wing", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[153451] = {
					"Kosarus the Fallen", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61408] = {
					"Adarogg", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[154476] = {
					"Archdruid Renferal", -- [1]
					"Alterac Valley", -- [2]
				},
				[55265] = {
					"Morchok", -- [1]
					"Dragon Soul", -- [2]
				},
				[15930] = {
					"Feugen", -- [1]
					"Naxxramas", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[154478] = {
					"Prospector Stonehewer", -- [1]
					"Alterac Valley", -- [2]
				},
				[118714] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[177004] = {
					"Tortured Amalgamation", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[73152] = {
					"Storeroom Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18420] = {
					"Sunseeker Geomancer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[178029] = {
					"Mawsworn Wingsoldier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163695] = {
					"Swift Gray Wolf", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[118716] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[10811] = {
					"Instructor Galford", -- [1]
					"Stratholme", -- [2]
				},
				[60386] = {
					"Zandalari Terror Rider", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[44260] = {
					"Venomfang Crocolisk", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[61666] = {
					"Corrupted Houndmaster", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[11451] = {
					"Wildspawn Satyr", -- [1]
					"Dire Maul", -- [2]
				},
				[23028] = {
					"Bonechewer Taskmaster", -- [1]
					"Black Temple", -- [2]
				},
				[102335] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[39909] = {
					"Azureborne Warlord", -- [1]
					"Grim Batol", -- [2]
				},
				[144246] = {
					"K.U.-J.0.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[12219] = {
					"Barbed Lasher", -- [1]
					"Maraudon", -- [2]
				},
				[73667] = {
					"Windreaver Tar'rath", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[157557] = {
					"Forsworn Recruit", -- [1]
					"Isle of Conquest", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[102336] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[157558] = {
					"Rising Torment", -- [1]
					"Isle of Conquest", -- [2]
				},
				[44261] = {
					"Sharptalon Eagle", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[13179] = {
					"Wing Commander Guse", -- [1]
					"Alterac Valley", -- [2]
				},
				[416] = {
					"Piznik", -- [1]
					"Warsong Gulch", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[118719] = {
					"Wyrmtongue Scavenger", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[157560] = {
					"Congealed Doubt", -- [1]
					"Isle of Conquest", -- [2]
				},
				[40166] = {
					"Enslaved Gronn Brute", -- [1]
					"Grim Batol", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[81349] = {
					"Risen Ally", -- [1]
					"Ashran", -- [2]
				},
				[114625] = {
					"Phantom Guest", -- [1]
					"Return to Karazhan", -- [2]
				},
				[91588] = {
					"Fel Lord Kurduz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[178041] = {
					"Mawsworn Shackler", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[15931] = {
					"Grobbulus", -- [1]
					"Naxxramas", -- [2]
				},
				[111554] = {
					"Felblaze Trickster", -- [1]
					"The Nighthold", -- [2]
				},
				[150397] = {
					"King Mechagon", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[40167] = {
					"Twilight Beguiler", -- [1]
					"Grim Batol", -- [2]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[33768] = {
					"Rubble", -- [1]
					"Ulduar", -- [2]
				},
				[178043] = {
					"Mawsworn Lancer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[79303] = {
					"Adorned Bladetalon", -- [1]
					"Skyreach", -- [2]
				},
				[120770] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173949] = {
					"Nathrian Soldier", -- [1]
					"Castle Nathria", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[77256] = {
					"Blackhand", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[118723] = {
					"Gazerax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[114628] = {
					"Skeletal Waiter", -- [1]
					"Return to Karazhan", -- [2]
				},
				[10364] = {
					"Yaelika Farclaw", -- [1]
					"Alterac Valley", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[118724] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[30453] = {
					"Onyx Sanctum Guardian", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[36841] = {
					"Fallen Warrior", -- [1]
					"Pit of Saron", -- [2]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[173953] = {
					"Loyal Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[23030] = {
					"Dragonmaw Sky Stalker", -- [1]
					"Black Temple", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[182145] = {
					"Blazing Infernal", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[82378] = {
					"Moonbark Ancient", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[165764] = {
					"Rockbound Vanquisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[17399] = {
					"Seductress", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[111047] = {
					"Parasitic Shadow Demon", -- [1]
					"The Nighthold", -- [2]
				},
				[182147] = {
					"Vicious Dreadstalker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[36842] = {
					"Wrathbone Coldwraith", -- [1]
					"Pit of Saron", -- [2]
				},
				[182148] = {
					"Brutal Wrathguard", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[182149] = {
					"Commander Borramus", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[14396] = {
					"Eye of Immol'thar", -- [1]
					"Dire Maul", -- [2]
				},
				[182150] = {
					"Observer Ongrax", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[33515] = {
					"Auriaya", -- [1]
					"Ulduar", -- [2]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[58856] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[179080] = {
					"Empowered Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[61672] = {
					"Dark Shaman Acolyte", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[182152] = {
					"Infiltrator Deraxis", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[15548] = {
					"Spectral Stallion", -- [1]
					"Karazhan", -- [2]
				},
				[117193] = {
					"Agronox", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[15932] = {
					"Gluth", -- [1]
					"Naxxramas", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				[16060] = {
					"Gothik the Harvester", -- [1]
					"Naxxramas", -- [2]
				},
				[16124] = {
					"Unrelenting Trainee", -- [1]
					"Naxxramas", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[122313] = {
					"Zuraal the Ascended", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16504] = {
					"Arcane Protector", -- [1]
					"Karazhan", -- [2]
				},
				[33772] = {
					"Faceless Horror", -- [1]
					"Ulduar", -- [2]
				},
				[117194] = {
					"Thrashbite the Scornful", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[17400] = {
					"Felguard Annihilator", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[120778] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[4863] = {
					"Jadespine Basilisk", -- [1]
					"Uldaman", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[120779] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[136083] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[171919] = {
					"Ayeleth's Torturer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184206] = {
					"Malicious Imp", -- [1]
					"Theater of Pain", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[10813] = {
					"Balnazzar", -- [1]
					"Stratholme", -- [2]
				},
				[78801] = {
					"Darkshard Acidback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[30071] = {
					"Stitched Colossus", -- [1]
					"Naxxramas", -- [2]
				},
				[72658] = {
					"Amalgamated Hubris", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[122316] = {
					"Saprish", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[114637] = {
					"Spectral Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[11453] = {
					"Wildspawn Trickster", -- [1]
					"Dire Maul", -- [2]
				},
				[54507] = {
					"Time-Twisted Scourge Beast", -- [1]
					"End Time", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[180113] = {
					"Rattling Mage", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[111054] = {
					"Nightorb", -- [1]
					"The Nighthold", -- [2]
				},
				[39405] = {
					"Crimsonborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[24696] = {
					"Coilskar Witch", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[6207] = {
					"Caverndeep Ambusher", -- [1]
					"Gnomeregan", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[13117] = {
					"Horde Spirit Guide", -- [1]
					"Eye of the Storm", -- [2]
				},
				[13181] = {
					"Wing Commander Mulverick", -- [1]
					"Alterac Valley", -- [2]
				},
				[173973] = {
					"Nathrian Tracker", -- [1]
					"Castle Nathria", -- [2]
				},
				[72661] = {
					"Zeal", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[122319] = {
					"Darkfang", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[14397] = {
					"Mana Burst", -- [1]
					"Dire Maul", -- [2]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[20857] = {
					"Arcatraz Defender", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[100818] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[178071] = {
					"Maw Assassin", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[118224] = {
					"Raemien the Soultaker", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[59884] = {
					"Fallen Crusader", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[60396] = {
					"Emperor's Rage", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[72150] = {
					"Kor'kron Shadowmage", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178072] = {
					"Anduin Wrynn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171929] = {
					"Errant Stoneborn", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				[16061] = {
					"Instructor Razuvious", -- [1]
					"Naxxramas", -- [2]
				},
				[16125] = {
					"Unrelenting Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[105427] = {
					"Skyfury Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[24697] = {
					"Sister of Torment", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[100820] = {
					"Spirit Wolf", -- [1]
					"Eye of the Storm", -- [2]
				},
				[34288] = {
					"Salvagebot Sawblade", -- [1]
					"Ulduar", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[122322] = {
					"Famished Broken", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[157599] = {
					"Forsworn Acolyte", -- [1]
					"Isle of Conquest", -- [2]
				},
				[158624] = {
					"Void Lasher", -- [1]
					"Plaguefall", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[28921] = {
					"Hadronox", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
				},
				[178079] = {
					"The Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165793] = {
					"Fel'endae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[60398] = {
					"Emperor's Courage", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[163746] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[61678] = {
					"Corrupted Reaver", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[11454] = {
					"Wildspawn Betrayer", -- [1]
					"Dire Maul", -- [2]
				},
				[54511] = {
					"Time-Twisted Geist", -- [1]
					"End Time", -- [2]
				},
				[23418] = {
					"Essence of Suffering", -- [1]
					"Black Temple", -- [2]
				},
				[39665] = {
					"Rom'ogg Bonecrusher", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[40177] = {
					"Forgemaster Throngus", -- [1]
					"Grim Batol", -- [2]
				},
				[80858] = {
					"Kor'lok", -- [1]
					"Ashran", -- [2]
				},
				[24698] = {
					"Ethereum Smuggler", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[183202] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[144295] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[34802] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				[60143] = {
					"Gara'jal the Spiritbinder", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[60399] = {
					"Qin-xi", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
				},
				[165798] = {
					"Necromancer Ritualist", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[99801] = {
					"Destructor Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[109016] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[87515] = {
					"Iron Flame Binder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[14398] = {
					"Eldreth Darter", -- [1]
					"Dire Maul", -- [2]
				},
				[28922] = {
					"Anub'ar Crusher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[183206] = {
					"Winged Soul Eater", -- [1]
					"Path of the Primus", -- [2]
				},
				[109017] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[60400] = {
					"Jan-xi", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[144300] = {
					"Mechagon Citizen", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[144301] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
				},
				[23419] = {
					"Essence of Desire", -- [1]
					"Black Temple", -- [2]
				},
				[183209] = {
					"Soulseeker", -- [1]
					"Path of the Primus", -- [2]
				},
				[120793] = {
					"Mephistroth", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[72159] = {
					"Muragus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[114650] = {
					"Phantom Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[74719] = {
					"Blindlight Rotmouth", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[144303] = {
					"G.U.A.R.D.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179115] = {
					"Lord Herne", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[86494] = {
					"Frostwolf Outrider", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[179116] = {
					"Hunt-Captain Korayn", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[73696] = {
					"Grand Master Alchemist Ki'xen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[156591] = {
					"Steelskin Brutalizer", -- [1]
					"Plaguefall", -- [2]
				},
				[74720] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[179117] = {
					"Niya", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[111068] = {
					"Archmage Galeorn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[33525] = {
					"Mangrove Ent", -- [1]
					"Ulduar", -- [2]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
				},
				[87520] = {
					"Animated Slag", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[60402] = {
					"Zandalari Fire-Dancer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[74722] = {
					"Razorshell Snapjaw", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[11455] = {
					"Wildspawn Felsworn", -- [1]
					"Dire Maul", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[152500] = {
					"Deadsoul Amalgam", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[23420] = {
					"Essence of Anger", -- [1]
					"Black Temple", -- [2]
				},
				[111070] = {
					"Soul Fragment of Azzinoth", -- [1]
					"The Nighthold", -- [2]
				},
				[87521] = {
					"Iron Slag-Shaper", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[12159] = {
					"Korrak the Bloodrager", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[65522] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[33526] = {
					"Ironroot Lasher", -- [1]
					"Ulduar", -- [2]
				},
				[76259] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[102368] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[179124] = {
					"Shade of Destiny", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[18429] = {
					"Arcane Fiend", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[13439] = {
					"Wing Commander Vipore", -- [1]
					"Alterac Valley", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[93154] = {
					"Gorebound Crone", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102369] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[39414] = {
					"Ascended Windwalker", -- [1]
					"Grim Batol", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[14399] = {
					"Arcane Torrent", -- [1]
					"Dire Maul", -- [2]
				},
				[33271] = {
					"General Vezax", -- [1]
					"Ulduar", -- [2]
				},
				[33527] = {
					"Nature's Blade", -- [1]
					"Ulduar", -- [2]
				},
				[29308] = {
					"Prince Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[102370] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
				},
				[59892] = {
					"Krik'thik Invader", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[158651] = {
					"Agthia", -- [1]
					"Plaguefall", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93156] = {
					"Eredar Faithbreaker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[23421] = {
					"Ashtongue Channeler", -- [1]
					"Black Temple", -- [2]
				},
				[111074] = {
					"Grinning Shadowstalker", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[39415] = {
					"Ascended Flameseeker", -- [1]
					"Grim Batol", -- [2]
				},
				[16063] = {
					"Sir Zeliek", -- [1]
					"Naxxramas", -- [2]
				},
				[16127] = {
					"Spectral Trainee", -- [1]
					"Naxxramas", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[73191] = {
					"Aqueous Defender", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[57333] = {
					"Acidic Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[33528] = {
					"Guardian of Life", -- [1]
					"Ulduar", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[102372] = {
					"Felhound Mage Slayer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[111587] = {
					"Nether Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[185275] = {
					"Kelmortos", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[18430] = {
					"Ethereal Apprentice", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[18558] = {
					"Phasing Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[74728] = {
					"Twilight Lord Bathiel", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[27389] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[179133] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102373] = {
					"Corrosive Felhound", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[29309] = {
					"Elder Nadox", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[179135] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180159] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179136] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[11456] = {
					"Wildspawn Shadowstalker", -- [1]
					"Dire Maul", -- [2]
				},
				[76266] = {
					"High Sage Viryx", -- [1]
					"Skyreach", -- [2]
				},
				[76778] = {
					"Life-Pact Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[12096] = {
					"Stormpike Quartermaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[73195] = {
					"Kor'kron Jailer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[24830] = {
					"Stonevault Pillager", -- [1]
					"Uldaman", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[76267] = {
					"Solar Zealot", -- [1]
					"Skyreach", -- [2]
				},
				[102376] = {
					"Wrathguard Bladeweaver", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[94697] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[18431] = {
					"Ethereal Beacon", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[18559] = {
					"Phasing Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[93162] = {
					"Umbral Supplicant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102377] = {
					"Fel Inciter", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[14400] = {
					"Arcane Feedback", -- [1]
					"Dire Maul", -- [2]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[177095] = {
					"Kyra", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[72174] = {
					"Rekkul", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[97259] = {
					"Blazing Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[61432] = {
					"Glintrok Pillager", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[99307] = {
					"Skjal", -- [1]
					"Maw of Souls", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[15936] = {
					"Heigan the Unclean", -- [1]
					"Naxxramas", -- [2]
				},
				[16064] = {
					"Thane Korth'azz", -- [1]
					"Naxxramas", -- [2]
				},
				[113130] = {
					"Burning Sentry", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[105451] = {
					"Counterstrike Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[32638] = {
					"Hakmud of Argus", -- [1]
					"Eye of the Storm", -- [2]
				},
				[157645] = {
					"Control Location 1 - Widget", -- [1]
					"Plaguefall", -- [2]
				},
				[75247] = {
					"Groyat, the Blind Hunter", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[4257] = {
					"Lana Thunderbrew", -- [1]
					"Alterac Valley", -- [2]
				},
				[180171] = {
					"Brooding Cleric", -- [1]
					"Ashran", -- [2]
				},
				[71152] = {
					"Skeer the Bloodseeker", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[113131] = {
					"Living Felblaze", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[18176] = {
					"Tainted Earthgrab Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[92142] = {
					"Blademaster Jubei'thos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[9537] = {
					"Hurley Blackbreath", -- [1]
					"Blackrock Depths", -- [2]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[94190] = {
					"Burning Sentry", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[78832] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[166863] = {
					"Forsworn Investigator", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[113132] = {
					"Burning Terrorhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[10177] = {
					"Spire Scarab", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[20864] = {
					"Protean Nightmare", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[160721] = {
					"Fallen Acolyte Erisne", -- [1]
					"Isle of Conquest", -- [2]
				},
				[94191] = {
					"Burning Terrorhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[111085] = {
					"Geth'xun", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[71154] = {
					"Ka'roz the Locust", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60410] = {
					"Elegon", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[105966] = {
					"Guardian Orb", -- [1]
					"Shield's Rest", -- [2]
				},
				[61434] = {
					"Sik'thik Vanguard", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[166866] = {
					"Misled Steward", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[92144] = {
					"Dia Darkwhisper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[71155] = {
					"Korven the Prime", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[6017] = {
					"Lava Spout Totem", -- [1]
					"Uldaman", -- [2]
				},
				[12097] = {
					"Frostwolf Quartermaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[48636] = {
					"Guild Battle Standard", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[105967] = {
					"Restless Tombguard", -- [1]
					"Shield's Rest", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[111087] = {
					"Hakkar the Houndmaster", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[71156] = {
					"Kaz'tik the Manipulator", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72180] = {
					"Gordul", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18177] = {
					"Tainted Stoneskin Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[105968] = {
					"Spectral Windshaper", -- [1]
					"Shield's Rest", -- [2]
				},
				[114671] = {
					"Fragmented Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[13377] = {
					"Master Engineer Zinfizzlex", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[92146] = {
					"Gurtogg Bloodboil", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[178133] = {
					"Murkbrine Wavejumper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[71157] = {
					"Xaril the Poisoned Mind", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[96754] = {
					"Harbaron", -- [1]
					"Maw of Souls", -- [2]
				},
				[81396] = {
					"Stonetooth", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[14465] = {
					"Alliance Battle Standard", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[166872] = {
					"Umbral Phalynx", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[84468] = {
					"Zaram Sunraiser", -- [1]
					"Ashran", -- [2]
				},
				[93171] = {
					"Skeletal Gryphon", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166873] = {
					"Forsworn Researcher", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[61436] = {
					"Sik'thik Bladedancer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[31104] = {
					"Ahn'kahar Watcher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[102387] = {
					"Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[94708] = {
					"Storm Hawk", -- [1]
					"Shield's Rest", -- [2]
				},
				[157660] = {
					"Forsworn Ascended", -- [1]
					"Isle of Conquest", -- [2]
				},
				[39679] = {
					"Corla, Herald of Twilight", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[177114] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[40447] = {
					"Chains of Woe", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[136160] = {
					"King Dazar", -- [1]
					"Kings' Rest", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[2225] = {
					"Zora Guthrek", -- [1]
					"Alterac Valley", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[114675] = {
					"Guardian's Image", -- [1]
					"Return to Karazhan", -- [2]
				},
				[62205] = {
					"Wing Leader Ner'onok", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[77816] = {
					"Borka the Brute", -- [1]
					"Grimrail Depot", -- [2]
				},
				[94710] = {
					"Storm Drake Hunter", -- [1]
					"Shield's Rest", -- [2]
				},
				[71161] = {
					"Kil'ruk the Wind-Reaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[20866] = {
					"Soul Devourer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[84984] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[93687] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[96759] = {
					"Helya", -- [1]
					"Maw of Souls", -- [2]
				},
				[82425] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[11458] = {
					"Petrified Treant", -- [1]
					"Dire Maul", -- [2]
				},
				[84985] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[93688] = {
					"Forsaken Deathstalker", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[23682] = {
					"Headless Horseman", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[56575] = {
					"Burning Tendons", -- [1]
					"Dragon Soul", -- [2]
				},
				[32641] = {
					"Drix Blackwrench", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[157669] = {
					"Steelskin Vanguard", -- [1]
					"Plaguefall", -- [2]
				},
				[76283] = {
					"Malefic Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[18179] = {
					"Corrupted Nova Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[172005] = {
					"Furrowed Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157671] = {
					"Prime Bladeguard", -- [1]
					"Plaguefall", -- [2]
				},
				[76284] = {
					"Spiteful Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[76796] = {
					"Heavy Spear", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[19843] = {
					"Nethervine Trickster", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[129526] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[73725] = {
					"Xiang-Lin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[14466] = {
					"Horde Battle Standard", -- [1]
					"Eye of the Storm", -- [2]
				},
				[20867] = {
					"Death Watcher", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
				},
				[113145] = {
					"Doomguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[36355] = {
					"Siege Turret", -- [1]
					"Isle of Conquest", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
				},
				[102395] = {
					"Infiltrator Assassin", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[16194] = {
					"Unholy Axe", -- [1]
					"Naxxramas", -- [2]
				},
				[32642] = {
					"Mojodishu", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[74751] = {
					"Solarshard Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[36356] = {
					"Flame Turret", -- [1]
					"Isle of Conquest", -- [2]
				},
				[81407] = {
					"Grimrail Bombardier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[91646] = {
					"Grim Collaborator", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[102397] = {
					"Wrathlord Bulwark", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[94718] = {
					"Greater Raven", -- [1]
					"Shield's Rest", -- [2]
				},
				[113148] = {
					"Fel Hound", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[157681] = {
					"Acolyte of Purity", -- [1]
					"Isle of Conquest", -- [2]
				},
				[10435] = {
					"Magistrate Barthilas", -- [1]
					"Stratholme", -- [2]
				},
				[137204] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[102398] = {
					"Blazing Infernal", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[30083] = {
					"Marauding Geist", -- [1]
					"Naxxramas", -- [2]
				},
				[113149] = {
					"Felguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[61442] = {
					"Kuai the Brute", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[45572] = {
					"Howling Gale", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[11459] = {
					"Ironbark Protector", -- [1]
					"Dire Maul", -- [2]
				},
				[100351] = {
					"Avatar of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[23172] = {
					"Hand of Gorefiend", -- [1]
					"Black Temple", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[56579] = {
					"Enchanted Highmistress", -- [1]
					"Well of Eternity", -- [2]
				},
				[16389] = {
					"Spectral Apprentice", -- [1]
					"Karazhan", -- [2]
				},
				[178163] = {
					"Murkbrine Shorerunner", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102400] = {
					"Eredar Shadow Mender", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[17669] = {
					"Rabid Warhound", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[18309] = {
					"Ethereal Scavenger", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[13443] = {
					"Druid of the Grove", -- [1]
					"Alterac Valley", -- [2]
				},
				[84483] = {
					"Gronnling Breaker", -- [1]
					"Ashran", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[122367] = {
					"Admiral Svirax", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[20869] = {
					"Arcatraz Sentinel", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[100354] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[43014] = {
					"Imp", -- [1]
					"The Stonecore", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[45062] = {
					"Oathsworn Scorpid Keeper", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[22917] = {
					"Illidan Stormrage", -- [1]
					"Black Temple", -- [2]
				},
				[76806] = {
					"Heart of the Mountain", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[179193] = {
					"Fel Obelisk", -- [1]
					"Ashran", -- [2]
				},
				[94724] = {
					"Bryanda", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[16067] = {
					"Deathcharger Steed", -- [1]
					"Naxxramas", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
				},
				[73223] = {
					"Pterrordax", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[82438] = {
					"Warspear Shaman", -- [1]
					"Ashran", -- [2]
				},
				[33288] = {
					"Yogg-Saron", -- [1]
					"Ulduar", -- [2]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[17414] = {
					"Shadowmoon Technician", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[17670] = {
					"Shattered Hand Houndmaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[97285] = {
					"Wind Rush Totem", -- [1]
					"Warsong Gulch", -- [2]
				},
				[45063] = {
					"Bonesnapper Scorpid", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[61701] = {
					"Sik'thik Warrior", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[76296] = {
					"Twisted Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[172030] = {
					"Tormenter Overlord", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167935] = {
					"Contagious Droplet", -- [1]
					"Warsong Gulch", -- [2]
				},
				[177150] = {
					"Lady Moonberry", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[10436] = {
					"Baroness Anastari", -- [1]
					"Stratholme", -- [2]
				},
				[21126] = {
					"Coilfang Scale-Healer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[76809] = {
					"Foreman Feldspar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
				},
				[30085] = {
					"Vigilant Shade", -- [1]
					"Naxxramas", -- [2]
				},
				[73226] = {
					"Lesser Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				[11460] = {
					"Alzzin's Minion", -- [1]
					"Dire Maul", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[168962] = {
					"Reborn Phoenix", -- [1]
					"Castle Nathria", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Warsong Gulch", -- [2]
				},
				[177154] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[100360] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[76811] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[17671] = {
					"Shattered Hand Champion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[18311] = {
					"Ethereal Crypt Raider", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[45065] = {
					"Tol'vir Merchant", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[123398] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[76812] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[13956] = {
					"Winterax Mystic", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[29062] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[21127] = {
					"Coilfang Tempest", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[77325] = {
					"Blackhand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[61448] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[23047] = {
					"Shadowmoon Soldier", -- [1]
					"Black Temple", -- [2]
				},
				[177161] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[76814] = {
					"Flamebender Ka'graz", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[173066] = {
					"Kel'Thuzad", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[174090] = {
					"Nathrian Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
				},
				[177162] = {
					"Mawsworn Interrogator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[48906] = {
					"Blaze of the Heavens", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[100876] = {
					"Val'kyr Battlemaiden", -- [1]
					"Isle of Conquest", -- [2]
				},
				[76815] = {
					"Primal Elementalist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[94733] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[167949] = {
					"Plague-Ridden Survivor", -- [1]
					"Warsong Gulch", -- [2]
				},
				[177164] = {
					"Mawsworn Pillager", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[137233] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[18312] = {
					"Ethereal Spellbinder", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[122890] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[123402] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[9541] = {
					"Blackbreath Crony", -- [1]
					"Blackrock Depths", -- [2]
				},
				[79888] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[80400] = {
					"Iron Assembly Warden", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[33293] = {
					"XT-002 Deconstructor", -- [1]
					"Ulduar", -- [2]
				},
				[10437] = {
					"Nerub'enkan", -- [1]
					"Stratholme", -- [2]
				},
				[152594] = {
					"Broker Ve'ken", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[150547] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				[36877] = {
					"Wrathbone Skeleton", -- [1]
					"Pit of Saron", -- [2]
				},
				[11461] = {
					"Warpwood Guardian", -- [1]
					"Dire Maul", -- [2]
				},
				[176145] = {
					"Stone Prison", -- [1]
					"Twin Peaks", -- [2]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[54795] = {
					"Fountain of Light", -- [1]
					"End Time", -- [2]
				},
				[94224] = {
					"Petrifying Totem", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[175123] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[76307] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[174100] = {
					"Nathrian Singuard", -- [1]
					"Castle Nathria", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[18313] = {
					"Ethereal Sorcerer", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[107024] = {
					"Fel Lord", -- [1]
					"Isle of Conquest", -- [2]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
				},
				[55308] = {
					"Warlord Zon'ozz", -- [1]
					"Dragon Soul", -- [2]
				},
				[86547] = {
					"Venom Sprayer", -- [1]
					"The Everbloom", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[7011] = {
					"Earthen Rocksmasher", -- [1]
					"Uldaman", -- [2]
				},
				[129550] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
				},
				[29064] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[76309] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[76821] = {
					"Firecaller", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134173] = {
					"Animated Droplet", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[151579] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[36879] = {
					"Plagueborn Horror", -- [1]
					"Pit of Saron", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[23049] = {
					"Shadowmoon Weapon Master", -- [1]
					"Black Temple", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[109586] = {
					"Fel Lord Rakkan", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[23561] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Naxxramas", -- [2]
				},
				[8035] = {
					"Dark Iron Land Mine", -- [1]
					"Gnomeregan", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[123921] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[183322] = {
					"Zealous Consort", -- [1]
					"Karazhan", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[109587] = {
					"Fel Lord Zardak", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[25865] = {
					"Frozen Core", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[72728] = {
					"Kor'kron Blood Axe", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18314] = {
					"Nexus Stalker", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[61453] = {
					"Mu'Shiba", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[56846] = {
					"Arm Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[10374] = {
					"Spire Spider", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[10438] = {
					"Maleki the Pallid", -- [1]
					"Stratholme", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[101398] = {
					"Psyfiend", -- [1]
					"Alterac Valley", -- [2]
				},
				[77337] = {
					"Aknor Steelbringer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[172064] = {
					"Unstable Larva", -- [1]
					"Plaguefall", -- [2]
				},
				[164897] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80409] = {
					"Markog Aba'dir", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11142] = {
					"Undead Postman", -- [1]
					"Stratholme", -- [2]
				},
				[36881] = {
					"Skeletal Slave", -- [1]
					"Pit of Saron", -- [2]
				},
				[11462] = {
					"Warpwood Treant", -- [1]
					"Dire Maul", -- [2]
				},
				[177185] = {
					"Crested Gromit", -- [1]
					"Eye of the Storm", -- [2]
				},
				[110614] = {
					"Malificus", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[16523] = {
					"Shattered Hand Savage", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[109591] = {
					"Felguard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[110615] = {
					"Argent Dawnbringer", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[43537] = {
					"Stonecore Earthshaper", -- [1]
					"The Stonecore", -- [2]
				},
				[166949] = {
					"Chi-Ji", -- [1]
					"Alterac Valley", -- [2]
				},
				[80411] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[13318] = {
					"Commander Mortimer", -- [1]
					"Alterac Valley", -- [2]
				},
				[109080] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[109592] = {
					"Felguard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[55312] = {
					"Yor'sahj the Unsleeping", -- [1]
					"Dragon Soul", -- [2]
				},
				[39698] = {
					"Karsh Steelbender", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[112664] = {
					"Arc Well", -- [1]
					"The Nighthold", -- [2]
				},
				[56848] = {
					"Twilight Elite Slayer", -- [1]
					"Dragon Soul", -- [2]
				},
				[114712] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[20875] = {
					"Negaton Screamer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[76829] = {
					"Slag Elemental", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[110617] = {
					"Shadowsworn Harbinger", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[110618] = {
					"Anchoring Crystal", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[114714] = {
					"Ghostly Steward", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16524] = {
					"Shade of Aran", -- [1]
					"Karazhan", -- [2]
				},
				[123929] = {
					"Garothi Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[17420] = {
					"Shattered Hand Heathen", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[44819] = {
					"Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[114715] = {
					"Ghostly Chef", -- [1]
					"Return to Karazhan", -- [2]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
				},
				[18700] = {
					"Reanimated Bones", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[75808] = {
					"Draka", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[39700] = {
					"Beauty", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[129050] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[114716] = {
					"Ghostly Baker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[10439] = {
					"Ramstein the Gorger", -- [1]
					"Stratholme", -- [2]
				},
				[34069] = {
					"Molten Colossus", -- [1]
					"Ulduar", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[149555] = {
					"Abomination", -- [1]
					"Alterac Valley", -- [2]
				},
				[73250] = {
					"Kor'kron Wild Gun", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[23436] = {
					"Image of Dementia", -- [1]
					"Black Temple", -- [2]
				},
				[11783] = {
					"Theradrim Shardling", -- [1]
					"Maraudon", -- [2]
				},
				[71715] = {
					"Orgrimmar Faithful", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[16525] = {
					"Spell Shade", -- [1]
					"Karazhan", -- [2]
				},
				[6212] = {
					"Dark Iron Agent", -- [1]
					"Gnomeregan", -- [2]
				},
				[125981] = {
					"Fragmented Voidling", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[25740] = {
					"Ahune", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[122398] = {
					"Sapped Voidlord", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[13447] = {
					"Corporal Noreg Stormpike", -- [1]
					"Alterac Valley", -- [2]
				},
				[136250] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[118303] = {
					"Charred Skeleton", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[7012] = {
					"Earthen Sculptor", -- [1]
					"Uldaman", -- [2]
				},
				[7076] = {
					"Earthen Guardian", -- [1]
					"Uldaman", -- [2]
				},
				[28684] = {
					"Krik'thir the Gatewatcher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[83492] = {
					"Iron Brute", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[118304] = {
					"Tortured Skeleton", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[43286] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[44566] = {
					"Ozumat", -- [1]
					"Throne of the Tides", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[15687] = {
					"Moroes", -- [1]
					"Karazhan", -- [2]
				},
				[179257] = {
					"Burning Shade", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Silvershard Mines", -- [2]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[103459] = {
					"Rockback Snapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[79910] = {
					"Shimmerwing Moth", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[80422] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[122401] = {
					"Shadowguard Trickster", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[16526] = {
					"Sorcerous Shade", -- [1]
					"Karazhan", -- [2]
				},
				[57877] = {
					"Flail of Go'rath", -- [1]
					"Dragon Soul", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[80423] = {
					"Thunderlord Beast-Tender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[114211] = {
					"Fel Hound", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[9416] = {
					"Scarshield Worg", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[109604] = {
					"Felguard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[9736] = {
					"Quartermaster Zigris", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[19598] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[39960] = {
					"Deep Murloc Drudge", -- [1]
					"Throne of the Tides", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[122403] = {
					"Shadowguard Champion", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[165952] = {
					"Primed Defiler", -- [1]
					"Isle of Conquest", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165953] = {
					"Callused Monstrosity", -- [1]
					"Isle of Conquest", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80937] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[122404] = {
					"Shadowguard Voidbender", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[165954] = {
					"Composed Defender", -- [1]
					"Isle of Conquest", -- [2]
				},
				[11464] = {
					"Warpwood Tangler", -- [1]
					"Dire Maul", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152644] = {
					"Deadsoul Drifter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[11784] = {
					"Theradrim Guardian", -- [1]
					"Maraudon", -- [2]
				},
				[23694] = {
					"Pulsing Pumpkin", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[165955] = {
					"Fraying Remnants", -- [1]
					"Isle of Conquest", -- [2]
				},
				[39705] = {
					"Ascendant Lord Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[122405] = {
					"Shadowguard Conjurer", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72236] = {
					"Embodied Doubt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[13320] = {
					"Commander Karl Philips", -- [1]
					"Alterac Valley", -- [2]
				},
				[13448] = {
					"Sergeant Yazra Bloodsnarl", -- [1]
					"Alterac Valley", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[39450] = {
					"Trogg Dweller", -- [1]
					"Grim Batol", -- [2]
				},
				[39962] = {
					"Twilight Stormbreaker", -- [1]
					"Grim Batol", -- [2]
				},
				[80940] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[122407] = {
					"Warp Stalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[20879] = {
					"Eredar Soul-Eater", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[33819] = {
					"Twilight Frost Mage", -- [1]
					"Ulduar", -- [2]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[122408] = {
					"Shadow Stalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[36891] = {
					"Iceborn Proto-Drake", -- [1]
					"Pit of Saron", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Alterac Valley", -- [2]
				},
				[73775] = {
					"War Master Kragg", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[33820] = {
					"Twilight Pyromancer", -- [1]
					"Ulduar", -- [2]
				},
				[4421] = {
					"Charlga Razorflank", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[9097] = {
					"Scarshield Legionnaire", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[36892] = {
					"Ymirjar Deathbringer", -- [1]
					"Pit of Saron", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173134] = {
					"Darksworn Goliath", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[39708] = {
					"Twilight Flame Caller", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[104493] = {
					"Spitting Cobra", -- [1]
					"Ashran", -- [2]
				},
				[20880] = {
					"Eredar Deathbringer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[10697] = {
					"Bile Slime", -- [1]
					"Stratholme", -- [2]
				},
				[102446] = {
					"Fel Lord Betrug", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113197] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[122412] = {
					"Bound Voidlord", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[36893] = {
					"Ymirjar Flamebearer", -- [1]
					"Pit of Saron", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[11465] = {
					"Warpwood Stomper", -- [1]
					"Dire Maul", -- [2]
				},
				[11657] = {
					"Morloch", -- [1]
					"Alterac Valley", -- [2]
				},
				[179281] = {
					"Coagulated Blood", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[5925] = {
					"Grounding Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[174162] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122413] = {
					"Shadowguard Riftstalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[16529] = {
					"Magical Horror", -- [1]
					"Karazhan", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[33822] = {
					"Twilight Guardian", -- [1]
					"Ulduar", -- [2]
				},
				[93233] = {
					"Lord Aram'el", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[173140] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[120366] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[79923] = {
					"Shimmerwing Mothling", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[13257] = {
					"Murgot Deepforge", -- [1]
					"Alterac Valley", -- [2]
				},
				[13577] = {
					"Stormpike Ram Rider Commander", -- [1]
					"Alterac Valley", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[95282] = {
					"Azgalor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[170071] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[106545] = {
					"Empowered Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[173143] = {
					"Soul Weaver", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[33567] = {
					"Deathsworn Zealot", -- [1]
					"Ulduar", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[7397] = {
					"Earthen Stonecarver", -- [1]
					"Uldaman", -- [2]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[71734] = {
					"Sha of Pride", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[75318] = {
					"Venomous Discharge", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[15689] = {
					"Netherspite", -- [1]
					"Karazhan", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[16530] = {
					"Mana Warp", -- [1]
					"Karazhan", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
				},
				[33824] = {
					"Twilight Shadowblade", -- [1]
					"Ulduar", -- [2]
				},
				[118834] = {
					"Fel Portal Guardian", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[111155] = {
					"Makaan the Malevolent", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[17938] = {
					"Coilfang Observer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[60701] = {
					"Zian of the Endless Shadow", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[9098] = {
					"Scarshield Spellbinder", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[138338] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[175198] = {
					"Void Lasher", -- [1]
					"Alterac Valley", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[169055] = {
					"Marrow Scraper", -- [1]
					"Theater of Pain", -- [2]
				},
				[56862] = {
					"Drunken Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[20882] = {
					"Skulking Witch", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[21138] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[111157] = {
					"Pilik", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[168033] = {
					"Fallen Monk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[11082] = {
					"Stratholme Courier", -- [1]
					"Stratholme", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[91704] = {
					"Anchoring Crystal", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[56863] = {
					"Sleepy Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[122421] = {
					"Umbral War-Adept", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[24722] = {
					"Fel Crystal", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[151654] = {
					"Deuce Mecha-Buffer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[94777] = {
					"Morkronn", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[120374] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[60447] = {
					"Krik'thik Saboteur", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[136297] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[44577] = {
					"General Husam", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[122423] = {
					"Grand Shadow-Weaver", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[20883] = {
					"Spiteful Temptress", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[21395] = {
					"Protean Spawn", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[94779] = {
					"Sovokk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[183399] = {
					"Suppression Conduit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151659] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[61216] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[98363] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[156779] = {
					"Fallen Knowledge-Seeker", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[15690] = {
					"Prince Malchezaar", -- [1]
					"Karazhan", -- [2]
				},
				[179305] = {
					"Mawsworn Steelshaper", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
				},
				[56865] = {
					"Aqua Dancer", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[24723] = {
					"Selin Fireheart", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[33572] = {
					"Steelforged Defender", -- [1]
					"Ulduar", -- [2]
				},
				[159853] = {
					"Cleansing Aspirant", -- [1]
					"Isle of Conquest", -- [2]
				},
				[17940] = {
					"Coilfang Technician", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[170093] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179308] = {
					"Voracious Mawrat", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[90686] = {
					"Felstalker Dreadhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[9547] = {
					"Guzzling Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[172142] = {
					"Baroness Ninadar", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[40484] = {
					"Erudax", -- [1]
					"Grim Batol", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[123451] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[57890] = {
					"Claw of Go'rath", -- [1]
					"Dragon Soul", -- [2]
				},
				[21140] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[101950] = {
					"Mindflayer Kaahrj", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[10955] = {
					"Summoned Water Elemental", -- [1]
					"Stratholme", -- [2]
				},
				[72770] = {
					"Kor'kron Dark Farseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[123452] = {
					"Fel Lord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[179313] = {
					"Lady Moonberry", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[174194] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
				},
				[80962] = {
					"Machinist B'randt", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[75331] = {
					"Death's Head Ghoul Wrangler", -- [1]
					"Razorfen Downs", -- [2]
				},
				[34086] = {
					"Magma Rager", -- [1]
					"Ulduar", -- [2]
				},
				[42789] = {
					"Stonecore Magmalord", -- [1]
					"The Stonecore", -- [2]
				},
				[17429] = {
					"Fel Orc Neophyte", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17941] = {
					"Mennu the Betrayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[13323] = {
					"Subterranean Diemetradon", -- [1]
					"Maraudon", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[177269] = {
					"So'leah", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				[14283] = {
					"Stormpike Owl", -- [1]
					"Alterac Valley", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[7206] = {
					"Ancient Stone Keeper", -- [1]
					"Uldaman", -- [2]
				},
				[20885] = {
					"Dalliah the Doomsayer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[126527] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[59684] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[177272] = {
					"Lord Herne", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[177273] = {
					"Niya", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[94276] = {
					"Gul'dan", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[16011] = {
					"Loatheb", -- [1]
					"Naxxramas", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[16406] = {
					"Phantom Attendant", -- [1]
					"Karazhan", -- [2]
				},
				[166012] = {
					"Athanos", -- [1]
					"Bastion Scenario", -- [2]
				},
				[177275] = {
					"Hunt-Captain Korayn", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[60197] = {
					"Training Dummy", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[17942] = {
					"Quagmirran", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[60709] = {
					"Qiang the Merciless", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[61989] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[177277] = {
					"Sparklepuff", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[177278] = {
					"Glittermint", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[114244] = {
					"Eredar Mageslayer", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[57382] = {
					"Dark Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[20886] = {
					"Wrath-Scryer Soccothrates", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[84552] = {
					"Toxic Spiderling", -- [1]
					"The Everbloom", -- [2]
				},
				[174208] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[177280] = {
					"Winter Queen", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[114245] = {
					"Eredar Mageslayer", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[45096] = {
					"Tamed Tol'vir Prowler", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[183424] = {
					"Virtuous Gentleman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76874] = {
					"Dreadwing", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179330] = {
					"Plague Deviser Marileth", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[16407] = {
					"Spectral Servant", -- [1]
					"Karazhan", -- [2]
				},
				[84554] = {
					"Venom-Crazed Pale One", -- [1]
					"The Everbloom", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[127045] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[111175] = {
					"The Overseer", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[13196] = {
					"Phase Lasher", -- [1]
					"Dire Maul", -- [2]
				},
				[114247] = {
					"The Curator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[45097] = {
					"Oathsworn Tamer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[75852] = {
					"Corrupted Healing Totem", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[177285] = {
					"Mawsworn Gatekeeper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[175238] = {
					"Arch-Tyrant Zerios", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[39978] = {
					"Twilight Torturer", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[177286] = {
					"Phantasmic Amalgamation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'nyy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[73805] = {
					"Corrupted Toad", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[173191] = {
					"Soulstalker V'lara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[58664] = {
					"Instructor Chillheart's Phylactery", -- [1]
					"Scholomance", -- [2]
				},
				[76877] = {
					"Gruul", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[162953] = {
					"Sarah Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[94283] = {
					"Shadow Infuser", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[168073] = {
					"Fallen Monk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[114249] = {
					"Volatile Energy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[36907] = {
					"Wrathbone Siegesmith", -- [1]
					"Pit of Saron", -- [2]
				},
				[168074] = {
					"Fallen Monk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[94284] = {
					"Fiery Enkindler", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[16408] = {
					"Phantom Valet", -- [1]
					"Karazhan", -- [2]
				},
				[33836] = {
					"Bomb Bot", -- [1]
					"Ulduar", -- [2]
				},
				[177291] = {
					"Mawsworn Corruptor", -- [1]
					"Eye of the Storm", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156814] = {
					"Gor'groth", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[17816] = {
					"Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[177292] = {
					"Mawsworn Mutilator", -- [1]
					"Eye of the Storm", -- [2]
				},
				[72784] = {
					"Kor'kron Gunner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[162958] = {
					"Brandon Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[177293] = {
					"Mawsworn Torturer", -- [1]
					"Eye of the Storm", -- [2]
				},
				[127050] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[19608] = {
					"Frayer Wildling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[39980] = {
					"Twilight Sadist", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[72785] = {
					"Twisted Ancient", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[114252] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[28695] = {
					"Molten Golem", -- [1]
					"Halls of Lightning", -- [2]
				},
				[10381] = {
					"Ravaged Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[75857] = {
					"Unstable Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[29335] = {
					"Anub'ar Webspinner", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[77905] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[162962] = {
					"Millie Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[11469] = {
					"Eldreth Seether", -- [1]
					"Dire Maul", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[11789] = {
					"Deep Borer", -- [1]
					"Maraudon", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[56875] = {
					"Krik'thik Demolisher", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[16409] = {
					"Phantom Guest", -- [1]
					"Karazhan", -- [2]
				},
				[156821] = {
					"Darkmaul Shadowcaller", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[33838] = {
					"Enslaved Fire Elemental", -- [1]
					"Ulduar", -- [2]
				},
				[17817] = {
					"Greater Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[72276] = {
					"Amalgam of Corruption", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[13197] = {
					"Fel Lash", -- [1]
					"Dire Maul", -- [2]
				},
				[135322] = {
					"The Golden Serpent", -- [1]
					"Kings' Rest", -- [2]
				},
				[46381] = {
					"Shifty Thief", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[76884] = {
					"Cruelfang", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[94802] = {
					"Voidscribe Aathalos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[78932] = {
					"Driving Gale-Caller", -- [1]
					"Skyreach", -- [2]
				},
				[19865] = {
					"Mutate Horror", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[39982] = {
					"Crazed Mage", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[136347] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[56876] = {
					"Krik'thik Sapper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[171159] = {
					"Unraveling Soul Remnant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57388] = {
					"Shadowed Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[156825] = {
					"Darkmaul Centurion", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[94803] = {
					"Grute", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[78933] = {
					"Herald of Sunrise", -- [1]
					"Skyreach", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[55085] = {
					"Peroth'arn", -- [1]
					"Well of Eternity", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[94804] = {
					"Shambling Hulk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[166043] = {
					"Truthbringer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
				},
				[56877] = {
					"Raigonn", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[16410] = {
					"Spectral Retainer", -- [1]
					"Karazhan", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[180379] = {
					"Mawsworn Arbalest", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[78935] = {
					"Rubyspike Goren", -- [1]
					"Ashran", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[122450] = {
					"Garothi Worldbreaker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[166046] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[76376] = {
					"Skyreach Arcanologist", -- [1]
					"Skyreach", -- [2]
				},
				[171166] = {
					"Unraveling Soul Remnant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[94806] = {
					"Fel Hellweaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[78936] = {
					"Goren Iron-eater", -- [1]
					"Ashran", -- [2]
				},
				[39984] = {
					"Malignant Trogg", -- [1]
					"Grim Batol", -- [2]
				},
				[114260] = {
					"Mrrgria", -- [1]
					"Return to Karazhan", -- [2]
				},
				[90199] = {
					"Gorefiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				[10382] = {
					"Mangled Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[29209] = {
					"Carrion Beetle", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[104534] = {
					"D'zorykx the Trapper", -- [1]
					"The Nighthold", -- [2]
				},
				[114261] = {
					"Toe Knee", -- [1]
					"Return to Karazhan", -- [2]
				},
				[123476] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[11470] = {
					"Eldreth Sorcerer", -- [1]
					"Dire Maul", -- [2]
				},
				[168098] = {
					"Empowered Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180385] = {
					"Condemned Soul Remnant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[94808] = {
					"Hellfire Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[120405] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[123477] = {
					"Antoran Doomguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[66652] = {
					"Lesser Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113239] = {
					"Gibbering Felspawn", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[97369] = {
					"Liquid Magma Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[18331] = {
					"Ethereal Darkcaster", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[13326] = {
					"Seasoned Defender", -- [1]
					"Alterac Valley", -- [2]
				},
				[123478] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180389] = {
					"Mawsworn Rageguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[71773] = {
					"Kor'kron Warshaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[114264] = {
					"Midnight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59184] = {
					"Jandice Barov", -- [1]
					"Scholomance", -- [2]
				},
				[60208] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22299] = {
					"Spore Strider", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[114265] = {
					"Gang Ruffian", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[123480] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[22939] = {
					"Temple Concubine", -- [1]
					"Black Temple", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[16540] = {
					"Shadow Pillager", -- [1]
					"Karazhan", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[25755] = {
					"Ahunite Hailstone", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[172205] = {
					"Bone Thrall", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[107100] = {
					"Observer", -- [1]
					"Ashran", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[168110] = {
					"Empowered Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112732] = {
					"Brood of Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[107101] = {
					"Fel Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[10383] = {
					"Broken Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[168112] = {
					"General Kaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[21148] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[180399] = {
					"Evaile", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[52019] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[168113] = {
					"General Grashaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[36661] = {
					"Rimefang", -- [1]
					"Pit of Saron", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
				},
				[11471] = {
					"Eldreth Apparition", -- [1]
					"Dire Maul", -- [2]
				},
				[23196] = {
					"Bonechewer Behemoth", -- [1]
					"Black Temple", -- [2]
				},
				[172210] = {
					"Madstitch Fleshcrafter", -- [1]
					"Alterac Valley", -- [2]
				},
				[94816] = {
					"Togdrov", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[12047] = {
					"Stormpike Mountaineer", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[82530] = {
					"Mandragora", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[33846] = {
					"Dark Rune Sentinel", -- [1]
					"Ulduar", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[25756] = {
					"Ahunite Coldwave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17693] = {
					"Shattered Hand Scout", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[126558] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[173238] = {
					"Deadsoul Strider", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[56884] = {
					"Corrupted Taran Zhu", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[125535] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[128095] = {
					"Sister of the Lash", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[80485] = {
					"Shani Freezewind", -- [1]
					"Ashran", -- [2]
				},
				[165050] = {
					"Rotbriar Scrapper", -- [1]
					"Warsong Gulch", -- [2]
				},
				[31260] = {
					"Ymirjar Skycaller", -- [1]
					"Pit of Saron", -- [2]
				},
				[79462] = {
					"Blinding Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[112738] = {
					"Acolyte of Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[179386] = {
					"Corsair Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[16414] = {
					"Ghostly Steward", -- [1]
					"Karazhan", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[25757] = {
					"Ahunite Frostwind", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17694] = {
					"Shadowmoon Darkcaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[79463] = {
					"Radiant Supernova", -- [1]
					"Skyreach", -- [2]
				},
				[112739] = {
					"Shadowy Overfiend", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[36152] = {
					"Navigator Saracen", -- [1]
					"Isle of Conquest", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[172221] = {
					"Wretched Assistant", -- [1]
					"Alterac Valley", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Eye of the Storm", -- [2]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[19486] = {
					"Sunseeker Chemist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[122467] = {
					"Asara, Mother of Night", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[10384] = {
					"Spectral Citizen", -- [1]
					"Stratholme", -- [2]
				},
				[29213] = {
					"Anub'ar Darter", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[42808] = {
					"Stonecore Flayer", -- [1]
					"The Stonecore", -- [2]
				},
				[180415] = {
					"Mawsworn Axeguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[72810] = {
					"Staff of Resonating Water", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[122468] = {
					"Noura, Mother of Flames", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[98919] = {
					"Seacursed Swiftblade", -- [1]
					"Maw of Souls", -- [2]
				},
				[11472] = {
					"Eldreth Spirit", -- [1]
					"Dire Maul", -- [2]
				},
				[11600] = {
					"Irondeep Shaman", -- [1]
					"Alterac Valley", -- [2]
				},
				[76906] = {
					"Operator Thogar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[79466] = {
					"Initiate of the Rising Sun", -- [1]
					"Skyreach", -- [2]
				},
				[12048] = {
					"Alliance Sentinel", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[122469] = {
					"Diima, Mother of Gloom", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[114790] = {
					"Viz'aduum the Watcher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165060] = {
					"Anima Cell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91241] = {
					"Doom Lord", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17695] = {
					"Shattered Hand Assassin", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[79467] = {
					"Adept of the Dawn", -- [1]
					"Skyreach", -- [2]
				},
				[169157] = {
					"Mudlump", -- [1]
					"Castle Nathria", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[13328] = {
					"Seasoned Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
				},
				[13456] = {
					"Noxxion's Spawn", -- [1]
					"Maraudon", -- [2]
				},
				[63031] = {
					"Set'thik Fanatic", -- [1]
					"Heart of Fear", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[39994] = {
					"Conflagration", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[114792] = {
					"Virtuous Lady", -- [1]
					"Return to Karazhan", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[29214] = {
					"Anub'ar Assassin", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[61240] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[136398] = {
					"Illidari Satyr", -- [1]
					"Ashran", -- [2]
				},
				[63032] = {
					"Sra'thik Shield Master", -- [1]
					"Heart of Fear", -- [2]
				},
				[101995] = {
					"Festerface", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[95852] = {
					"Nathanos Blightcaller", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[136399] = {
					"Vicious Hellhound", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[16544] = {
					"Ethereal Thief", -- [1]
					"Karazhan", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[125545] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[59193] = {
					"Boneweaver", -- [1]
					"Scholomance", -- [2]
				},
				[180427] = {
					"Loom Guardian", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59705] = {
					"Scarlet Flamethrower", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[17952] = {
					"Darkwater Crocolisk", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[136401] = {
					"Eye of Gul'dan", -- [1]
					"Ashran", -- [2]
				},
				[180428] = {
					"Tortured Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173261] = {
					"Inert Butcher", -- [1]
					"Alterac Valley", -- [2]
				},
				[136402] = {
					"Ur'zul", -- [1]
					"Isle of Conquest", -- [2]
				},
				[77936] = {
					"Greater Storm Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[136403] = {
					"Void Terror", -- [1]
					"Ashran", -- [2]
				},
				[56890] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[114284] = {
					"Elfyra", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[10385] = {
					"Ghostly Citizen", -- [1]
					"Stratholme", -- [2]
				},
				[20896] = {
					"Ethereum Slayer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[125547] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[93295] = {
					"Darkcaster Adept", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[30111] = {
					"Twilight Worshipper", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[61242] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[11473] = {
					"Eldreth Spectre", -- [1]
					"Dire Maul", -- [2]
				},
				[136406] = {
					"Shivarra", -- [1]
					"Ashran", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[94832] = {
					"Gorebound Assassin", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[136407] = {
					"Wrathguard", -- [1]
					"Isle of Conquest", -- [2]
				},
				[122477] = {
					"F'harg", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[136408] = {
					"Darkhound", -- [1]
					"Eye of the Storm", -- [2]
				},
				[88178] = {
					"Jeron Emberfall", -- [1]
					"Ashran", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[122478] = {
					"Void Discharge", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[177365] = {
					"Trained Flayedwing", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[63035] = {
					"Zar'thik Zealot", -- [1]
					"Heart of Fear", -- [2]
				},
				[19873] = {
					"Lord Crispin Ference", -- [1]
					"Karazhan", -- [2]
				},
				[80500] = {
					"Taylor Dewland", -- [1]
					"Ashran", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[123503] = {
					"Torment of Norgannon", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[33855] = {
					"Junk Bot", -- [1]
					"Ulduar", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[114801] = {
					"Spectral Apprentice", -- [1]
					"Return to Karazhan", -- [2]
				},
				[22945] = {
					"Shadowmoon Blood Mage", -- [1]
					"Black Temple", -- [2]
				},
				[54589] = {
					"Enchanted Highmistress", -- [1]
					"Well of Eternity", -- [2]
				},
				[63036] = {
					"Kor'thik Extremist", -- [1]
					"Heart of Fear", -- [2]
				},
				[15953] = {
					"Grand Widow Faerlina", -- [1]
					"Naxxramas", -- [2]
				},
				[16017] = {
					"Patchwork Golem", -- [1]
					"Naxxramas", -- [2]
				},
				[16145] = {
					"Death Knight Captain", -- [1]
					"Naxxramas", -- [2]
				},
				[56637] = {
					"Ook-Ook", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[178394] = {
					"Cartel Lackey", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[114802] = {
					"Spectral Journeyman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[33088] = {
					"Iron Roots", -- [1]
					"Ulduar", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[93813] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[173276] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[177372] = {
					"Mawsworn Realmbinder", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75384] = {
					"Kraulshaped Monstrosity", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[119923] = {
					"Helblaze Soulmender", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[172255] = {
					"Gravestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[20898] = {
					"Gargantuan Abyssal", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29217] = {
					"Anub'ar Venomancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[93303] = {
					"Slavering Hound", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[173280] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[30625] = {
					"Satellites", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[22946] = {
					"Shadowmoon War Hound", -- [1]
					"Black Temple", -- [2]
				},
				[11602] = {
					"Irondeep Skullthumper", -- [1]
					"Alterac Valley", -- [2]
				},
				[23330] = {
					"Dragonmaw Wind Reaver", -- [1]
					"Black Temple", -- [2]
				},
				[111222] = {
					"Demonic Essence", -- [1]
					"The Nighthold", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
				},
				[12050] = {
					"Stormpike Defender", -- [1]
					"Alterac Valley", -- [2]
				},
				[56895] = {
					"Weak Spot", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[74363] = {
					"Twilight Shadow", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[74875] = {
					"Death Speaker Blackthorn", -- [1]
					"Razorfen Downs", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[95865] = {
					"Stormshield Miner", -- [1]
					"Ashran", -- [2]
				},
				[36162] = {
					"Goblin Engineering Crew", -- [1]
					"Isle of Conquest", -- [2]
				},
				[72828] = {
					"Claw of Burning Anger", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61247] = {
					"Glintrok Greenhorn", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[45377] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[115831] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[64063] = {
					"Mogu'shan Arcanist", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[19875] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Karazhan", -- [2]
				},
				[72829] = {
					"Podling Bopper", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
				},
				[91259] = {
					"Fel Imp", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[126071] = {
					"Ancient Brood Mother", -- [1]
					"Alterac Valley", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[30114] = {
					"Twilight Initiate", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[73342] = {
					"Fallen Pool Tender", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[22947] = {
					"Mother Shahraz", -- [1]
					"Black Temple", -- [2]
				},
				[126072] = {
					"Felspawn Soulstalker", -- [1]
					"Alterac Valley", -- [2]
				},
				[63808] = {
					"Faintly Glowing Gem", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[16018] = {
					"Bile Retcher", -- [1]
					"Naxxramas", -- [2]
				},
				[16146] = {
					"Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[179434] = {
					"Mawsworn Doubtcaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[126073] = {
					"Felspawn Imp", -- [1]
					"Alterac Valley", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[80511] = {
					"Power Geode", -- [1]
					"Ashran", -- [2]
				},
				[173293] = {
					"Lady Audat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[39236] = {
					"Poison Extraction Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[19876] = {
					"Lord Robin Daris", -- [1]
					"Karazhan", -- [2]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[156913] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[10387] = {
					"Vengeful Phantom", -- [1]
					"Stratholme", -- [2]
				},
				[20900] = {
					"Unchained Doombringer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[59458] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[151795] = {
					"Commander Zanneth", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[36165] = {
					"7th Legion Deckhand", -- [1]
					"Isle of Conquest", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[131318] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				[22948] = {
					"Gurtogg Bloodboil", -- [1]
					"Black Temple", -- [2]
				},
				[151796] = {
					"Knight Dameron", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[185584] = {
					"Blasphemy", -- [1]
					"Theater of Pain", -- [2]
				},
				[11859] = {
					"Doomguard", -- [1]
					"Alterac Valley", -- [2]
				},
				[78978] = {
					"Darkshard Gnasher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151797] = {
					"Marshal Magruder", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[74371] = {
					"Splinterbone Captain", -- [1]
					"Razorfen Downs", -- [2]
				},
				[33350] = {
					"Mimiron", -- [1]
					"Ulduar", -- [2]
				},
				[92801] = {
					"Winged Nightmare", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59459] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[17957] = {
					"Coilfang Champion", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[36166] = {
					"7th Legion Marine", -- [1]
					"Isle of Conquest", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[18341] = {
					"Pandemonius", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[66181] = {
					"Zar'thik Supplicant", -- [1]
					"Heart of Fear", -- [2]
				},
				[174325] = {
					"Ascended Lich", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[75396] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179446] = {
					"Incinerator Arkolath", -- [1]
					"De Other Side", -- [2]
				},
				[180470] = {
					"Verethian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				[20901] = {
					"Sargeron Archer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[59460] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[80005] = {
					"Skylord Tovra", -- [1]
					"Grimrail Depot", -- [2]
				},
				[74886] = {
					"Ashmaul Bruiser", -- [1]
					"Ashran", -- [2]
				},
				[22949] = {
					"Gathios the Shatterer", -- [1]
					"Black Temple", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[64068] = {
					"Mogu'shan Engine Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[177402] = {
					"Injured Hunter", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[84102] = {
					"Cadaverous Vulture", -- [1]
					"Ashran", -- [2]
				},
				[125569] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[59461] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[182523] = {
					"Helblaze Flamecaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[17958] = {
					"Coilfang Defender", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[9236] = {
					"Shadow Hunter Vosh'gajin", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[91270] = {
					"Dread Infernal", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
				},
				[177405] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[93830] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[133379] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[57158] = {
					"Earthen Destroyer", -- [1]
					"Dragon Soul", -- [2]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[10516] = {
					"The Unforgiven", -- [1]
					"Stratholme", -- [2]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[174336] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[30245] = {
					"Nexus Lord", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[179456] = {
					"Mawsworn Siphoner", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[151812] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[11604] = {
					"Whitewhisker Geomancer", -- [1]
					"Alterac Valley", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[143622] = {
					"Wild Imp", -- [1]
					"Twin Peaks", -- [2]
				},
				[57159] = {
					"Earthen Soldier", -- [1]
					"Dragon Soul", -- [2]
				},
				[74379] = {
					"Splinterbone Frostweaver", -- [1]
					"Razorfen Downs", -- [2]
				},
				[133384] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Eye of Azshara", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[86666] = {
					"Warspear Peon", -- [1]
					"Ashran", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13140] = {
					"Commander Dardosh", -- [1]
					"Alterac Valley", -- [2]
				},
				[18343] = {
					"Tavarok", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[180484] = {
					"Vilt", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[74380] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93834] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[180485] = {
					"Hips", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114312] = {
					"Moroes", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180486] = {
					"Dirtwhistle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[33355] = {
					"Misguided Nymph", -- [1]
					"Ulduar", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[94859] = {
					"Armored Skullsmasher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[74382] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[15956] = {
					"Anub'Rekhan", -- [1]
					"Naxxramas", -- [2]
				},
				[16020] = {
					"Mad Scientist", -- [1]
					"Naxxramas", -- [2]
				},
				[16148] = {
					"Spectral Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[80526] = {
					"Stubborn Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[137487] = {
					"Skeletal Hunting Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[16424] = {
					"Spectral Sentry", -- [1]
					"Karazhan", -- [2]
				},
				[74383] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[84110] = {
					"Korthall Soulgorger", -- [1]
					"Ashran", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[17960] = {
					"Coilfang Soothsayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[9045] = {
					"Scarshield Acolyte", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[9237] = {
					"War Master Voone", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[63049] = {
					"Set'thik Swiftblade", -- [1]
					"Heart of Fear", -- [2]
				},
				[166159] = {
					"Rotbriar Manifestation", -- [1]
					"Warsong Gulch", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[40268] = {
					"Twilight War-Mage", -- [1]
					"Grim Batol", -- [2]
				},
				[56906] = {
					"Saboteur Kip'tilak", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[32845] = {
					"Hodir", -- [1]
					"Ulduar", -- [2]
				},
				[20904] = {
					"Warden Mellichar", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[170257] = {
					"Broker Ve'nott", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[123532] = {
					"Dark Keeper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[85137] = {
					"Mathias Zunn", -- [1]
					"Ashran", -- [2]
				},
				[128140] = {
					"Lightspawn", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[134423] = {
					"Abyss Dweller", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[56395] = {
					"Shado-Pan Novice", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[40269] = {
					"Enslaved Thunder Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[114318] = {
					"Baron Rafe Dreuger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16425] = {
					"Phantom Guardsman", -- [1]
					"Karazhan", -- [2]
				},
				[123533] = {
					"Tarneth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[6219] = {
					"Corrosive Lurker", -- [1]
					"Gnomeregan", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59467] = {
					"Candlestick Mage", -- [1]
					"Scholomance", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[17961] = {
					"Coilfang Enchantress", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[13141] = {
					"Deeprot Stomper", -- [1]
					"Maraudon", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26536] = {
					"Mindless Servant", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[74900] = {
					"Kraulshaper Tukaar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[62795] = {
					"Sik'thik Warden", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[128142] = {
					"Voidling", -- [1]
					"Alterac Valley", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[40270] = {
					"Twilight Thundercaller", -- [1]
					"Grim Batol", -- [2]
				},
				[114320] = {
					"Lord Robin Daris", -- [1]
					"Return to Karazhan", -- [2]
				},
				[29096] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166169] = {
					"Adonias", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114321] = {
					"Lord Crispin Ference", -- [1]
					"Return to Karazhan", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[166170] = {
					"Phaedra", -- [1]
					"Bastion Scenario", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[23337] = {
					"Illidari Centurion", -- [1]
					"Black Temple", -- [2]
				},
				[7915] = {
					"Walking Bomb", -- [1]
					"Gnomeregan", -- [2]
				},
				[16021] = {
					"Living Monstrosity", -- [1]
					"Naxxramas", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[40015] = {
					"Runty", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[80534] = {
					"Ornery Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[173339] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[75927] = {
					"Azzakel", -- [1]
					"Auchindoun", -- [2]
				},
				[84630] = {
					"Grom'kar Grenadier", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[59213] = {
					"Woven Boneguard", -- [1]
					"Scholomance", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[17962] = {
					"Coilfang Collaborator", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[166174] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[63053] = {
					"Garalon's Leg", -- [1]
					"Heart of Fear", -- [2]
				},
				[40272] = {
					"Ascended Rockbreaker", -- [1]
					"Grim Batol", -- [2]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[41040] = {
					"Twisted Visage", -- [1]
					"Grim Batol", -- [2]
				},
				[10390] = {
					"Skeletal Guardian", -- [1]
					"Stratholme", -- [2]
				},
				[29097] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[166177] = {
					"Reinforced Pouncer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[11030] = {
					"Mindless Undead", -- [1]
					"Stratholme", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166178] = {
					"Forsworn Doubtguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[37713] = {
					"Deathwhisper Torturer", -- [1]
					"Pit of Saron", -- [2]
				},
				[76954] = {
					"Pahboo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[127124] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
				},
				[40017] = {
					"Twilight Element Warden", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[40273] = {
					"Ascended Waterlasher", -- [1]
					"Grim Batol", -- [2]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[16427] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Naxxramas", -- [2]
				},
				[17067] = {
					"Phantom Hound", -- [1]
					"Karazhan", -- [2]
				},
				[58959] = {
					"Keprik", -- [1]
					"Isle of Conquest", -- [2]
				},
				[94873] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17835] = {
					"Infinite Assassin", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[17963] = {
					"Wastewalker Slave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[13142] = {
					"Deeprot Tangler", -- [1]
					"Maraudon", -- [2]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
				},
				[62543] = {
					"Blade Lord Ta'yak", -- [1]
					"Heart of Fear", -- [2]
				},
				[125590] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[170279] = {
					"Fanatical Machinist", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114328] = {
					"Coggleston", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155945] = {
					"Gherus the Chained", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[114329] = {
					"Luminore", -- [1]
					"Return to Karazhan", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[23083] = {
					"Shadowmoon Riding Hound", -- [1]
					"Black Temple", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[23339] = {
					"Illidari Heartseeker", -- [1]
					"Black Temple", -- [2]
				},
				[69791] = {
					"Xemise", -- [1]
					"Alterac Valley", -- [2]
				},
				[16022] = {
					"Surgical Assistant", -- [1]
					"Naxxramas", -- [2]
				},
				[40019] = {
					"Twilight Obsidian Borer", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[72351] = {
					"Dragonmaw Flagbearer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[114330] = {
					"Babblet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16428] = {
					"Unstoppable Abomination", -- [1]
					"Naxxramas", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[135472] = {
					"Zanazal the Wise", -- [1]
					"Kings' Rest", -- [2]
				},
				[69792] = {
					"Xemise", -- [1]
					"Alterac Valley", -- [2]
				},
				[17964] = {
					"Wastewalker Worker", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[9239] = {
					"Smolderthorn Mystic", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[98973] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[160048] = {
					"Plaguedoused Remnant", -- [1]
					"Warsong Gulch", -- [2]
				},
				[56658] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[162096] = {
					"Adept Necromancer", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[10391] = {
					"Skeletal Berserker", -- [1]
					"Stratholme", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[34133] = {
					"Champion of Hodir", -- [1]
					"Ulduar", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[88224] = {
					"Rylai Crestfall", -- [1]
					"Ashran", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[105630] = {
					"Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173361] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[108702] = {
					"Crimson Rockshell", -- [1]
					"Shield's Rest", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[131383] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				[119453] = {
					"Felweaver Axtris", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[64338] = {
					"Instructor Kli'thak", -- [1]
					"Heart of Fear", -- [2]
				},
				[40021] = {
					"Incendiary Spark", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16429] = {
					"Soul Weaver", -- [1]
					"Naxxramas", -- [2]
				},
				[82594] = {
					"Grimrail Loader", -- [1]
					"Grimrail Depot", -- [2]
				},
				[6220] = {
					"Irradiated Horror", -- [1]
					"Gnomeregan", -- [2]
				},
				[34134] = {
					"Winter Revenant", -- [1]
					"Ulduar", -- [2]
				},
				[13079] = {
					"Keetar", -- [1]
					"Alterac Valley", -- [2]
				},
				[13143] = {
					"Lieutenant Stronghoof", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26796] = {
					"Commander Stoutbeard", -- [1]
					"The Nexus", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[54612] = {
					"Eternal Champion", -- [1]
					"Well of Eternity", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[77476] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[64339] = {
					"Instructor Tak'thok", -- [1]
					"Heart of Fear", -- [2]
				},
				[72357] = {
					"Lieutenant Krugruk", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[84644] = {
					"Vilewing Rylak", -- [1]
					"Ashran", -- [2]
				},
				[58964] = {
					"Kergok", -- [1]
					"Eye of the Storm", -- [2]
				},
				[77477] = {
					"Marak the Blooded", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[72358] = {
					"Kor'kron Cannon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[38487] = {
					"Fallen Warrior", -- [1]
					"Pit of Saron", -- [2]
				},
				[23469] = {
					"Enslaved Soul", -- [1]
					"Black Temple", -- [2]
				},
				[64340] = {
					"Instructor Maltik", -- [1]
					"Heart of Fear", -- [2]
				},
				[40023] = {
					"Defiled Earth Rager", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[16215] = {
					"Unholy Staff", -- [1]
					"Naxxramas", -- [2]
				},
				[72871] = {
					"All-Seeing Eye", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[114338] = {
					"Mana Confluence", -- [1]
					"Return to Karazhan", -- [2]
				},
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[84646] = {
					"Ilya Plagueheart", -- [1]
					"Ashran", -- [2]
				},
				[58965] = {
					"Dag-amal", -- [1]
					"Ashran", -- [2]
				},
				[165181] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[105636] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[162111] = {
					"Crumbling Skeleton", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[86183] = {
					"Beast", -- [1]
					"Ashran", -- [2]
				},
				[87719] = {
					"Ogron Hauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[161088] = {
					"Bubblz", -- [1]
					"Eye of the Storm", -- [2]
				},
				[32857] = {
					"Stormcaller Brundir", -- [1]
					"Ulduar", -- [2]
				},
				[33113] = {
					"Flame Leviathan", -- [1]
					"Ulduar", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[34137] = {
					"Winter Jormungar", -- [1]
					"Ulduar", -- [2]
				},
				[179519] = {
					"Al'dalil", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[11032] = {
					"Commander Malor", -- [1]
					"Stratholme", -- [2]
				},
				[81065] = {
					"Risen Brute", -- [1]
					"Ashran", -- [2]
				},
				[45912] = {
					"Wild Vortex", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[118437] = {
					"Decrepit Ghoul", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[74411] = {
					"Death's Head Necrolyte", -- [1]
					"Razorfen Downs", -- [2]
				},
				[91305] = {
					"Fel Iron Summoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[77483] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[59479] = {
					"Yan-Zhu the Uncasked", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[165189] = {
					"Stitch", -- [1]
					"Eye of the Storm", -- [2]
				},
				[17839] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[74412] = {
					"Aarux", -- [1]
					"Razorfen Downs", -- [2]
				},
				[75436] = {
					"Quilboar Swinewatcher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[92330] = {
					"Soul of Socrethar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[177477] = {
					"Dwyl'ir", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179526] = {
					"Troz'igal the Oppressor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[177479] = {
					"Seaharper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[76973] = {
					"Hans'gar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[163145] = {
					"Necromancer Ritualist", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[59480] = {
					"Brittle Skeleton", -- [1]
					"Scholomance", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177480] = {
					"Khennennthilee", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[61528] = {
					"Lava Guard Gordoth", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22959] = {
					"Spellbound Attendant", -- [1]
					"Black Temple", -- [2]
				},
				[177481] = {
					"Je'ni", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[76974] = {
					"Franzok", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[119977] = {
					"Stranglevine Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[16216] = {
					"Unholy Swords", -- [1]
					"Naxxramas", -- [2]
				},
				[171339] = {
					"Imprisoned Soulflayer", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[75439] = {
					"Novice Quilboar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[177483] = {
					"Aldas", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[77487] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[119978] = {
					"Fulminating Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[88238] = {
					"Alliance Spirit Guide", -- [1]
					"Rated Eye of the Storm", -- [2]
				},
				[177484] = {
					"Angelia", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[170317] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[9241] = {
					"Smolderthorn Headhunter", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[26799] = {
					"Horde Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[45915] = {
					"Armored Mistral", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[177485] = {
					"Evarius", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[119467] = {
					"Grand Inquisitor", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[56922] = {
					"Twilight Infiltrator", -- [1]
					"Dragon Soul", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[20912] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[177487] = {
					"Gormsmith Cavina", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[157010] = {
					"Beast", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[166225] = {
					"Beckoned Doubt", -- [1]
					"Bastion Scenario", -- [2]
				},
				[71858] = {
					"Wavebinder Kardris", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[177488] = {
					"San'inal", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[22960] = {
					"Dragonmaw Wyrmcaller", -- [1]
					"Black Temple", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[125612] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[95408] = {
					"Anetheron", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[71859] = {
					"Earthbreaker Haromm", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[177490] = {
					"Willowisp", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[56923] = {
					"Twilight Sapper", -- [1]
					"Dragon Soul", -- [2]
				},
				[114350] = {
					"Shade of Medivh", -- [1]
					"Return to Karazhan", -- [2]
				},
				[33118] = {
					"Ignis the Furnace Master", -- [1]
					"Ulduar", -- [2]
				},
				[42333] = {
					"High Priestess Azil", -- [1]
					"The Stonecore", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[13081] = {
					"Irondeep Raider", -- [1]
					"Alterac Valley", -- [2]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26800] = {
					"Alliance Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[45917] = {
					"Cloud Prince", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[19505] = {
					"Sunseeker Channeler", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[157016] = {
					"Imperial Archivist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[56924] = {
					"Inflamed Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83636] = {
					"Burning Blademaster", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[7309] = {
					"Earthen Custodian", -- [1]
					"Uldaman", -- [2]
				},
				[177495] = {
					"Shelynn", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[7405] = {
					"Deadly Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[43614] = {
					"Lockmaw", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[177496] = {
					"Lady of the Falls", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[83637] = {
					"Grom'kar Vanguard", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[177497] = {
					"Sorcha", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[165211] = {
					"Kel'Thuzad", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[16025] = {
					"Stitched Giant", -- [1]
					"Naxxramas", -- [2]
				},
				[83638] = {
					"Grom'kar Grimshot", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[177499] = {
					"Grove Defender", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[177500] = {
					"Corsair Brute", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[44895] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[26801] = {
					"Horde Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[37728] = {
					"Wrathbone Sorcerer", -- [1]
					"Pit of Saron", -- [2]
				},
				[18994] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[173406] = {
					"Renegade Abomination", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[103605] = {
					"Shroudseeker", -- [1]
					"Maw of Souls", -- [2]
				},
				[71865] = {
					"Garrosh Hellscream", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178526] = {
					"Shardhide Cub", -- [1]
					"Warsong Gulch", -- [2]
				},
				[32865] = {
					"Thorim", -- [1]
					"Ulduar", -- [2]
				},
				[173407] = {
					"Lord of Anguish", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[10394] = {
					"Black Guard Sentry", -- [1]
					"Stratholme", -- [2]
				},
				[79545] = {
					"Nitrogg Thundertower", -- [1]
					"Grimrail Depot", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[178528] = {
					"Fierce Gromit", -- [1]
					"Eye of the Storm", -- [2]
				},
				[44896] = {
					"Pygmy Brute", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[90296] = {
					"Soulbound Construct", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[37729] = {
					"Wrathbone Reaver", -- [1]
					"Pit of Saron", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[12122] = {
					"Duros", -- [1]
					"Alterac Valley", -- [2]
				},
				[56927] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[33890] = {
					"Brain of Yogg-Saron", -- [1]
					"Ulduar", -- [2]
				},
				[93881] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[43873] = {
					"Altairus", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[13146] = {
					"Lieutenant Murp", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[44897] = {
					"Pygmy Scout", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[84155] = {
					"Risen Mage", -- [1]
					"Ashran", -- [2]
				},
				[139626] = {
					"Dredged Sailor", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[79548] = {
					"Assault Cannon", -- [1]
					"Grimrail Depot", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[40290] = {
					"Crimsonborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[72893] = {
					"Orgrimmar Peon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[75453] = {
					"Geomancer Acolyte", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
				},
				[179560] = {
					"Fragment of Troz'igal", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[45922] = {
					"Empyrean Assassin", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[56161] = {
					"Corruption", -- [1]
					"Dragon Soul", -- [2]
				},
				[16154] = {
					"Risen Squire", -- [1]
					"Naxxramas", -- [2]
				},
				[40291] = {
					"Azureborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[56929] = {
					"Krik'thik Protectorate", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[178539] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[43875] = {
					"Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[81087] = {
					"Gor'vosh Necromancer", -- [1]
					"Ashran", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26803] = {
					"Horde Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[92350] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[54882] = {
					"Enchanted Magus", -- [1]
					"Well of Eternity", -- [2]
				},
				[77504] = {
					"Slag Behemoth", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[19508] = {
					"Sunseeker Herbalist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[167279] = {
					"Rachel", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[114364] = {
					"Mana-Gorged Wyrm", -- [1]
					"Return to Karazhan", -- [2]
				},
				[5134] = {
					"Jonivera Farmountain", -- [1]
					"Alterac Valley", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167280] = {
					"Nathan", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[58722] = {
					"Lilian Voss", -- [1]
					"Scholomance", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[59746] = {
					"Scarlet Centurion", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[167281] = {
					"Jamin", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[30643] = {
					"Lava Blaze", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[74434] = {
					"Amnennar the Coldbringer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[11483] = {
					"Mana Remnant", -- [1]
					"Dire Maul", -- [2]
				},
				[11675] = {
					"Snowblind Windcaller", -- [1]
					"Alterac Valley", -- [2]
				},
				[74435] = {
					"Mushlump", -- [1]
					"Razorfen Downs", -- [2]
				},
				[6222] = {
					"Leprous Technician", -- [1]
					"Gnomeregan", -- [2]
				},
				[167284] = {
					"Madison", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[178547] = {
					"Shardhide Growler", -- [1]
					"Warsong Gulch", -- [2]
				},
				[34918] = {
					"Kor'kron Guard", -- [1]
					"Isle of Conquest", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[156023] = {
					"Miniature Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166262] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[54884] = {
					"Enchanted Magus", -- [1]
					"Well of Eternity", -- [2]
				},
				[118975] = {
					"Xeritas", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[7022] = {
					"Venomlash Scorpid", -- [1]
					"Uldaman", -- [2]
				},
				[32871] = {
					"Algalon the Observer", -- [1]
					"Ulduar", -- [2]
				},
				[91331] = {
					"Archimonde", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[34919] = {
					"7th Legion Infantry", -- [1]
					"Isle of Conquest", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[122560] = {
					"Shadow Stalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[115905] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				[45926] = {
					"Servant of Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[94916] = {
					"Fel Touched Seer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[95940] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[72903] = {
					"Kor'kron Siegemaster", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73415] = {
					"Ichor of Y'Shaarj", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[32872] = {
					"Runic Colossus", -- [1]
					"Ulduar", -- [2]
				},
				[75975] = {
					"Skyreach Overlord", -- [1]
					"Skyreach", -- [2]
				},
				[17462] = {
					"Shattered Hand Zealot", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[61029] = {
					"Primal Fire Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[114883] = {
					"Grand Magister Rommath", -- [1]
					"The Nighthold", -- [2]
				},
				[26805] = {
					"Alliance Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[163199] = {
					"Fel'endae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[55654] = {
					"Corrupted Arcanist", -- [1]
					"Well of Eternity", -- [2]
				},
				[64357] = {
					"Kor'thik Swarmer", -- [1]
					"Heart of Fear", -- [2]
				},
				[56678] = {
					"Jade Staff", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[32873] = {
					"Ancient Rune Giant", -- [1]
					"Ulduar", -- [2]
				},
				[74953] = {
					"Congealed Droplet", -- [1]
					"Razorfen Downs", -- [2]
				},
				[59494] = {
					"Yeasty Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
				},
				[45672] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
				},
				[75466] = {
					"Vile Bat", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[23222] = {
					"Bonechewer Brawler", -- [1]
					"Black Temple", -- [2]
				},
				[94920] = {
					"Warspear Grunt", -- [1]
					"Ashran", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[56167] = {
					"Arm Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[32874] = {
					"Iron Ring Guard", -- [1]
					"Ulduar", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[75467] = {
					"Cave Bat", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[85194] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Alterac Valley", -- [2]
				},
				[34922] = {
					"Overlord Agmar", -- [1]
					"Isle of Conquest", -- [2]
				},
				[173444] = {
					"Caramain", -- [1]
					"Castle Nathria", -- [2]
				},
				[17975] = {
					"High Botanist Freywinn", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[88778] = {
					"Genevere Hymnsorrow", -- [1]
					"Ashran", -- [2]
				},
				[13276] = {
					"Wildspawn Imp", -- [1]
					"Dire Maul", -- [2]
				},
				[173445] = {
					"Sindrel", -- [1]
					"Castle Nathria", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[19511] = {
					"Nethervine Inciter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[55656] = {
					"Dreadlord Defender", -- [1]
					"Well of Eternity", -- [2]
				},
				[56168] = {
					"Wing Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[163208] = {
					"Redelav Servant", -- [1]
					"Warsong Gulch", -- [2]
				},
				[32875] = {
					"Iron Honor Guard", -- [1]
					"Ulduar", -- [2]
				},
				[173448] = {
					"Dragost", -- [1]
					"Castle Nathria", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[176520] = {
					"Ocular Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[122056] = {
					"Viceroy Nezhar", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[90316] = {
					"Shadow-Lord Iskar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[115401] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[45930] = {
					"Minister of Air", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[23223] = {
					"Bonechewer Spectator", -- [1]
					"Black Temple", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[63592] = {
					"Set'thik Gustwing", -- [1]
					"Heart of Fear", -- [2]
				},
				[94924] = {
					"Iron Peon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[182665] = {
					"Acidic Ravener", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[16156] = {
					"Dark Touched Warrior", -- [1]
					"Naxxramas", -- [2]
				},
				[32876] = {
					"Dark Rune Champion", -- [1]
					"Ulduar", -- [2]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[182666] = {
					"Hungering Widow", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163213] = {
					"Maw Infernous", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[34924] = {
					"High Commander Halford Wyrmbane", -- [1]
					"Isle of Conquest", -- [2]
				},
				[60009] = {
					"Feng the Accursed", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17976] = {
					"Commander Sarannis", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[105164] = {
					"Felgard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[85711] = {
					"Aquatic Technician", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[63593] = {
					"Set'thik Zephyrian", -- [1]
					"Heart of Fear", -- [2]
				},
				[105165] = {
					"Felgard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[122571] = {
					"Rift Warden", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[32877] = {
					"Dark Rune Warbringer", -- [1]
					"Ulduar", -- [2]
				},
				[57962] = {
					"Deathwing", -- [1]
					"Dragon Soul", -- [2]
				},
				[93391] = {
					"Captured Prisoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[71378] = {
					"Quilen Guardian", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[170385] = {
					"Writhing Misery", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172433] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[54123] = {
					"Echo of Sylvanas", -- [1]
					"End Time", -- [2]
				},
				[93392] = {
					"Captured Prisoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[172434] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Ashran", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[56427] = {
					"Warmaster Blackhorn", -- [1]
					"Dragon Soul", -- [2]
				},
				[105167] = {
					"Imp Mother Fecunda", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[172435] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[6223] = {
					"Leprous Defender", -- [1]
					"Gnomeregan", -- [2]
				},
				[176531] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17465] = {
					"Shattered Hand Centurion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[120526] = {
					"Catttai", -- [1]
					"Isle of Conquest", -- [2]
				},
				[17977] = {
					"Warp Splinter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[172437] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[13533] = {
					"Spewed Larva", -- [1]
					"Maraudon", -- [2]
				},
				[84691] = {
					"Warspear Mine Guard", -- [1]
					"Ashran", -- [2]
				},
				[172438] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[120527] = {
					"Nimneth", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[105169] = {
					"Mephistroth", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[116944] = {
					"Mephistroth", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[7343] = {
					"Splinterbone Skeleton", -- [1]
					"Razorfen Downs", -- [2]
				},
				[1860] = {
					"Kal'vhug", -- [1]
					"Eye of the Storm", -- [2]
				},
				[173464] = {
					"Deplina", -- [1]
					"Castle Nathria", -- [2]
				},
				[87252] = {
					"Unruly Ogron", -- [1]
					"Iron Docks", -- [2]
				},
				[71382] = {
					"Burial Urn", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22841] = {
					"Shade of Akama", -- [1]
					"Black Temple", -- [2]
				},
				[176537] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[173466] = {
					"Fara", -- [1]
					"Castle Nathria", -- [2]
				},
				[16029] = {
					"Sludge Belcher", -- [1]
					"Naxxramas", -- [2]
				},
				[56173] = {
					"Deathwing", -- [1]
					"Dragon Soul", -- [2]
				},
				[176538] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[33136] = {
					"Guardian of Yogg-Saron", -- [1]
					"Ulduar", -- [2]
				},
				[91349] = {
					"Mannoroth", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[176539] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59501] = {
					"Reanimated Corpse", -- [1]
					"Scholomance", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[17978] = {
					"Thorngrin the Tender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[105172] = {
					"Winged Nightmare", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[154015] = {
					"Escaped Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122578] = {
					"Kin'garoth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[173469] = {
					"Kullan", -- [1]
					"Castle Nathria", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[45935] = {
					"Temple Adept", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[154016] = {
					"Prisonbreak Soulmender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[165279] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[71385] = {
					"Sri'thik Bombardier", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[172447] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[165280] = {
					"Truthbringer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[160161] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[182687] = {
					"Dreadlord Infiltrator", -- [1]
					"Path of the Primus", -- [2]
				},
				[152995] = {
					"Warden of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180640] = {
					"Stormbound Breaker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72411] = {
					"Kor'kron Provisioner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[81114] = {
					"Gronnling Laborer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[40817] = {
					"Shadow of Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[32882] = {
					"Jormungar Behemoth", -- [1]
					"Ulduar", -- [2]
				},
				[24762] = {
					"Sunblade Keeper", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16699] = {
					"Shattered Hand Reaver", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[17083] = {
					"Fel Orc Convert", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[154022] = {
					"Prisonbreak Packleader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[157094] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[13022] = {
					"Whip Lasher", -- [1]
					"Dire Maul", -- [2]
				},
				[72412] = {
					"Kor'kron Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[13598] = {
					"Stormpike Explosives Expert", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[87771] = {
					"Slagshop Worker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[40306] = {
					"Twilight Armsmaster", -- [1]
					"Grim Batol", -- [2]
				},
				[3560] = {
					"Healing Ward", -- [1]
					"Uldaman", -- [2]
				},
				[171431] = {
					"Suppressor Vellon", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[32883] = {
					"Captured Mercenary Soldier", -- [1]
					"Ulduar", -- [2]
				},
				[20923] = {
					"Blood Guard Porung", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171432] = {
					"Suppressor Hersi", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[78557] = {
					"Goren Hatchling", -- [1]
					"Ashran", -- [2]
				},
				[104154] = {
					"Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[153003] = {
					"Soul Fragment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81117] = {
					"Karnor the Cruel", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[171433] = {
					"Suppressor Cer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[157099] = {
					"Imperial Censor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178601] = {
					"Kevin's Oozeling", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[72927] = {
					"Kovok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73951] = {
					"Commander Tik", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[115418] = {
					"Spider", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16700] = {
					"Shattered Hand Legionnaire", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84190] = {
					"Boneshallow Spider", -- [1]
					"Ashran", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176556] = {
					"Alcruux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[178604] = {
					"Mawsworn Swarmer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[115419] = {
					"Ancient Tome", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178605] = {
					"Maldraxxi Lineguard", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[4848] = {
					"Shadowforge Darkcaster", -- [1]
					"Uldaman", -- [2]
				},
				[119515] = {
					"Foul Dreadbringer", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[71393] = {
					"Mogu Shadow Ritualist", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[177582] = {
					"Nimble Scavenger", -- [1]
					"Twin Peaks", -- [2]
				},
				[72929] = {
					"Sra'thik Amber-Master", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[49267] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[10399] = {
					"Thuzadin Acolyte", -- [1]
					"Stratholme", -- [2]
				},
				[10463] = {
					"Shrieking Banshee", -- [1]
					"Stratholme", -- [2]
				},
				[119516] = {
					"Frenzied Dedicant", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[153011] = {
					"Binder Baritas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170417] = {
					"Animated Stygia", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22844] = {
					"Ashtongue Battlelord", -- [1]
					"Black Temple", -- [2]
				},
				[83681] = {
					"Buzzing Venomfly", -- [1]
					"Ashran", -- [2]
				},
				[170418] = {
					"Goxul the Devourer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[119517] = {
					"Frenzied Dedicant", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[12127] = {
					"Stormpike Guardsman", -- [1]
					"Alterac Valley", -- [2]
				},
				[178610] = {
					"Maldraxxi Gladiator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[32886] = {
					"Dark Rune Acolyte", -- [1]
					"Ulduar", -- [2]
				},
				[157109] = {
					"Vampire Bat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[153015] = {
					"Bound Soul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18493] = {
					"Auchenai Soulpriest", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[74980] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[71397] = {
					"Zar'thik Amber Priest", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72421] = {
					"Kor'kron Overseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[14303] = {
					"Petrified Guardian", -- [1]
					"Dire Maul", -- [2]
				},
				[28732] = {
					"Anub'ar Warrior", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28860] = {
					"Sartharion", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[14751] = {
					"Frostwolf Battle Standard", -- [1]
					"Alterac Valley", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[87780] = {
					"Slagshop Brute", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[72422] = {
					"Auctioneer Drezmit", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[22845] = {
					"Ashtongue Mystic", -- [1]
					"Black Temple", -- [2]
				},
				[54645] = {
					"Royal Handmaiden", -- [1]
					"Well of Eternity", -- [2]
				},
				[180665] = {
					"Gibbering Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175546] = {
					"Timecap'n Hooktail", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177594] = {
					"Mawsworn Agonizer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[130272] = {
					"Constrictor Vine", -- [1]
					"Maraudon", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[74983] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[176571] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162237] = {
					"Plagueroc", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[176572] = {
					"Mawsworn Accursed", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72424] = {
					"Auctioneer Ralinza", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[130273] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[74984] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[83687] = {
					"Ogron Destructor", -- [1]
					"Ashran", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[9568] = {
					"Overlord Wyrmthalak", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[9696] = {
					"Bloodaxe Worg", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[176574] = {
					"Mawsworn Soulkeeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72425] = {
					"Auctioneer Xifa", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[97510] = {
					"Soulbound Destructor", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[28733] = {
					"Anub'ar Shadowcaster", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[107237] = {
					"Icy Enchantment", -- [1]
					"The Nighthold", -- [2]
				},
				[10400] = {
					"Thuzadin Necromancer", -- [1]
					"Stratholme", -- [2]
				},
				[10464] = {
					"Wailing Banshee", -- [1]
					"Stratholme", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178623] = {
					"Mawsworn Guard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157122] = {
					"Patrician Cromwell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176576] = {
					"Mawsworn Pyremancer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177600] = {
					"Mawsworn Realmbreaker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[178624] = {
					"Mawsworn Sentry", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[22846] = {
					"Ashtongue Stormcaller", -- [1]
					"Black Temple", -- [2]
				},
				[83689] = {
					"Sharpclaw Hunter", -- [1]
					"Ashran", -- [2]
				},
				[176577] = {
					"Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177601] = {
					"Mawsworn Invoker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[178625] = {
					"Mawsworn Archer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[72427] = {
					"Orgrimmar Peon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178626] = {
					"Mawrat", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83690] = {
					"Panthran Witchdoctor", -- [1]
					"Ashran", -- [2]
				},
				[176579] = {
					"Keeper Hazaduum", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[120550] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[13088] = {
					"Masha Swiftcut", -- [1]
					"Alterac Valley", -- [2]
				},
				[13152] = {
					"Commander Malgor", -- [1]
					"Alterac Valley", -- [2]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13280] = {
					"Hydrospawn", -- [1]
					"Dire Maul", -- [2]
				},
				[18495] = {
					"Auchenai Vindicator", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[74476] = {
					"Domina", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[74988] = {
					"Executioner Gore", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[83691] = {
					"Panthora", -- [1]
					"Ashran", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[63607] = {
					"Squirrel", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[71405] = {
					"Set'thik Wind Wielder", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[72429] = {
					"Olvia", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171463] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[180678] = {
					"Keensnout Gromit", -- [1]
					"Silvershard Mines", -- [2]
				},
				[74989] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[175559] = {
					"Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[14752] = {
					"Stormpike Battle Standard", -- [1]
					"Alterac Valley", -- [2]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[72430] = {
					"Shan'ti", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72942] = {
					"Dragonmaw Flagbearer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[44922] = {
					"Oathsworn Axemaster", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[74478] = {
					"Death's Head Shadowmender", -- [1]
					"Razorfen Downs", -- [2]
				},
				[22847] = {
					"Ashtongue Primalist", -- [1]
					"Black Temple", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[72943] = {
					"Dragonmaw Proto-Drake", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[16704] = {
					"Shattered Hand Sharpshooter", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[83694] = {
					"Sharpclaw Poison-Shaper", -- [1]
					"Ashran", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[163277] = {
					"Forsworn Invader", -- [1]
					"Theater of Pain", -- [2]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[71408] = {
					"Kun-Da", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[105196] = {
					"Brogozog", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[36476] = {
					"Ick", -- [1]
					"Pit of Saron", -- [2]
				},
				[163278] = {
					"Fallen Battle-Medic", -- [1]
					"Theater of Pain", -- [2]
				},
				[74480] = {
					"Splinterbone Shadowcaster", -- [1]
					"Razorfen Downs", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[4849] = {
					"Shadowforge Archaeologist", -- [1]
					"Uldaman", -- [2]
				},
				[71921] = {
					"Darkfang", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72433] = {
					"Mokvar the Treasurer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72945] = {
					"Dragonmaw Bonecrusher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[29119] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[92911] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[85232] = {
					"Infested Venomfang", -- [1]
					"The Everbloom", -- [2]
				},
				[163281] = {
					"Darkvowed Scryer", -- [1]
					"Theater of Pain", -- [2]
				},
				[127723] = {
					"Imperator Deconix", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[120556] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[72434] = {
					"Treasury Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[170449] = {
					"Lurking Lasher", -- [1]
					"Eye of the Storm", -- [2]
				},
				[44924] = {
					"Oathsworn Myrmidon", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[22848] = {
					"Storm Fury", -- [1]
					"Black Temple", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"Alterac Valley", -- [2]
				},
				[77042] = {
					"Sargerei Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[127724] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[71923] = {
					"Bloodclaw", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[105199] = {
					"Felstalker Dreadhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[178642] = {
					"Shandris Feathermoon", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[65402] = {
					"Gurthan Swiftblade", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[180690] = {
					"Vazzaren the Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74483] = {
					"Death's Head Arachnomancer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[6225] = {
					"Mechano-Tank", -- [1]
					"Gnomeregan", -- [2]
				},
				[134616] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[92913] = {
					"Gorebound Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[170452] = {
					"Essence Orb", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[127725] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13089] = {
					"Coldmine Guard", -- [1]
					"Alterac Valley", -- [2]
				},
				[105200] = {
					"Felguard Invader", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[36478] = {
					"Soulguard Watchman", -- [1]
					"The Forge of Souls", -- [2]
				},
				[163286] = {
					"Forsworn Darkblade", -- [1]
					"Theater of Pain", -- [2]
				},
				[18497] = {
					"Auchenai Monk", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[13537] = {
					"Seasoned Coldmine Surveyor", -- [1]
					"Alterac Valley", -- [2]
				},
				[13601] = {
					"Tinkerer Gizlock", -- [1]
					"Maraudon", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Alterac Valley", -- [2]
				},
				[56188] = {
					"Blistering Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28736] = {
					"Skittering Infector", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[157145] = {
					"Gravitas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[77557] = {
					"Admiral Gar'an", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[79093] = {
					"Skyreach Sun Talon", -- [1]
					"Skyreach", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[88820] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Ashran", -- [2]
				},
				[74486] = {
					"Freezing Spirit", -- [1]
					"Razorfen Downs", -- [2]
				},
				[22849] = {
					"Ashtongue Feral Spirit", -- [1]
					"Black Temple", -- [2]
				},
				[165339] = {
					"Empowered Baroness Ninadar", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[40319] = {
					"Drahga Shadowburner", -- [1]
					"Grim Batol", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[157149] = {
					"Heartseeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[175579] = {
					"Fae Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[170460] = {
					"Pearly Wader", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[85750] = {
					"Sharptalon Outcast", -- [1]
					"Ashran", -- [2]
				},
				[34944] = {
					"Keep Cannon", -- [1]
					"Isle of Conquest", -- [2]
				},
				[43391] = {
					"Millhouse Manastorm", -- [1]
					"The Stonecore", -- [2]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[18498] = {
					"Unliving Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[74488] = {
					"Frozen Soul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[175581] = {
					"Fleeting Memory", -- [1]
					"Eye of the Storm", -- [2]
				},
				[176605] = {
					"Gilgamesh", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152033] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177630] = {
					"Forest Guardian", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[74489] = {
					"Thorn Eater Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[75001] = {
					"Hunter Bonetusk", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[85752] = {
					"Outcast Harbinger", -- [1]
					"Ashran", -- [2]
				},
				[59518] = {
					"Bloated Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[105206] = {
					"Wrathguard Dreadblade", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[72954] = {
					"Kor'thik Honor Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[74490] = {
					"Boneflayer Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[11490] = {
					"Zevrim Thornhoof", -- [1]
					"Dire Maul", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[85753] = {
					"Kaliri Skyterror", -- [1]
					"Ashran", -- [2]
				},
				[102647] = {
					"Ooker Dooker", -- [1]
					"Dire Maul", -- [2]
				},
				[127732] = {
					"Clobex", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[113398] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
				},
				[12258] = {
					"Razorlash", -- [1]
					"Maraudon", -- [2]
				},
				[165348] = {
					"Ritual Bone Pile", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[178659] = {
					"Wild Hunt Enchanter", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[59519] = {
					"Stout Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[71420] = {
					"Hungry Kunchong", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[13154] = {
					"Commander Louis Philips", -- [1]
					"Alterac Valley", -- [2]
				},
				[105720] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[18371] = {
					"Shirrak the Dead Watcher", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[61567] = {
					"Vizier Jin'bak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[74492] = {
					"Bubonic Geist", -- [1]
					"Razorfen Downs", -- [2]
				},
				[174565] = {
					"Raider's Tanking Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[178661] = {
					"Mawsworn Interceptor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[103673] = {
					"Darkglare", -- [1]
					"Eye of the Storm", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[14370] = {
					"Cadaverous Worm", -- [1]
					"Dire Maul", -- [2]
				},
				[174567] = {
					"Raider's Training Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[85756] = {
					"Onyx Ravager", -- [1]
					"Ashran", -- [2]
				},
				[59520] = {
					"Fizzy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[174568] = {
					"Dungeoneer's Training Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[122104] = {
					"Portal Keeper Hasabel", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[53889] = {
					"Corrupted Blood", -- [1]
					"Dragon Soul", -- [2]
				},
				[23235] = {
					"Bonechewer Blade Fury", -- [1]
					"Black Temple", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[3977] = {
					"High Inquisitor Whitemane", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[16034] = {
					"Plague Beast", -- [1]
					"Naxxramas", -- [2]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[59521] = {
					"Bubbling Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[179692] = {
					"Elysian Bulwark", -- [1]
					"Twin Peaks", -- [2]
				},
				[82175] = {
					"Silverwing Kaliri", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[53890] = {
					"Hideous Amalgamation", -- [1]
					"Dragon Soul", -- [2]
				},
				[167406] = {
					"Sire Denathrius", -- [1]
					"Castle Nathria", -- [2]
				},
				[108796] = {
					"Arcanist Malrodi", -- [1]
					"Court of Stars", -- [2]
				},
				[177645] = {
					"Melded Gorger", -- [1]
					"Twin Peaks", -- [2]
				},
				[4850] = {
					"Stonevault Cave Lurker", -- [1]
					"Uldaman", -- [2]
				},
				[56706] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[10467] = {
					"Mana Tide Totem", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[178671] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[59522] = {
					"Sudsy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[59778] = {
					"Krik'thik Striker", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[11043] = {
					"Risen Monk", -- [1]
					"Stratholme", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[44932] = {
					"Oathsworn Pathfinder", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[164338] = {
					"Mawsworn Guard", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[53891] = {
					"Corruption", -- [1]
					"Dragon Soul", -- [2]
				},
				[83713] = {
					"Titarus", -- [1]
					"Ashran", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[63106] = {
					"Sik'thik Swarmer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[93952] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[164339] = {
					"Mawsworn Bowman", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[33670] = {
					"Aerial Command Unit", -- [1]
					"Ulduar", -- [2]
				},
				[17477] = {
					"Hellfire Imp", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[72452] = {
					"Kor'kron Dire Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72964] = {
					"Goro'dan", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18373] = {
					"Exarch Maladaar", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[165366] = {
					"Veteran Siegecrafter", -- [1]
					"Plaguefall", -- [2]
				},
				[124158] = {
					"Imonar the Soulhunter", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[83715] = {
					"Risen Ancient", -- [1]
					"Ashran", -- [2]
				},
				[76036] = {
					"Twilight Shadow", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[164343] = {
					"Mawsworn Debilitator", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[76037] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[34183] = {
					"Arachnopod Destroyer", -- [1]
					"Ulduar", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[93955] = {
					"Delusional Zealot", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[164345] = {
					"Scavenging Soul Eater", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[30276] = {
					"Ahn'kahar Web Winder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[72966] = {
					"Resonating Amber", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[22853] = {
					"Illidari Defiler", -- [1]
					"Black Temple", -- [2]
				},
				[76038] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[23237] = {
					"Bonechewer Blood Prophet", -- [1]
					"Black Temple", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[85765] = {
					"Cursed Kaliri", -- [1]
					"Ashran", -- [2]
				},
				[47238] = {
					"Whipping Wind", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[16163] = {
					"Death Knight Cavalier", -- [1]
					"Naxxramas", -- [2]
				},
				[80646] = {
					"Fiery Siegemaker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[162300] = {
					"Ravenous Galescreamer", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[41095] = {
					"Twilight Drake", -- [1]
					"Grim Batol", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[175611] = {
					"The Tarragrue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76039] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[34184] = {
					"Clockwork Mechanic", -- [1]
					"Ulduar", -- [2]
				},
				[85766] = {
					"Cursed Sharptalon", -- [1]
					"Ashran", -- [2]
				},
				[156158] = {
					"Adjutant Felipos", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17990] = {
					"Underbog Mushroom", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[72456] = {
					"Korgra the Snake", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[163326] = {
					"Skeletal Defender", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[83719] = {
					"Wild Goreger", -- [1]
					"Ashran", -- [2]
				},
				[184828] = {
					"Winged Soul Eater", -- [1]
					"Path of the Primus", -- [2]
				},
				[85767] = {
					"Cursed Harbinger", -- [1]
					"Ashran", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[71433] = {
					"Spark of Life", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[40584] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[106245] = {
					"Inna the Cryptstalker", -- [1]
					"Shield's Rest", -- [2]
				},
				[41096] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[74505] = {
					"Thruk", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[83720] = {
					"Sporebat Darter", -- [1]
					"Ashran", -- [2]
				},
				[10596] = {
					"Mother Smolderweb", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[170496] = {
					"Shanir Veincutter", -- [1]
					"Theater of Pain", -- [2]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
				},
				[127235] = {
					"Garothi Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[173568] = {
					"Anima Crazed Worker", -- [1]
					"Castle Nathria", -- [2]
				},
				[175616] = {
					"Zo'phex", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[30277] = {
					"Ahn'kahar Slasher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[113413] = {
					"Infernal Siegebreaker", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[106246] = {
					"Shae", -- [1]
					"Shield's Rest", -- [2]
				},
				[124164] = {
					"Torment of Golganneth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[11492] = {
					"Alzzin the Wildshaper", -- [1]
					"Dire Maul", -- [2]
				},
				[65414] = {
					"Ethereal Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[32906] = {
					"Freya", -- [1]
					"Ulduar", -- [2]
				},
				[84746] = {
					"Captured Gor'vosh Stoneshaper", -- [1]
					"Ashran", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[179366] = {
					"Damp Skrat", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[59614] = {
					"Bored Student", -- [1]
					"Scholomance", -- [2]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[59982] = {
					"Meat Graft", -- [1]
					"Scholomance", -- [2]
				},
				[17991] = {
					"Rokmar the Crackler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[20902] = {
					"Sargeron Hellcaller", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[102337] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[13284] = {
					"Frostwolf Shaman", -- [1]
					"Alterac Valley", -- [2]
				},
				[18503] = {
					"Phantasmal Possessor", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[59974] = {
					"Alanthu", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[124166] = {
					"Torment of Khaz'goroth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[19949] = {
					"Sapling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[60033] = {
					"Frenzied Spirit", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[59503] = {
					"Brittle Skeleton", -- [1]
					"Scholomance", -- [2]
				},
				[54920] = {
					"Infinite Suppressor", -- [1]
					"End Time", -- [2]
				},
				[85771] = {
					"Elder Darkweaver Kath", -- [1]
					"Ashran", -- [2]
				},
				[180741] = {
					"Xuen", -- [1]
					"Alterac Valley", -- [2]
				},
				[20870] = {
					"Zereketh the Unbound", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[61705] = {
					"Corrupted Flamecaller", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[61463] = {
					"Slagmaw", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[16573] = {
					"Crypt Guard", -- [1]
					"Naxxramas", -- [2]
				},
				[90269] = {
					"Tyrant Velhari", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
				},
				[14308] = {
					"Ferra", -- [1]
					"Dire Maul", -- [2]
				},
				[32907] = {
					"Captured Mercenary Captain", -- [1]
					"Ulduar", -- [2]
				},
				[61657] = {
					"Adolescent Flame Hound", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[82308] = {
					"Shadowmoon Stalker", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[83629] = {
					"Lunarfall Goren Hatchling", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[74351] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[20873] = {
					"Negaton Warp-Master", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[60710] = {
					"Subetai the Swift", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[36620] = {
					"Soulguard Adept", -- [1]
					"The Forge of Souls", -- [2]
				},
				[72655] = {
					"Fragment of Pride", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[43658] = {
					"Frenzied Crocolisk", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[20859] = {
					"Arcatraz Warder", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[30278] = {
					"Ahn'kahar Spell Flinger", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[93913] = {
					"Fel Scorcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[5135] = {
					"Svalbrad Farmountain", -- [1]
					"Alterac Valley", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[28925] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[22855] = {
					"Illidari Nightlord", -- [1]
					"Black Temple", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[40320] = {
					"Valiona", -- [1]
					"Grim Batol", -- [2]
				},
				[23239] = {
					"Bonechewer Combatant", -- [1]
					"Black Temple", -- [2]
				},
				[93931] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[55689] = {
					"Hagara the Stormbinder", -- [1]
					"Dragon Soul", -- [2]
				},
				[16036] = {
					"Frenzied Bat", -- [1]
					"Naxxramas", -- [2]
				},
				[13299] = {
					"Lieutenant Lonadin", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[16164] = {
					"Shade of Naxxramas", -- [1]
					"Naxxramas", -- [2]
				},
				[56713] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[93068] = {
					"Xhul'horac", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94285] = {
					"Fel Extractor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[32908] = {
					"Captured Mercenary Captain", -- [1]
					"Ulduar", -- [2]
				},
				[29063] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28729] = {
					"Watcher Narjil", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28731] = {
					"Watcher Silthik", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28730] = {
					"Watcher Gashra", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[129599] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[17381] = {
					"The Maker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[74729] = {
					"Voidwalker Minion", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[95632] = {
					"Sargerei Enforcer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[28924] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[6234] = {
					"Mechanized Guardian", -- [1]
					"Gnomeregan", -- [2]
				},
				[94861] = {
					"Grim Ambusher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[154127] = {
					"Fire Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[94894] = {
					"Keen-Eyed Gronnstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[172557] = {
					"Lichsworn Guardian", -- [1]
					"Isle of Conquest", -- [2]
				},
				[94693] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[36666] = {
					"Spectral Warden", -- [1]
					"The Forge of Souls", -- [2]
				},
				[75155] = {
					"Aku'mai the Devourer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[19016] = {
					"Hellfire Familiar", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[63853] = {
					"Zar'thik Supplicant", -- [1]
					"Heart of Fear", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[9701] = {
					"Spire Scorpid", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[118475] = {
					"Rotting Geist", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[72353] = {
					"Dragonmaw Flameslinger", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72941] = {
					"Dragonmaw Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
				},
				[23524] = {
					"Ashtongue Spiritbinder", -- [1]
					"Black Temple", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19633] = {
					"Bloodwarder Mender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[5139] = {
					"Kurdrum Barleybeard", -- [1]
					"Alterac Valley", -- [2]
				},
				[17653] = {
					"Shadowmoon Channeler", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[10405] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[91919] = {
					"Marked Apexis Windwraith", -- [1]
					"Ashran", -- [2]
				},
				[72791] = {
					"Lingering Corruption", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[19513] = {
					"Mutate Fear-Shrieker", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[22884] = {
					"Leviathan", -- [1]
					"Black Temple", -- [2]
				},
				[60040] = {
					"Commander Durand", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[119052] = {
					"War Banner", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[59223] = {
					"Brother Korloff", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[74446] = {
					"Ghamoo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[30279] = {
					"Deep Crawler", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[73349] = {
					"Tormented Initiate", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[154131] = {
					"Molten Fury", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[88448] = {
					"Belloc Brightblade", -- [1]
					"Ashran", -- [2]
				},
				[32639] = {
					"Gnimo", -- [1]
					"Eye of the Storm", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[83729] = {
					"Ashmaul Warden", -- [1]
					"Ashran", -- [2]
				},
				[29051] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[71392] = {
					"Shadow Ritualist Phylactery", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[54923] = {
					"Infinite Warden", -- [1]
					"End Time", -- [2]
				},
				[93968] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[74353] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[19507] = {
					"Sunseeker Gene-Splicer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[73452] = {
					"Harbinger of Y'Shaarj", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61658] = {
					"Mature Flame Hound", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[75286] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[91541] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75980] = {
					"Blindlight Razorjaw", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[130522] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[36874] = {
					"Disturbed Glacial Revenant", -- [1]
					"Pit of Saron", -- [2]
				},
				[6227] = {
					"Mechano-Frostwalker", -- [1]
					"Gnomeregan", -- [2]
				},
				[73184] = {
					"Starved Yeti", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[7209] = {
					"Obsidian Shard", -- [1]
					"Uldaman", -- [2]
				},
				[177683] = {
					"Hungering Mite", -- [1]
					"Twin Peaks", -- [2]
				},
				[9692] = {
					"Bloodaxe Raider", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[60043] = {
					"Jade Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[43917] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[17993] = {
					"Bloodwarder Protector", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[80659] = {
					"Supercharged Siegemaker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[36494] = {
					"Forgemaster Garfrost", -- [1]
					"Pit of Saron", -- [2]
				},
				[13285] = {
					"Death Lash", -- [1]
					"Dire Maul", -- [2]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[29120] = {
					"Anub'arak", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[18587] = {
					"Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[75285] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[90378] = {
					"Kilrogg Deadeye", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[18421] = {
					"Sunseeker Researcher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[71158] = {
					"Rik'kal the Dissector", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[13797] = {
					"Mountaineer Boombellow", -- [1]
					"Alterac Valley", -- [2]
				},
				[75522] = {
					"Bloodtail Grouper", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[17980] = {
					"Laj", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[105419] = {
					"Dire Basilisk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[134069] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[9267] = {
					"Smolderthorn Axe Thrower", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[72981] = {
					"Aggron", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[13218] = {
					"Grunnda Wolfheart", -- [1]
					"Alterac Valley", -- [2]
				},
				[170451] = {
					"Mature Stellarwasp", -- [1]
					"Eye of the Storm", -- [2]
				},
				[17892] = {
					"Infinite Chronomancer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[29128] = {
					"Anub'ar Prime Guard", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
				},
				[34191] = {
					"Trash", -- [1]
					"Ulduar", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[94995] = {
					"Graggra", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[43662] = {
					"Unbound Earth Rager", -- [1]
					"The Stonecore", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Eye of the Storm", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[7603] = {
					"Leprous Assistant", -- [1]
					"Gnomeregan", -- [2]
				},
				[17252] = {
					"Felguard", -- [1]
					"Ashran", -- [2]
				},
				[127119] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[33988] = {
					"Immortal Guardian", -- [1]
					"Ulduar", -- [2]
				},
				[74518] = {
					"Executioner Gore", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[71153] = {
					"Hisek the Swarmkeeper", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[134686] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[29117] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[54500] = {
					"Legion Demon", -- [1]
					"Well of Eternity", -- [2]
				},
				[24675] = {
					"Phoenix Egg", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[71160] = {
					"Iyyokuk the Lucid", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[11678] = {
					"Snowblind Ambusher", -- [1]
					"Alterac Valley", -- [2]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				[61485] = {
					"General Pa'valak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[16165] = {
					"Necro Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[56717] = {
					"Hoptallus", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[72983] = {
					"Corrupted Skullsplitter", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61444] = {
					"Ming the Cunning", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[72350] = {
					"Dragonmaw Elite Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[24777] = {
					"Sunblade Sentinel", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[63048] = {
					"Kor'thik Slicer", -- [1]
					"Heart of Fear", -- [2]
				},
				[166644] = {
					"Artificer Xy'mox", -- [1]
					"Castle Nathria", -- [2]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[34192] = {
					"Boomer XP-500", -- [1]
					"Ulduar", -- [2]
				},
				[29118] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[179739] = {
					"Porous Stone Statue", -- [1]
					"Alterac Valley", -- [2]
				},
				[131617] = {
					"Groundskeeper Lilith", -- [1]
					"Waycrest Manor", -- [2]
				},
				[59789] = {
					"Thalnos the Soulrender", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[166429] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[71395] = {
					"Modified Anima Golem", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[17994] = {
					"Bloodwarder Falconer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[56162] = {
					"Corruption", -- [1]
					"Dragon Soul", -- [2]
				},
				[74721] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18506] = {
					"Raging Soul", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[22883] = {
					"Aqueous Spawn", -- [1]
					"Black Temple", -- [2]
				},
				[71383] = {
					"Kor'thik Warcaller", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[168973] = {
					"High Torturer Darithos", -- [1]
					"Castle Nathria", -- [2]
				},
				[137485] = {
					"Bloodsworn Agent", -- [1]
					"Kings' Rest", -- [2]
				},
				[18499] = {
					"Unliving Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[138489] = {
					"Shadow of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[34960] = {
					"Alliance Gunship Captain", -- [1]
					"Isle of Conquest", -- [2]
				},
				[72367] = {
					"Dragonmaw Tidal Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[175646] = {
					"P.O.S.T. Master", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[23563] = {
					"Soul Weaver", -- [1]
					"Naxxramas", -- [2]
				},
				[56718] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[178718] = {
					"Wild Hunt Archer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[74009] = {
					"Crawler Mine", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[32913] = {
					"Elder Ironbranch", -- [1]
					"Ulduar", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[10406] = {
					"Ghoul Ravener", -- [1]
					"Stratholme", -- [2]
				},
				[64358] = {
					"Set'thik Tempest", -- [1]
					"Heart of Fear", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[34193] = {
					"Clockwork Sapper", -- [1]
					"Ulduar", -- [2]
				},
				[178719] = {
					"Wild Hunt Nightblade", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[73185] = {
					"Enraged Mushan Beast", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[84860] = {
					"Iron Earthbinder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[71380] = {
					"Animated Stone Mogu", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[56915] = {
					"Sun", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[10982] = {
					"Whitewhisker Vermin", -- [1]
					"Alterac Valley", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[36497] = {
					"Bronjahm", -- [1]
					"The Forge of Souls", -- [2]
				},
				[72986] = {
					"Shanna Sparkfizz", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73414] = {
					"Kor'kron Reaper", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[82201] = {
					"Kronus", -- [1]
					"Ashran", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[75034] = {
					"Twilight Tormentor", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[57280] = {
					"Twilight Siege Captain", -- [1]
					"Dragon Soul", -- [2]
				},
				[72249] = {
					"Galakras", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[144249] = {
					"Omega Buster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[54927] = {
					"Guardian Demon", -- [1]
					"Well of Eternity", -- [2]
				},
				[72354] = {
					"Dragonmaw Bonecrusher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72947] = {
					"Kor'kron Demolisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[72131] = {
					"Blind Blademaster", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[56719] = {
					"Sha of Violence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[72132] = {
					"Craven Drok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[57231] = {
					"Twilight Portal", -- [1]
					"Dragon Soul", -- [2]
				},
				[16459] = {
					"Wanton Hostess", -- [1]
					"Karazhan", -- [2]
				},
				[144244] = {
					"The Platinum Pummeler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[166436] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[72847] = {
					"Hellscream Annihilator", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73098] = {
					"Kor'kron Overseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72194] = {
					"Hellscream Demolisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[33818] = {
					"Twilight Adherent", -- [1]
					"Ulduar", -- [2]
				},
				[58108] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[72787] = {
					"Blade of the Hundred Steps", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[60047] = {
					"Amethyst Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[175652] = {
					"Lord of Woe", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
				},
				[72455] = {
					"Overseer Komak", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[96756] = {
					"Ymiron, the Fallen King", -- [1]
					"Maw of Souls", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[72768] = {
					"Kor'kron War Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[72352] = {
					"Dragonmaw Ebon Stalker", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[152703] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[136984] = {
					"Reban", -- [1]
					"Kings' Rest", -- [2]
				},
				[48756] = {
					"Hooked Net", -- [1]
					"Grim Batol", -- [2]
				},
				[14498] = {
					"Tosamina", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[13798] = {
					"Jotek", -- [1]
					"Alterac Valley", -- [2]
				},
				[72158] = {
					"Katis", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[78620] = {
					"Shadow Figurine", -- [1]
					"Ashran", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[127230] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[84202] = {
					"Rescued Vanguard Priest", -- [1]
					"Ashran", -- [2]
				},
				[122135] = {
					"Shatug", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[82204] = {
					"Atomik", -- [1]
					"Ashran", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
				},
				[91001] = {
					"Tarspitter Lurker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[136976] = {
					"T'zala", -- [1]
					"Kings' Rest", -- [2]
				},
				[114324] = {
					"Winged Assistant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[32904] = {
					"Dark Rune Commoner", -- [1]
					"Ulduar", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[73948] = {
					"Commander Ik'tal", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[64446] = {
					"Training Dummy", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[73904] = {
					"Kor'kron Iron Sentinel", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[10398] = {
					"Thuzadin Shadowcaster", -- [1]
					"Stratholme", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[72157] = {
					"Hagrus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[36499] = {
					"Soulguard Reaper", -- [1]
					"The Forge of Souls", -- [2]
				},
				[23394] = {
					"Promenade Sentinel", -- [1]
					"Black Temple", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[173609] = {
					"Nathrian Conservator", -- [1]
					"Castle Nathria", -- [2]
				},
				[18315] = {
					"Ethereal Theurgist", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[165868] = {
					"Minor Hex", -- [1]
					"Warsong Gulch", -- [2]
				},
				[168490] = {
					"Brittlebark Mischief-Maker", -- [1]
					"Eye of the Storm", -- [2]
				},
				[102295] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[23371] = {
					"Shadowmoon Fallen", -- [1]
					"Black Temple", -- [2]
				},
				[127233] = {
					"Flameweaver", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[135192] = {
					"Honored Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[15974] = {
					"Dread Creeper", -- [1]
					"Naxxramas", -- [2]
				},
				[98293] = {
					"Saltsea Globule", -- [1]
					"Eye of Azshara", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[86552] = {
					"Gorged Burster", -- [1]
					"The Everbloom", -- [2]
				},
				[40448] = {
					"Twilight Enforcer", -- [1]
					"Grim Batol", -- [2]
				},
				[11058] = {
					"Fras Siabi", -- [1]
					"Stratholme", -- [2]
				},
				[54517] = {
					"Time-Twisted Shadowtalon", -- [1]
					"End Time", -- [2]
				},
				[16460] = {
					"Night Mistress", -- [1]
					"Karazhan", -- [2]
				},
				[39956] = {
					"Twilight Enforcer", -- [1]
					"Grim Batol", -- [2]
				},
				[13316] = {
					"Coldmine Peon", -- [1]
					"Alterac Valley", -- [2]
				},
				[134691] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[34196] = {
					"Rune Etched Sentry", -- [1]
					"Ulduar", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17356] = {
					"Creeping Ooze", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[180779] = {
					"Terrorspine", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[73670] = {
					"Gate-Crasher Sav'ah", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61056] = {
					"Primal Earth Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[109075] = {
					"Parasitic Lasher", -- [1]
					"The Nighthold", -- [2]
				},
				[60561] = {
					"Earthgrab Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[29153] = {
					"Animated Bones", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[178732] = {
					"Mawsworn Runesmith", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164342] = {
					"Mawsworn Defender", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[180780] = {
					"Dreadmaw", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173613] = {
					"Nathrian Registrar", -- [1]
					"Castle Nathria", -- [2]
				},
				[137473] = {
					"Guard Captain Atu", -- [1]
					"Kings' Rest", -- [2]
				},
				[47720] = {
					"Camel", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[10120] = {
					"Vault Warder", -- [1]
					"Uldaman", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
				},
				[178733] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[4852] = {
					"Stonevault Oracle", -- [1]
					"Uldaman", -- [2]
				},
				[180781] = {
					"Frothing Hound", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[119524] = {
					"Shrieking Hellbat", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[61445] = {
					"Haiyan the Unstoppable", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[56587] = {
					"Twilight Assault Drake", -- [1]
					"Dragon Soul", -- [2]
				},
				[40084] = {
					"Bellows Slave", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[105182] = {
					"Gravax the Desecrator", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[178734] = {
					"Mawsworn Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163376] = {
					"Redelav Attendant", -- [1]
					"Warsong Gulch", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[115484] = {
					"Fel Bat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[10407] = {
					"Fleshflayer Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[175663] = {
					"Hylbrande", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[150396] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[34197] = {
					"Chamber Overseer", -- [1]
					"Ulduar", -- [2]
				},
				[61928] = {
					"Sik'thik Guardian", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[93983] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[59794] = {
					"Krik'thik Disruptor", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[10983] = {
					"Winterax Troll", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[30283] = {
					"Plague Walker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[16037] = {
					"Plagued Bat", -- [1]
					"Naxxramas", -- [2]
				},
				[154663] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[72155] = {
					"Cazul", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[124947] = {
					"Void Flayer", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[9266] = {
					"Smolderthorn Witch Doctor", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[174566] = {
					"Dungeoneer's Tanking Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[48634] = {
					"Guild Battle Standard", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177165] = {
					"Mawsworn Destroyer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[166451] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[87841] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[118804] = {
					"Domatrax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[72483] = {
					"Sarok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180786] = {
					"Binding of Misery", -- [1]
					"De Other Side", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[33430] = {
					"Guardian Lasher", -- [1]
					"Ulduar", -- [2]
				},
				[92961] = {
					"Gorebound Brute", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[184882] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[34198] = {
					"Iron Mender", -- [1]
					"Ulduar", -- [2]
				},
				[77687] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[93985] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[172596] = {
					"Necrotic Acolyte", -- [1]
					"Isle of Conquest", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Silvershard Mines", -- [2]
				},
				[166453] = {
					"Darkturned Clawguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[156142] = {
					"Seeker of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[72484] = {
					"Zazo", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[36502] = {
					"Devourer of Souls", -- [1]
					"The Forge of Souls", -- [2]
				},
				[89890] = {
					"Fel Lord Zakuun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[164406] = {
					"Shriekwing", -- [1]
					"Castle Nathria", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[39961] = {
					"Enslaved Water Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[88818] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[168502] = {
					"Riverfall Snapper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[16482] = {
					"Trapped Soul", -- [1]
					"Karazhan", -- [2]
				},
				[33388] = {
					"Dark Rune Guardian", -- [1]
					"Ulduar", -- [2]
				},
				[78116] = {
					"Water Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17357] = {
					"Creeping Oozeling", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[73742] = {
					"Thresher Turret", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72485] = {
					"Goma", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[80676] = {
					"Iron Flametwister", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[21128] = {
					"Coilfang Ray", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[49045] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[33431] = {
					"Forest Swarmer", -- [1]
					"Ulduar", -- [2]
				},
				[114210] = {
					"Doomguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[165275] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[34199] = {
					"Lightning Charged Iron Dwarf", -- [1]
					"Ulduar", -- [2]
				},
				[178743] = {
					"Terrified Glitterfeather", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[77605] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[16461] = {
					"Zealous Paramour", -- [1]
					"Karazhan", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[76292] = {
					"Skyreach Shield Construct", -- [1]
					"Skyreach", -- [2]
				},
				[72486] = {
					"Doyo'da", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[30284] = {
					"Bonegrinder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[80677] = {
					"Iron Journeyman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[178744] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[172601] = {
					"Necrotic Sorcerer", -- [1]
					"Isle of Conquest", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[74534] = {
					"Crystalline Behemoth", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[115730] = {
					"Felguard Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[123760] = {
					"Fel-Infused Destructor", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[76260] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[13021] = {
					"Warpwood Crusher", -- [1]
					"Dire Maul", -- [2]
				},
				[101667] = {
					"Shielded Anchor", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[34085] = {
					"Forge Construct", -- [1]
					"Ulduar", -- [2]
				},
				[15975] = {
					"Carrion Spinner", -- [1]
					"Naxxramas", -- [2]
				},
				[104818] = {
					"Ancestral Protection Totem", -- [1]
					"Silvershard Mines", -- [2]
				},
				[59752] = {
					"Shado-Pan Ambusher", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[16167] = {
					"Bony Construct", -- [1]
					"Naxxramas", -- [2]
				},
				[72487] = {
					"Kozish", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[32918] = {
					"Detonating Lasher", -- [1]
					"Ulduar", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[57749] = {
					"Faceless Corruptor", -- [1]
					"Dragon Soul", -- [2]
				},
				[33432] = {
					"Leviathan Mk II", -- [1]
					"Ulduar", -- [2]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[178747] = {
					"Injured Hunter", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[7321] = {
					"Stonevault Flameweaver", -- [1]
					"Uldaman", -- [2]
				},
				[106972] = {
					"Beast", -- [1]
					"Alterac Valley", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[43927] = {
					"Harbinger of Darkness", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[180567] = {
					"Frenzied Nightclaw", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[28859] = {
					"Malygos", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[121711] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[18894] = {
					"Felguard Brute", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[175677] = {
					"Smuggled Creature", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[76810] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[87411] = {
					"Workshop Guardian", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77257] = {
					"Orgrim Doomhammer", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[34057] = {
					"Assault Bot", -- [1]
					"Ulduar", -- [2]
				},
				[98246] = {
					"Risen Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[57875] = {
					"Eye of Go'rath", -- [1]
					"Dragon Soul", -- [2]
				},
				[118713] = {
					"Felstrider Orbcaster", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
				},
				[26802] = {
					"Alliance Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[40600] = {
					"Faceless Corruptor", -- [1]
					"Grim Batol", -- [2]
				},
				[177489] = {
					"Timaeron", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16457] = {
					"Maiden of Virtue", -- [1]
					"Karazhan", -- [2]
				},
				[10408] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
				},
				[29822] = {
					"Drakkari Fire Weaver", -- [1]
					"Gundrak", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Eye of the Storm", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[45919] = {
					"Young Storm Dragon", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[71466] = {
					"Iron Juggernaut", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[30285] = {
					"Eye of Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[72490] = {
					"Overseer Mojka", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[76253] = {
					"Dread Raven Hatchling", -- [1]
					"Skyreach", -- [2]
				},
				[61334] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[130274] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[17959] = {
					"Coilfang Slavehandler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176705] = {
					"Venza Goldfuse", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[6329] = {
					"Irradiated Pillager", -- [1]
					"Gnomeregan", -- [2]
				},
				[23374] = {
					"Ashtongue Stalker", -- [1]
					"Black Temple", -- [2]
				},
				[36886] = {
					"Geist Ambusher", -- [1]
					"Pit of Saron", -- [2]
				},
				[75814] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[24761] = {
					"Brightscale Wyrm", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[134060] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[71979] = {
					"Kor'kron Warbringer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[22964] = {
					"Sister of Pleasure", -- [1]
					"Black Temple", -- [2]
				},
				[171587] = {
					"Reanimated Shambling Horror", -- [1]
					"Ashran", -- [2]
				},
				[90409] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[57751] = {
					"Ruin Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[83754] = {
					"Star Root Sniffer", -- [1]
					"Ashran", -- [2]
				},
				[80818] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[118717] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[183317] = {
					"Wanton Host", -- [1]
					"Karazhan", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[26125] = {
					"Risen Ghoul", -- [1]
					"Silvershard Mines", -- [2]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[72492] = {
					"Shimra", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[6910] = {
					"Revelosh", -- [1]
					"Uldaman", -- [2]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[90410] = {
					"Felfire Crusher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17301] = {
					"Shattered Hand Executioner", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[62348] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[107288] = {
					"Vilethorn Sapling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[88109] = {
					"Kimilyn", -- [1]
					"Ashran", -- [2]
				},
				[75839] = {
					"Vigilant Kaathar", -- [1]
					"Auchindoun", -- [2]
				},
				[13145] = {
					"Lieutenant Grummus", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[31216] = {
					"Sleepytu", -- [1]
					"Eye of the Storm", -- [2]
				},
				[106041] = {
					"Zombie", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[114212] = {
					"Felguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[56341] = {
					"Burning Tendons", -- [1]
					"Dragon Soul", -- [2]
				},
				[72493] = {
					"Trak'gen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[42428] = {
					"Devout Follower", -- [1]
					"The Stonecore", -- [2]
				},
				[76145] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[28878] = {
					"Skeletal Minion", -- [1]
					"Utgarde Keep", -- [2]
				},
				[191045] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[24690] = {
					"Wretched Husk", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[10417] = {
					"Venom Belcher", -- [1]
					"Stratholme", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
				},
				[122783] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[36840] = {
					"Ymirjar Wrathbringer", -- [1]
					"Pit of Saron", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[191046] = {
					"Shady Dealer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[30286] = {
					"Frostbringer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[30414] = {
					"Forgotten One", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[81197] = {
					"Iron Raider", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155211] = {
					"Gormling Pest", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173641] = {
					"Nathrian Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[62360] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[76865] = {
					"Beastlord Darmac", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[84196] = {
					"Web-wrapped Soldier", -- [1]
					"Ashran", -- [2]
				},
				[134617] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[120371] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[15976] = {
					"Venom Stalker", -- [1]
					"Naxxramas", -- [2]
				},
				[4857] = {
					"Stone Keeper", -- [1]
					"Uldaman", -- [2]
				},
				[13216] = {
					"Gaelden Hammersmith", -- [1]
					"Alterac Valley", -- [2]
				},
				[16168] = {
					"Stoneskin Gargoyle", -- [1]
					"Naxxramas", -- [2]
				},
				[153165] = {
					"Custodian Thonar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84550] = {
					"Xeri'tac", -- [1]
					"The Everbloom", -- [2]
				},
				[177478] = {
					"Marastar", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14284] = {
					"Stormpike Battleguard", -- [1]
					"Alterac Valley", -- [2]
				},
				[75055] = {
					"Razorfen Torchbearer", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[11487] = {
					"Magister Kalendris", -- [1]
					"Dire Maul", -- [2]
				},
				[93485] = {
					"Forsaken Crewman", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[9265] = {
					"Smolderthorn Shadow Hunter", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[178503] = {
					"Lady Jaina Proudmoore", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[61337] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[72496] = {
					"Overseer Thathung", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[45467] = {
					"Trogg Dweller", -- [1]
					"Grim Batol", -- [2]
				},
				[99629] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[75437] = {
					"Quilboar Broodmentor", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[184908] = {
					"Vy Interceptor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[7079] = {
					"Viscous Fallout", -- [1]
					"Gnomeregan", -- [2]
				},
				[93486] = {
					"Dread-Captain Tattersail", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[4853] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				[15691] = {
					"The Curator", -- [1]
					"Karazhan", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
				},
				[134739] = {
					"Purification Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[54747] = {
					"Eye of the Legion", -- [1]
					"Well of Eternity", -- [2]
				},
				[58605] = {
					"Scarlet Judicator", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[12236] = {
					"Lord Vyletongue", -- [1]
					"Maraudon", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74545] = {
					"Razorfen Geomagus", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[99630] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[23318] = {
					"Ashtongue Rogue", -- [1]
					"Black Temple", -- [2]
				},
				[184910] = {
					"Wo Drifter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[36658] = {
					"Scourgelord Tyrannus", -- [1]
					"Pit of Saron", -- [2]
				},
				[155185] = {
					"Paintbot Green", -- [1]
					"Alterac Valley", -- [2]
				},
				[81774] = {
					"Injured Stalker", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[60708] = {
					"Meng the Demented", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[76466] = {
					"Psyfiend", -- [1]
					"Auchindoun", -- [2]
				},
				[30287] = {
					"Plundering Geist", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[72498] = {
					"Theramore Citizen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[95280] = {
					"Kaz'rogal", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61338] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[75058] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[57386] = {
					"Crimson Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[156364] = {
					"Congealed Pride", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[126764] = {
					"Bladesworn Ravager", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[102703] = {
					"Fel Lord Dukaz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[85748] = {
					"Iron Mauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[71475] = {
					"Rook Stonetoe", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56731] = {
					"Habanero Brew", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[12201] = {
					"Princess Theradras", -- [1]
					"Maraudon", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16593] = {
					"Shattered Hand Brawler", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[84399] = {
					"Vicious Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[153174] = {
					"Watchers of Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[102704] = {
					"Fel Lord Zarnoz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[59426] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[99541] = {
					"Risen Skulker", -- [1]
					"Alterac Valley", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13097] = {
					"Coldmine Surveyor", -- [1]
					"Alterac Valley", -- [2]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[73012] = {
					"Klaxxi Skirmisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61339] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[74548] = {
					"Blazing Servitor", -- [1]
					"Razorfen Downs", -- [2]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[32885] = {
					"Captured Mercenary Soldier", -- [1]
					"Ulduar", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[93490] = {
					"Royal Dreadguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[85811] = {
					"Warspear Gladiator", -- [1]
					"Ashran", -- [2]
				},
				[102705] = {
					"Fel Lord Rakaz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[32665] = {
					"Crystalline Tangler", -- [1]
					"The Nexus", -- [2]
				},
				[11790] = {
					"Putridus Satyr", -- [1]
					"Maraudon", -- [2]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[32927] = {
					"Runemaster Molgeim", -- [1]
					"Ulduar", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[124207] = {
					"Fel-Charged Obfuscator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[83764] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[126767] = {
					"Clubfist Beastlord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[76141] = {
					"Araknath", -- [1]
					"Skyreach", -- [2]
				},
				[155226] = {
					"Verdant Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[59804] = {
					"Gripping Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[9716] = {
					"Bloodaxe Warmonger", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[71478] = {
					"Embodied Anguish", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[57160] = {
					"Ancient Water Lord", -- [1]
					"Dragon Soul", -- [2]
				},
				[30416] = {
					"Bound Fire Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[176394] = {
					"P.O.S.T. Worker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[61340] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[180824] = {
					"Waffle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[74550] = {
					"Razorfen Kraulshaper", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[159323] = {
					"Stoneward Trampler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[57387] = {
					"Glowing Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[74549] = {
					"Razorfen Stonechanter", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[167485] = {
					"Starving Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[10426] = {
					"Risen Inquisitor", -- [1]
					"Stratholme", -- [2]
				},
				[15977] = {
					"Poisonous Skitterer", -- [1]
					"Naxxramas", -- [2]
				},
				[166491] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[71479] = {
					"He Softfoot", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[64183] = {
					"Enormous Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[16297] = {
					"Mutated Grub", -- [1]
					"Naxxramas", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[24683] = {
					"Sunblade Mage Guard", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16594] = {
					"Shadowmoon Acolyte", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[166492] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[79505] = {
					"Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[76087] = {
					"Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[23215] = {
					"Ashtongue Sorcerer", -- [1]
					"Black Temple", -- [2]
				},
				[74834] = {
					"Web Wrap", -- [1]
					"Razorfen Downs", -- [2]
				},
				[165469] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[71480] = {
					"Sun Tenderheart", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[113971] = {
					"Maiden of Virtue", -- [1]
					"Return to Karazhan", -- [2]
				},
				[61341] = {
					"Mounted Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[9258] = {
					"Scarshield Raider", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[114262] = {
					"Attumen the Huntsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[76088] = {
					"Razorfen Huntmaster", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[16150] = {
					"Spectral Rider", -- [1]
					"Naxxramas", -- [2]
				},
				[6206] = {
					"Caverndeep Burrower", -- [1]
					"Gnomeregan", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164447] = {
					"Skuld", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[166495] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[74347] = {
					"Mordresh Fire Eye", -- [1]
					"Razorfen Downs", -- [2]
				},
				[22898] = {
					"Supremus", -- [1]
					"Black Temple", -- [2]
				},
				[79469] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[15551] = {
					"Spectral Stable Hand", -- [1]
					"Karazhan", -- [2]
				},
				[34234] = {
					"Runeforged Sentry", -- [1]
					"Ulduar", -- [2]
				},
				[74553] = {
					"Blood-Branded Razorfen", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[165472] = {
					"Nathrian Siphoner", -- [1]
					"Castle Nathria", -- [2]
				},
				[166496] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[23216] = {
					"Ashtongue Defender", -- [1]
					"Black Temple", -- [2]
				},
				[76089] = {
					"Razorfen Beast Stalker", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[22956] = {
					"Sister of Pain", -- [1]
					"Black Temple", -- [2]
				},
				[50417] = {
					"Bound Flames", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[153897] = {
					"Blingtron 7000", -- [1]
					"Alterac Valley", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
				},
				[10986] = {
					"Snowblind Harpy", -- [1]
					"Alterac Valley", -- [2]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[165474] = {
					"Nathrian Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[44704] = {
					"Minion of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[73530] = {
					"Dragonmaw Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[74554] = {
					"Razorfen Scarblade", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[93496] = {
					"Black Rose Apothecary", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[175713] = {
					"Suffering Soul", -- [1]
					"Isle of Conquest", -- [2]
				},
				[76090] = {
					"Blood-Branded Razorfen", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[54687] = {
					"Time-Twisted Footman", -- [1]
					"End Time", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[94008] = {
					"Dark Devourer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[78650] = {
					"Shattered Hand Torturer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[11946] = {
					"Drek'Thar", -- [1]
					"Alterac Valley", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[176395] = {
					"Overloaded Mailemental", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[32593] = {
					"Skittering Swarmer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[32930] = {
					"Kologarn", -- [1]
					"Ulduar", -- [2]
				},
				[33186] = {
					"Razorscale", -- [1]
					"Ulduar", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
				},
				[105205] = {
					"Mo'arg Spinebreaker", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[80791] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[58783] = {
					"Scarlet Initiate", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[104676] = {
					"Waning Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[155238] = {
					"Guardian of the Leaf", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59551] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[90500] = {
					"Warspear Peon", -- [1]
					"Ashran", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[39987] = {
					"Evolved Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[155239] = {
					"Forest Father", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[40953] = {
					"Khaaphom", -- [1]
					"Grim Batol", -- [2]
				},
				[123702] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16595] = {
					"Fleshbeast", -- [1]
					"Karazhan", -- [2]
				},
				[6235] = {
					"Electrocutioner 6000", -- [1]
					"Gnomeregan", -- [2]
				},
				[54432] = {
					"Murozond", -- [1]
					"End Time", -- [2]
				},
				[54688] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[93498] = {
					"Forsaken Deathguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[14773] = {
					"Iceblood Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[14186] = {
					"Ravak Grimtotem", -- [1]
					"Alterac Valley", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[45122] = {
					"Oathsworn Captain", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[123191] = {
					"Fel Hound", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[74902] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[42188] = {
					"Ozruk", -- [1]
					"The Stonecore", -- [2]
				},
				[33699] = {
					"Storm Tempered Keeper", -- [1]
					"Ulduar", -- [2]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
				},
				[175234] = {
					"Tractus the Icebreaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14762] = {
					"Dun Baldar North Marshal", -- [1]
					"Alterac Valley", -- [2]
				},
				[165481] = {
					"Court Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59808] = {
					"Shado-Pan Stormbringer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[83692] = {
					"Panthran Pride", -- [1]
					"Ashran", -- [2]
				},
				[22953] = {
					"Wrathbone Flayer", -- [1]
					"Black Temple", -- [2]
				},
				[60576] = {
					"Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[30418] = {
					"Bound Air Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[81725] = {
					"Muk'Mar Raz", -- [1]
					"Ashran", -- [2]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[12053] = {
					"Frostwolf Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[39985] = {
					"Mad Prisoner", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[104293] = {
					"Avatar of Shadow", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[21104] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[153196] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[167282] = {
					"Roger", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[126776] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[42810] = {
					"Crystalspawn Giant", -- [1]
					"The Stonecore", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[16170] = {
					"Coldmist Stalker", -- [1]
					"Karazhan", -- [2]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				[36151] = {
					"Navigator Taylor", -- [1]
					"Isle of Conquest", -- [2]
				},
				[81726] = {
					"Gaul Dun Firok", -- [1]
					"Ashran", -- [2]
				},
				[16468] = {
					"Spectral Patron", -- [1]
					"Karazhan", -- [2]
				},
				[16596] = {
					"Greater Fleshbeast", -- [1]
					"Karazhan", -- [2]
				},
				[46263] = {
					"Slag Fury", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[113552] = {
					"Overloaded Lens", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[16539] = {
					"Homunculus", -- [1]
					"Karazhan", -- [2]
				},
				[20208] = {
					"Mennu's Healing Ward", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[40013] = {
					"Buster", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[9200] = {
					"Spirestone Reaver", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[119466] = {
					"Dread Captor", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[16149] = {
					"Spectral Horse", -- [1]
					"Naxxramas", -- [2]
				},
				[36516] = {
					"Soulguard Animator", -- [1]
					"The Forge of Souls", -- [2]
				},
				[61345] = {
					"Mogu Archer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[9259] = {
					"Firebrand Grunt", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[45704] = {
					"Lurking Tempest", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[175725] = {
					"Eye of the Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[22957] = {
					"Priestess of Dementia", -- [1]
					"Black Temple", -- [2]
				},
				[54690] = {
					"Time-Twisted Priest", -- [1]
					"End Time", -- [2]
				},
				[4854] = {
					"Grimlok", -- [1]
					"Uldaman", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[19668] = {
					"Shadowfiend", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[87359] = {
					"Kroshik", -- [1]
					"Ashran", -- [2]
				},
				[175726] = {
					"Skyja", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[9499] = {
					"Plugger Spazzring", -- [1]
					"Blackrock Depths", -- [2]
				},
				[77803] = {
					"Railmaster Rocketspark", -- [1]
					"Grimrail Depot", -- [2]
				},
				[134063] = {
					"Brother Ironhull", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[7849] = {
					"Mobile Alert System", -- [1]
					"Gnomeregan", -- [2]
				},
				[10411] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
				},
				[175727] = {
					"Soulrender Dormazain", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76097] = {
					"Solar Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[175803] = {
					"Grove Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[155250] = {
					"Decayspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59464] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[39626] = {
					"Crimsonborne Warlord", -- [1]
					"Grim Batol", -- [2]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				[10987] = {
					"Irondeep Trogg", -- [1]
					"Alterac Valley", -- [2]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
				},
				[30419] = {
					"Bound Water Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[183919] = {
					"Dominated Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[73538] = {
					"Kor'kron War Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[90432] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[16175] = {
					"Vampiric Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[175729] = {
					"Remnant of Ner'zhul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[54435] = {
					"Avaleè", -- [1]
					"End Time", -- [2]
				},
				[54691] = {
					"Time-Twisted Sorceress", -- [1]
					"End Time", -- [2]
				},
				[114251] = {
					"Galindre", -- [1]
					"Return to Karazhan", -- [2]
				},
				[11480] = {
					"Arcane Aberration", -- [1]
					"Dire Maul", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[157300] = {
					"Tunk", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[11947] = {
					"Captain Galvangar", -- [1]
					"Alterac Valley", -- [2]
				},
				[175730] = {
					"Fatescribe Roh-Kalo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[56912] = {
					"Krik'thik Engulfer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[40357] = {
					"Invoked Flaming Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[12203] = {
					"Landslide", -- [1]
					"Maraudon", -- [2]
				},
				[73539] = {
					"Kor'kron Den Mother", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[32934] = {
					"Right Arm", -- [1]
					"Ulduar", -- [2]
				},
				[13442] = {
					"Archdruid Renferal", -- [1]
					"Alterac Valley", -- [2]
				},
				[6230] = {
					"Peacekeeper Security Suit", -- [1]
					"Gnomeregan", -- [2]
				},
				[175731] = {
					"Guardian of the First Ones", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[34135] = {
					"Winter Rumbler", -- [1]
					"Ulduar", -- [2]
				},
				[82903] = {
					"Speedy Horde Racer", -- [1]
					"Ashran", -- [2]
				},
				[44926] = {
					"Oathsworn Wanderer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[7800] = {
					"Mekgineer Thermaplugg", -- [1]
					"Gnomeregan", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[17621] = {
					"Heathen Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[75110] = {
					"Razorfen Torchbearer", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[175732] = {
					"Sylvanas Windrunner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13099] = {
					"Irondeep Explorer", -- [1]
					"Alterac Valley", -- [2]
				},
				[22965] = {
					"Enslaved Servant", -- [1]
					"Black Temple", -- [2]
				},
				[10268] = {
					"Gizrul the Slavener", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[61347] = {
					"Kingsguard", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[13438] = {
					"Wing Commander Slidore", -- [1]
					"Alterac Valley", -- [2]
				},
				[45477] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[91970] = {
					"Felguard Invader", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[11603] = {
					"Whitewhisker Digger", -- [1]
					"Alterac Valley", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[94018] = {
					"Shadow Burster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
				},
				[177482] = {
					"Marisae", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[7030] = {
					"Shadowforge Geologist", -- [1]
					"Uldaman", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
				},
				[80708] = {
					"Iron Taskmaster", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[73541] = {
					"Kor'kron Wolf Pup", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[90435] = {
					"Kormrok", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[74565] = {
					"Subjugator Kor'ul", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[98384] = {
					"Razormouth", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[22929] = {
					"Greater Shadowfiend", -- [1]
					"Black Temple", -- [2]
				},
				[75588] = {
					"Grotto Toad", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[33719] = {
					"Emerald Consort", -- [1]
					"Ulduar", -- [2]
				},
				[14763] = {
					"Dun Baldar South Marshal", -- [1]
					"Alterac Valley", -- [2]
				},
				[78651] = {
					"Shattered Hand Bonechopper", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[43430] = {
					"Stonecore Berserker", -- [1]
					"The Stonecore", -- [2]
				},
				[74462] = {
					"Warlord Ramtusk", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[18500] = {
					"Unliving Cleric", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[102702] = {
					"Wrathguard Dreadblade", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[163450] = {
					"Stoneguard Centurion", -- [1]
					"Warsong Gulch", -- [2]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
				},
				[172436] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[22869] = {
					"Illidari Boneslicer", -- [1]
					"Black Temple", -- [2]
				},
				[75590] = {
					"Enormous Bullfrog", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[76102] = {
					"Air Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[54693] = {
					"Time-Twisted Rifleman", -- [1]
					"End Time", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[18344] = {
					"Nexus-Prince Shaffar", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[15979] = {
					"Tomb Horror", -- [1]
					"Naxxramas", -- [2]
				},
				[166523] = {
					"Vesper Totem", -- [1]
					"Eye of the Storm", -- [2]
				},
				[16505] = {
					"Naxxramas Follower", -- [1]
					"Naxxramas", -- [2]
				},
				[16171] = {
					"Coldmist Widow", -- [1]
					"Karazhan", -- [2]
				},
				[74948] = {
					"Roogug", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[46261] = {
					"Enraged Fire Elemental", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[83811] = {
					"Fireblade Invoker", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[16470] = {
					"Ghostly Philanthropist", -- [1]
					"Karazhan", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[105695] = {
					"Yrgrim the Truthseeker", -- [1]
					"Shield's Rest", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[177787] = {
					"Mawsworn Hopebreaker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[166525] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[17622] = {
					"Sharpshooter Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183931] = {
					"Dominated Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16028] = {
					"Patchwerk", -- [1]
					"Naxxramas", -- [2]
				},
				[88902] = {
					"Mol'dana Two-Blade", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[16151] = {
					"Midnight", -- [1]
					"Karazhan", -- [2]
				},
				[9196] = {
					"Highlord Omokk", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[9260] = {
					"Firebrand Legionnaire", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164476] = {
					"Tortured Amalgamation", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[168111] = {
					"Empowered Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[61243] = {
					"Gekkan", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[77128] = {
					"Pack Beast", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[179837] = {
					"Tracker Zo'korss", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[115417] = {
					"Rat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[127810] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[180058] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[182530] = {
					"Felsteel Interceptor", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[177790] = {
					"Desperate Shade", -- [1]
					"Twin Peaks", -- [2]
				},
				[4847] = {
					"Shadowforge Relic Hunter", -- [1]
					"Uldaman", -- [2]
				},
				[10220] = {
					"Halycon", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[22952] = {
					"Veras Darkshadow", -- [1]
					"Black Temple", -- [2]
				},
				[74569] = {
					"Restorative Waters", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183934] = {
					"Dominated Core", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76105] = {
					"Crystalfire Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[45928] = {
					"Executor of the Caliph", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[163508] = {
					"Tina Wang", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[30549] = {
					"Baron Rivendare", -- [1]
					"Naxxramas", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[104262] = {
					"Burning Ember", -- [1]
					"The Nighthold", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[169601] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[81225] = {
					"Risen Spirit", -- [1]
					"Ashran", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74570] = {
					"Ruination", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[99655] = {
					"Void-Touched Juggernaut", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[46248] = {
					"Riverpaw Basher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[54695] = {
					"Senjitsu", -- [1]
					"Well of Eternity", -- [2]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[735] = {
					"Murloc Streamrunner", -- [1]
					"Maraudon", -- [2]
				},
				[180865] = {
					"Twisted Warden", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[124227] = {
					"Volant Kerapteron", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[11948] = {
					"Vanndar Stormpike", -- [1]
					"Alterac Valley", -- [2]
				},
				[61389] = {
					"Kargesh Highguard", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[168579] = {
					"Fen Hatchling", -- [1]
					"Plaguefall", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[32938] = {
					"Flash Freeze", -- [1]
					"Ulduar", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[16471] = {
					"Skeletal Usher", -- [1]
					"Karazhan", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[61250] = {
					"Sorcerer Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[76107] = {
					"Solarshard Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[76946] = {
					"Faultline", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[178819] = {
					"Ice Wall", -- [1]
					"Eye of the Storm", -- [2]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[17623] = {
					"Reaver Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[22954] = {
					"Illidari Fearbringer", -- [1]
					"Black Temple", -- [2]
				},
				[120646] = {
					"Book of Arcane Monstrosities", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[24560] = {
					"Priestess Delrissa", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[36522] = {
					"Soul Horror", -- [1]
					"The Forge of Souls", -- [2]
				},
				[76132] = {
					"Soaring Chakram Master", -- [1]
					"Skyreach", -- [2]
				},
				[158094] = {
					"Diligent Attendant", -- [1]
					"Plaguefall", -- [2]
				},
				[44980] = {
					"Neferset Theurgist", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[99657] = {
					"Deranged Mindflayer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[46249] = {
					"Riverpaw Slayer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[77132] = {
					"Sargerei Zealot", -- [1]
					"Auchindoun", -- [2]
				},
				[54952] = {
					"Brittle Ghoul", -- [1]
					"End Time", -- [2]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
				},
				[45001] = {
					"Enslaved Bandit", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[37711] = {
					"Hungering Ghoul", -- [1]
					"Pit of Saron", -- [2]
				},
				[13437] = {
					"Wing Commander Ichman", -- [1]
					"Alterac Valley", -- [2]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[883] = {
					"Deer", -- [1]
					"Dire Maul", -- [2]
				},
				[14188] = {
					"Dirk Swindle", -- [1]
					"Alterac Valley", -- [2]
				},
				[83639] = {
					"Grom'kar Shadowblade", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[85856] = {
					"Bloodthirsty Axebeak", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[13397] = {
					"Irondeep Peon", -- [1]
					"Alterac Valley", -- [2]
				},
				[166452] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[150154] = {
					"Saurolisk Bonenipper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[85122] = {
					"Malda Brewbelly", -- [1]
					"Ashran", -- [2]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[14764] = {
					"Icewing Marshal", -- [1]
					"Alterac Valley", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[56867] = {
					"Fiery Trickster", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[7023] = {
					"Obsidian Sentinel", -- [1]
					"Uldaman", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[22950] = {
					"High Nethermancer Zerevor", -- [1]
					"Black Temple", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[3625] = {
					"Rarck", -- [1]
					"Alterac Valley", -- [2]
				},
				[172282] = {
					"Web Wrap", -- [1]
					"Plaguefall", -- [2]
				},
				[112741] = {
					"Wrathguard Decimator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[22871] = {
					"Teron Gorefiend", -- [1]
					"Black Temple", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[62632] = {
					"Sik'thik Engineer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[179892] = {
					"Oros Coldheart", -- [1]
					"De Other Side", -- [2]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[12051] = {
					"Frostwolf Legionnaire", -- [1]
					"Alterac Valley", -- [2]
				},
				[15980] = {
					"Naxxramas Cultist", -- [1]
					"Naxxramas", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[11457] = {
					"Wildspawn Hellcaller", -- [1]
					"Dire Maul", -- [2]
				},
				[7396] = {
					"Earthen Stonebreaker", -- [1]
					"Uldaman", -- [2]
				},
				[16236] = {
					"Eye Stalk", -- [1]
					"Naxxramas", -- [2]
				},
				[94921] = {
					"Stormshield Footman", -- [1]
					"Ashran", -- [2]
				},
				[45379] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[16472] = {
					"Phantom Stagehand", -- [1]
					"Karazhan", -- [2]
				},
				[167246] = {
					"Unleashed Trauma", -- [1]
					"Bastion Scenario", -- [2]
				},
				[9263] = {
					"Firebrand Dreadweaver", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[167564] = {
					"Fel'endae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[9199] = {
					"Spirestone Enforcer", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[57817] = {
					"Stormborn Myrmidon", -- [1]
					"Dragon Soul", -- [2]
				},
				[18556] = {
					"Phasing Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[114636] = {
					"Phantom Guardsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183947] = {
					"Empowered Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17624] = {
					"Laughing Skull Warden", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[150159] = {
					"King Gobbamak", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[17880] = {
					"Temporus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80719] = {
					"Iron Smith", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
				},
				[9197] = {
					"Spirestone Battle Mage", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[98637] = {
					"Ancient Widow", -- [1]
					"Black Rook Hold", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[167566] = {
					"Bleakwing Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[46251] = {
					"Riverpaw Looter", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[33354] = {
					"Corrupted Servitor", -- [1]
					"Ulduar", -- [2]
				},
				[4855] = {
					"Stonevault Brawler", -- [1]
					"Uldaman", -- [2]
				},
				[131731] = {
					"Sown Lasher", -- [1]
					"Waycrest Manor", -- [2]
				},
				[157328] = {
					"Darkmaul Channeler", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[16807] = {
					"Grand Warlock Nethekurse", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[42975] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[10221] = {
					"Bloodaxe Worg Pup", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[83806] = {
					"Grom'kar Vanguard", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[33453] = {
					"Dark Rune Watcher", -- [1]
					"Ulduar", -- [2]
				},
				[99676] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[179890] = {
					"Executioner Varruth", -- [1]
					"De Other Side", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[34793] = {
					"Catapult", -- [1]
					"Isle of Conquest", -- [2]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[165521] = {
					"Lady Inerva Darkvein", -- [1]
					"Castle Nathria", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[75976] = {
					"Low-Born Arakkoa", -- [1]
					"Skyreach", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165140] = {
					"Rotbriar Tormentor", -- [1]
					"Warsong Gulch", -- [2]
				},
				[115533] = {
					"Gleeful Immolator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75090] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[46252] = {
					"Riverpaw Shaman", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[54699] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[29311] = {
					"Herald Volazj", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[12052] = {
					"Frostwolf Warrior", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[56747] = {
					"Gu Cloudstrike", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[113998] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[16441] = {
					"Guardian of Icecrown", -- [1]
					"Naxxramas", -- [2]
				},
				[24664] = {
					"Kael'thas Sunstrider", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[11605] = {
					"Whitewhisker Overseer", -- [1]
					"Alterac Valley", -- [2]
				},
				[33966] = {
					"Crusher Tentacle", -- [1]
					"Ulduar", -- [2]
				},
				[22875] = {
					"Coilskar Sea-Caller", -- [1]
					"Black Temple", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[59819] = {
					"Artillery", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[102431] = {
					"Blood-Princess Thal'ena", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[17881] = {
					"Aeonus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[16803] = {
					"Death Knight Understudy", -- [1]
					"Naxxramas", -- [2]
				},
				[16506] = {
					"Naxxramas Worshipper", -- [1]
					"Naxxramas", -- [2]
				},
				[81235] = {
					"Grimrail Laborer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[18521] = {
					"Raging Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[76116] = {
					"Diving Chakram Spinner", -- [1]
					"Skyreach", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[54700] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[160407] = {
					"Bonearmed Decapitator", -- [1]
					"Plaguefall", -- [2]
				},
				[177813] = {
					"Mawchained Demolisher", -- [1]
					"Twin Peaks", -- [2]
				},
				[77140] = {
					"Amaukwa", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[39854] = {
					"Azureborne Guardian", -- [1]
					"Grim Batol", -- [2]
				},
				[56589] = {
					"Striker Ga'dok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[88915] = {
					"Packmule", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[125549] = {
					"Hungering Stalker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[80491] = {
					"Elementalist Novo", -- [1]
					"Ashran", -- [2]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[83804] = {
					"Ashmaul Gutwrencher", -- [1]
					"Ashran", -- [2]
				},
				[74950] = {
					"Gelatanized Plague Gunk", -- [1]
					"Razorfen Downs", -- [2]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
				},
				[11477] = {
					"Rotting Highborne", -- [1]
					"Dire Maul", -- [2]
				},
				[45007] = {
					"Enslaved Bandit", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[43438] = {
					"Corborus", -- [1]
					"The Stonecore", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[12218] = {
					"Vile Larva", -- [1]
					"Maraudon", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[88404] = {
					"Lava Fury", -- [1]
					"Ashran", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135816] = {
					"Vilefiend", -- [1]
					"Ashran", -- [2]
				},
				[30680] = {
					"Onyx Brood General", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[175806] = {
					"So'azmi", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[22873] = {
					"Coilskar General", -- [1]
					"Black Temple", -- [2]
				},
				[116561] = {
					"Unbound Pyrelord", -- [1]
					"Return to Karazhan", -- [2]
				},
				[46254] = {
					"Hogger", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[54701] = {
					"Time-Twisted Huntress", -- [1]
					"End Time", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[30385] = {
					"Twilight Volunteer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[15981] = {
					"Naxxramas Acolyte", -- [1]
					"Naxxramas", -- [2]
				},
				[119633] = {
					"Fel Imp", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[13282] = {
					"Noxxion", -- [1]
					"Maraudon", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[16173] = {
					"Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[105299] = {
					"Recursive Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[130896] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
				},
				[10412] = {
					"Crypt Crawler", -- [1]
					"Stratholme", -- [2]
				},
				[57773] = {
					"Kohcrom", -- [1]
					"Dragon Soul", -- [2]
				},
				[83798] = {
					"Burning Ember", -- [1]
					"Ashran", -- [2]
				},
				[116562] = {
					"Flamewaker Centurion", -- [1]
					"Return to Karazhan", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[41073] = {
					"Twilight Armsmaster", -- [1]
					"Grim Batol", -- [2]
				},
				[179867] = {
					"Static Field Totem", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[17370] = {
					"Laughing Skull Enforcer", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17626] = {
					"Laughing Skull Legionnaire", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[95061] = {
					"Greater Fire Elemental", -- [1]
					"Eye of the Storm", -- [2]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[88406] = {
					"Shadowy Shape", -- [1]
					"Ashran", -- [2]
				},
				[80490] = {
					"Mindbender Talbadar", -- [1]
					"Ashran", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18394] = {
					"Ethereal Wraith", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[9262] = {
					"Firebrand Invoker", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[74584] = {
					"Plague-Rotted Webslinger", -- [1]
					"Razorfen Downs", -- [2]
				},
				[75096] = {
					"Crystalline Aberration", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[116563] = {
					"Ancient Core Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[39855] = {
					"Azureborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[30329] = {
					"Savage Cave Beast", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[45378] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[32867] = {
					"Steelbreaker", -- [1]
					"Ulduar", -- [2]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[105301] = {
					"Expedient Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[12121] = {
					"Drakan", -- [1]
					"Alterac Valley", -- [2]
				},
				[114516] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[1863] = {
					"Aellia", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[10414] = {
					"Patchwork Horror", -- [1]
					"Stratholme", -- [2]
				},
				[13153] = {
					"Commander Mulfort", -- [1]
					"Alterac Valley", -- [2]
				},
				[9269] = {
					"Smolderthorn Seer", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[82354] = {
					"Seacliff Kaliri", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[17461] = {
					"Shattered Hand Blood Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[21466] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[18983] = {
					"Blackfang Tarantula", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[24559] = {
					"Warlord Salaris", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[2748] = {
					"Archaedas", -- [1]
					"Uldaman", -- [2]
				},
				[11054] = {
					"Risen Rifleman", -- [1]
					"Stratholme", -- [2]
				},
				[18501] = {
					"Unliving Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[44981] = {
					"Oathsworn Skinner", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[44976] = {
					"Neferset Plaguebringer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[22874] = {
					"Coilskar Harpooner", -- [1]
					"Black Temple", -- [2]
				},
				[54191] = {
					"Risen Ghoul", -- [1]
					"End Time", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[80499] = {
					"Avenger Turley", -- [1]
					"Ashran", -- [2]
				},
				[130192] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[64061] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[19306] = {
					"Mana Leech", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[30681] = {
					"Onyx Blaze Mistress", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[71515] = {
					"General Nazgrim", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[10990] = {
					"Alterac Ram", -- [1]
					"Alterac Valley", -- [2]
				},
				[12206] = {
					"Primordial Behemoth", -- [1]
					"Maraudon", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
				},
				[136404] = {
					"Bilescourge", -- [1]
					"Twin Peaks", -- [2]
				},
				[11949] = {
					"Captain Balinda Stonehearth", -- [1]
					"Alterac Valley", -- [2]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				[15547] = {
					"Spectral Charger", -- [1]
					"Karazhan", -- [2]
				},
				[11476] = {
					"Skeletal Highborne", -- [1]
					"Dire Maul", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17371] = {
					"Shadowmoon Warlock", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[74583] = {
					"Festering Spiderling", -- [1]
					"Razorfen Downs", -- [2]
				},
				[114794] = {
					"Skeletal Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[71516] = {
					"Kor'kron Ironblade", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[9198] = {
					"Spirestone Mystic", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[16545] = {
					"Ethereal Spellfilcher", -- [1]
					"Karazhan", -- [2]
				},
				[44977] = {
					"Neferset Torturer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[13358] = {
					"Stormpike Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				[158579] = {
					"Corporal Teeka Bloodsnarl", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[83803] = {
					"Ashmaul Forager", -- [1]
					"Ashran", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[16808] = {
					"Warchief Kargath Bladefist", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[11452] = {
					"Wildspawn Rogue", -- [1]
					"Dire Maul", -- [2]
				},
				[54445] = {
					"Echo of Jaina", -- [1]
					"End Time", -- [2]
				},
				[71517] = {
					"Kor'kron Arcweaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[177830] = {
					"Mawsworn Gatekeeper", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[29310] = {
					"Jedoga Shadowseeker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[15954] = {
					"Noth the Plaguebringer", -- [1]
					"Naxxramas", -- [2]
				},
				[79720] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[165276] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[16489] = {
					"Chaotic Sentience", -- [1]
					"Karazhan", -- [2]
				},
				[33715] = {
					"Charged Sphere", -- [1]
					"Ulduar", -- [2]
				},
				[36164] = {
					"Kor'kron Reaver", -- [1]
					"Isle of Conquest", -- [2]
				},
				[177831] = {
					"Mawchained Deadeye", -- [1]
					"Twin Peaks", -- [2]
				},
				[22951] = {
					"Lady Malande", -- [1]
					"Black Temple", -- [2]
				},
				[21467] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[16507] = {
					"Shattered Hand Sentry", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[81522] = {
					"Witherbark", -- [1]
					"The Everbloom", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[71518] = {
					"Kor'kron Assassin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[13357] = {
					"Frostwolf Mine Layer", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[13116] = {
					"Alliance Spirit Guide", -- [1]
					"Isle of Conquest", -- [2]
				},
				[30682] = {
					"Onyx Flight Captain", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[59751] = {
					"Shado-Pan Warden", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[99675] = {
					"Enormous Stone Quilen", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[83805] = {
					"Grom'kar Grimshot", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[16473] = {
					"Spectral Performer", -- [1]
					"Karazhan", -- [2]
				},
				[177833] = {
					"Mawchained Rampager", -- [1]
					"Twin Peaks", -- [2]
				},
				[85341] = {
					"Lunarfall Raccoon", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[46250] = {
					"Riverpaw Poacher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[10413] = {
					"Crypt Beast", -- [1]
					"Stratholme", -- [2]
				},
				[18982] = {
					"Sable Jaguar", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[285] = {
					"Murloc", -- [1]
					"Maraudon", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[16174] = {
					"Greater Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[54853] = {
					"Queen Azshara", -- [1]
					"Well of Eternity", -- [2]
				},
				[125570] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[114522] = {
					"Mrs. Cauldrons", -- [1]
					"Return to Karazhan", -- [2]
				},
				[156333] = {
					"Darkturned Pupil", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[54512] = {
					"Time-Twisted Sentinel", -- [1]
					"End Time", -- [2]
				},
				[150190] = {
					"HK-8 Aerial Oppression Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[33716] = {
					"Ruby Consort", -- [1]
					"Ulduar", -- [2]
				},
				[83790] = {
					"Ashmaul Flamespeaker", -- [1]
					"Ashran", -- [2]
				},
				[101994] = {
					"Faceless Tendril", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[44404] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[85133] = {
					"Mor'riz", -- [1]
					"Ashran", -- [2]
				},
				[62633] = {
					"Sik'thik Builder", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[9261] = {
					"Firebrand Darkweaver", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[71504] = {
					"Siegecrafter Blackfuse", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[60849] = {
					"Jade Serpent Statue", -- [1]
					"Warsong Gulch", -- [2]
				},
				[93719] = {
					"Fel Commander Azgalor", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[36788] = {
					"Deathwhisper Necrolyte", -- [1]
					"Pit of Saron", -- [2]
				},
				[18524] = {
					"Angered Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[9216] = {
					"Spirestone Warlord", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
				},
				[83807] = {
					"Burning Blademaster", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[13137] = {
					"Lieutenant Rugba", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[9583] = {
					"Bloodaxe Veteran", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[11475] = {
					"Eldreth Phantasm", -- [1]
					"Dire Maul", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[16809] = {
					"Warbringer O'mrogg", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[86495] = {
					"Frostwolf", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[79200] = {
					"Blackrock Forge Specialist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[42845] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[56754] = {
					"Azure Serpent", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[178862] = {
					"Screamspike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[67235] = {
					"Shadowfiend", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[24815] = {
					"Sunblade Imp", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[42695] = {
					"Stonecore Sentry", -- [1]
					"The Stonecore", -- [2]
				},
				[33717] = {
					"Azure Consort", -- [1]
					"Ulduar", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[93023] = {
					"Siegemaster Mar'tak", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77665] = {
					"Iron Soldier", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[56636] = {
					"Commander Ri'mok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[24744] = {
					"Vexallus", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[150195] = {
					"Gnome-Eating Slime", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183983] = {
					"Dominated Attendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13138] = {
					"Lieutenant Spencer", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[97119] = {
					"Shroud Hound", -- [1]
					"Maw of Souls", -- [2]
				},
				[17398] = {
					"Nascent Fel Orc", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
				},
				[90705] = {
					"Dread Commander Arganoth", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[22876] = {
					"Coilskar Soothsayer", -- [1]
					"Black Temple", -- [2]
				},
				[17879] = {
					"Chrono Lord Deja", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[46260] = {
					"Searing Destroyer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[32878] = {
					"Dark Rune Evoker", -- [1]
					"Ulduar", -- [2]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[116550] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Eye of the Storm", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[183985] = {
					"Empowered Worldbreaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[12207] = {
					"Thessala Hydra", -- [1]
					"Maraudon", -- [2]
				},
				[114526] = {
					"Ghostly Understudy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[81737] = {
					"Unchecked Growth", -- [1]
					"The Everbloom", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[6232] = {
					"Arcane Nullifier X-21", -- [1]
					"Gnomeregan", -- [2]
				},
				[116574] = {
					"Silver Forks", -- [1]
					"Return to Karazhan", -- [2]
				},
				[77202] = {
					"Grom'kar Vanguard", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[58803] = {
					"Residual Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[39990] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[179891] = {
					"Soggodon the Breaker", -- [1]
					"De Other Side", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[23965] = {
					"Frost Tomb", -- [1]
					"Utgarde Keep", -- [2]
				},
				[119930] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[11792] = {
					"Putridus Shadowstalker", -- [1]
					"Maraudon", -- [2]
				},
				[417] = {
					"Khiifenn", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[122718] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[13359] = {
					"Frostwolf Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				[11488] = {
					"Illyanna Ravenoak", -- [1]
					"Dire Maul", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Spires of Ascension", -- [2]
				},
				[183988] = {
					"Empowered Attendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92514] = {
					"Shao'ghun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61239] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[17491] = {
					"Laughing Skull Rogue", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[179893] = {
					"Cartel Skulker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
				},
				[16492] = {
					"Syphoner", -- [1]
					"Karazhan", -- [2]
				},
				[22997] = {
					"Flame of Azzinoth", -- [1]
					"Black Temple", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[45259] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[64947] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[115115] = {
					"Coldmist Stalker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179894] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13599] = {
					"Stolid Snapjaw", -- [1]
					"Maraudon", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[14187] = {
					"Athramanis", -- [1]
					"Alterac Valley", -- [2]
				},
				[83812] = {
					"Ashmaul Enforcer", -- [1]
					"Ashran", -- [2]
				},
				[7320] = {
					"Stonevault Mauler", -- [1]
					"Uldaman", -- [2]
				},
				[75440] = {
					"Quilboar Pebble-Watcher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
				},
				[13319] = {
					"Commander Duffy", -- [1]
					"Alterac Valley", -- [2]
				},
				[94563] = {
					"Gorebound Fanatic", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[10367] = {
					"Shrye Ragefist", -- [1]
					"Alterac Valley", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[30249] = {
					"Scion of Eternity", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[177274] = {
					"Dreamweaver", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[12216] = {
					"Poison Sprite", -- [1]
					"Maraudon", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[44982] = {
					"Neferset Darkcaster", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33651] = {
					"VX-001", -- [1]
					"Ulduar", -- [2]
				},
				[22877] = {
					"Coilskar Wrangler", -- [1]
					"Black Temple", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[46262] = {
					"Rumbling Earth", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[84837] = {
					"Marsh Creature", -- [1]
					"Ashran", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[127231] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[165816] = {
					"Margrave Sin'dane", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[76945] = {
					"Ironcrusher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[22955] = {
					"Charming Courtesan", -- [1]
					"Black Temple", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[152253] = {
					"The Tarragrue", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[119952] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[155251] = {
					"Elder Longbranch", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84097] = {
					"Boneshallow Spider", -- [1]
					"Ashran", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[102302] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[33720] = {
					"Obsidian Consort", -- [1]
					"Ulduar", -- [2]
				},
				[112733] = {
					"Venomhide Shadowspinner", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[32933] = {
					"Left Arm", -- [1]
					"Ulduar", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[124729] = {
					"L'ura", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[173756] = {
					"Ksi", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[79595] = {
					"Fluttering Teromoth", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[30338] = {
					"Ahn'kahar Swarmer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[140038] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[9264] = {
					"Firebrand Pyromancer", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[93173] = {
					"Icebound Dreadnought", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[15952] = {
					"Maexxna", -- [1]
					"Naxxramas", -- [2]
				},
				[16412] = {
					"Ghostly Baker", -- [1]
					"Karazhan", -- [2]
				},
				[84327] = {
					"Skeletal Warrior", -- [1]
					"Ashran", -- [2]
				},
				[176562] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[75429] = {
					"Quilboar Mealtender", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[15978] = {
					"Crypt Reaver", -- [1]
					"Naxxramas", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[79208] = {
					"Blackrock Enforcer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[71529] = {
					"Thok the Bloodthirsty", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[88226] = {
					"Volcanic Fallout", -- [1]
					"Ashran", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[10416] = {
					"Bile Spewer", -- [1]
					"Stratholme", -- [2]
				},
				[9240] = {
					"Smolderthorn Shadow Priest", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[165819] = {
					"Kel'Thuzad", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[16024] = {
					"Embalming Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[172647] = {
					"Parasitic Infestor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[102246] = {
					"Anub'esset", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[184911] = {
					"Urh Dismantler", -- [1]
					"Halls of Atonement", -- [2]
				},
				[59487] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[11791] = {
					"Putridus Trickster", -- [1]
					"Maraudon", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[11120] = {
					"Risen Hammersmith", -- [1]
					"Stratholme", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[45268] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[130275] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
				},
				[22878] = {
					"Aqueous Lord", -- [1]
					"Black Temple", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[46264] = {
					"Lord Overheat", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[84841] = {
					"Iron Dockworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[16411] = {
					"Spectral Chef", -- [1]
					"Karazhan", -- [2]
				},
				[74555] = {
					"Razorfen Hidecrusher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[77559] = {
					"Solar Magnifier", -- [1]
					"Skyreach", -- [2]
				},
				[40011] = {
					"Spot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[43934] = {
					"Soul Fragment", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[74091] = {
					"Kor'kron Iron Sentinel", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[25040] = {
					"Greater Water Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[33722] = {
					"Storm Tempered Keeper", -- [1]
					"Ulduar", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[58807] = {
					"Vestige of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[24745] = {
					"Pure Energy", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[56631] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[78583] = {
					"Dominator Turret", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[33110] = {
					"Dark Rune Acolyte", -- [1]
					"Ulduar", -- [2]
				},
				[88821] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[74551] = {
					"Razorfen Beast Stalker", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[24688] = {
					"Wretched Skulker", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				[74552] = {
					"Razorfen Huntmaster", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[66413] = {
					"Yeasty Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[61139] = {
					"Shan-xi Watershaper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[81985] = {
					"Everbloom Tender", -- [1]
					"The Everbloom", -- [2]
				},
				[100713] = {
					"Rockbait Fisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[55519] = {
					"Doomguard Annihilator", -- [1]
					"Well of Eternity", -- [2]
				},
				[102706] = {
					"Grinning Shadowstalker", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[24656] = {
					"Fizzle", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[39892] = {
					"Enslaved Burning Ember", -- [1]
					"Grim Batol", -- [2]
				},
				[158084] = {
					"Contemplative Student", -- [1]
					"Plaguefall", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[22962] = {
					"Priestess of Delight", -- [1]
					"Black Temple", -- [2]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[43612] = {
					"High Prophet Barim", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[92523] = {
					"Vazeel'fazag", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[85812] = {
					"Stormshield Gladiator", -- [1]
					"Ashran", -- [2]
				},
				[75061] = {
					"Young Boar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[14185] = {
					"Najak Hexxen", -- [1]
					"Alterac Valley", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[9257] = {
					"Scarshield Warlock", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[58198] = {
					"Shado-Pan Disciple", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168004] = {
					"Empowered Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22963] = {
					"Bonechewer Worker", -- [1]
					"Black Temple", -- [2]
				},
				[58960] = {
					"Daxiros", -- [1]
					"Isle of Conquest", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[22879] = {
					"Shadowmoon Reaver", -- [1]
					"Black Temple", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[17397] = {
					"Shadowmoon Adept", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17427] = {
					"Shattered Hand Archer", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[10409] = {
					"Rockwing Screecher", -- [1]
					"Stratholme", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[23775] = {
					"Head of the Horseman", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[9693] = {
					"Bloodaxe Evoker", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[56249] = {
					"Twilight Assaulter", -- [1]
					"Dragon Soul", -- [2]
				},
				[16176] = {
					"Shadowbeast", -- [1]
					"Karazhan", -- [2]
				},
				[11484] = {
					"Residual Monstrosity", -- [1]
					"Dire Maul", -- [2]
				},
				[178717] = {
					"Wild Hunt Guardian", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[106347] = {
					"Spectral Champion", -- [1]
					"Shield's Rest", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[150222] = {
					"Gunker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184010] = {
					"Oracle of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76143] = {
					"Rukhran", -- [1]
					"Skyreach", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[167999] = {
					"Echo of Sin", -- [1]
					"Castle Nathria", -- [2]
				},
				[8477] = {
					"Skeletal Servant", -- [1]
					"Stratholme", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[60397] = {
					"Emperor's Strength", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[75959] = {
					"Durotan", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[45932] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[33823] = {
					"Twilight Slayer", -- [1]
					"Ulduar", -- [2]
				},
				[9201] = {
					"Spirestone Ogre Magus", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[128060] = {
					"Priestess of Delirium", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[76310] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[92526] = {
					"Zerik'shekor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[56855] = {
					"Twilight Assault Drake", -- [1]
					"Dragon Soul", -- [2]
				},
				[102253] = {
					"Understone Demolisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[16126] = {
					"Unrelenting Rider", -- [1]
					"Naxxramas", -- [2]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[14282] = {
					"Frost Wolf Bloodhound", -- [1]
					"Alterac Valley", -- [2]
				},
				[56250] = {
					"Twilight Assaulter", -- [1]
					"Dragon Soul", -- [2]
				},
				[4255] = {
					"Brogus Thunderbrew", -- [1]
					"Alterac Valley", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[110616] = {
					"Dark Worshipper", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
				},
				[27829] = {
					"Ebon Gargoyle", -- [1]
					"Silvershard Mines", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[92527] = {
					"Dag'gorath", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[58810] = {
					"Fragment of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[7078] = {
					"Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
				},
				[14285] = {
					"Frostwolf Battleguard", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[75964] = {
					"Ranjit", -- [1]
					"Skyreach", -- [2]
				},
				[56854] = {
					"Twilight Elite Dreadblade", -- [1]
					"Dragon Soul", -- [2]
				},
				[118197] = {
					"Rotmouth", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[94189] = {
					"Living Felblaze", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[45412] = {
					"Lord Aurius Rivendare", -- [1]
					"Stratholme", -- [2]
				},
				[36830] = {
					"Wrathbone Laborer", -- [1]
					"Pit of Saron", -- [2]
				},
				[114541] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[22880] = {
					"Shadowmoon Champion", -- [1]
					"Black Temple", -- [2]
				},
				[11466] = {
					"Highborne Summoner", -- [1]
					"Dire Maul", -- [2]
				},
				[76146] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[6016] = {
					"Elemental Protection Totem", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[43878] = {
					"Grand Vizier Ertan", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[9545] = {
					"Grim Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[56251] = {
					"Twilight Assaulter", -- [1]
					"Dragon Soul", -- [2]
				},
				[57384] = {
					"Cobalt Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[56763] = {
					"Regenerating Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[166875] = {
					"Dark Vault-Seeker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16481] = {
					"Ghastly Haunt", -- [1]
					"Karazhan", -- [2]
				},
				[33214] = {
					"Mechanolift 304-A", -- [1]
					"Ulduar", -- [2]
				},
				[6233] = {
					"Mechanized Sentry", -- [1]
					"Gnomeregan", -- [2]
				},
				[7175] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman", -- [2]
				},
				[58555] = {
					"Scarlet Fanatic", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[76659] = {
					"Ancient Spirit", -- [1]
					"Ashran", -- [2]
				},
				[11496] = {
					"Immol'thar", -- [1]
					"Dire Maul", -- [2]
				},
				[17377] = {
					"Keli'dan the Breaker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[84983] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[59835] = {
					"Krik'thik Swarmer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[16193] = {
					"Skeletal Smith", -- [1]
					"Naxxramas", -- [2]
				},
				[16415] = {
					"Skeletal Waiter", -- [1]
					"Karazhan", -- [2]
				},
				[72564] = {
					"Doomlord", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[71454] = {
					"Malkorok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[13297] = {
					"Lieutenant Stouthandle", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[44898] = {
					"Pygmy Firebreather", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[33134] = {
					"Sara", -- [1]
					"Ulduar", -- [2]
				},
				[72408] = {
					"Anti-Air Turret", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[87989] = {
					"Forgemistress Flamehand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[13617] = {
					"Stormpike Stable Master", -- [1]
					"Alterac Valley", -- [2]
				},
				[57746] = {
					"Faceless Destroyer", -- [1]
					"Dragon Soul", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95602] = {
					"Mystic Velruun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[39870] = {
					"Twilight Firecatcher", -- [1]
					"Grim Batol", -- [2]
				},
				[88435] = {
					"Guardian of the Forge", -- [1]
					"Ashran", -- [2]
				},
				[56764] = {
					"Consuming Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[10375] = {
					"Spire Spiderling", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[45924] = {
					"Turbulent Squall", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[72744] = {
					"Kor'kron Skullsplitter", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[33983] = {
					"Constrictor Tentacle", -- [1]
					"Ulduar", -- [2]
				},
				[58812] = {
					"Hateful Essence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[13180] = {
					"Wing Commander Jeztor", -- [1]
					"Alterac Valley", -- [2]
				},
				[59915] = {
					"Jasper Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[152517] = {
					"Deadsoul Lifetaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[124171] = {
					"Shadowguard Subjugator", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[95603] = {
					"Mystic Aaran", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[30176] = {
					"Ahn'kahar Guardian", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[160474] = {
					"Fleshsewn Scavenger", -- [1]
					"Plaguefall", -- [2]
				},
				[35069] = {
					"Siege Engine", -- [1]
					"Isle of Conquest", -- [2]
				},
				[23232] = {
					"Mutant War Hound", -- [1]
					"Black Temple", -- [2]
				},
				[152612] = {
					"Subjugator Klontzas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22881] = {
					"Aqueous Surger", -- [1]
					"Black Temple", -- [2]
				},
				[23562] = {
					"Unstoppable Abomination", -- [1]
					"Naxxramas", -- [2]
				},
				[84341] = {
					"Moonshell Crawler", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[72191] = {
					"Overlord Runthak", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[153377] = {
					"Goop", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[126832] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
				},
				[39954] = {
					"Twilight Shadow Weaver", -- [1]
					"Grim Batol", -- [2]
				},
				[48633] = {
					"Guild Battle Standard", -- [1]
					"Alterac Valley", -- [2]
				},
				[135562] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[71543] = {
					"Immerseus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[16177] = {
					"Dreadbeast", -- [1]
					"Karazhan", -- [2]
				},
				[56765] = {
					"Destroying Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[23236] = {
					"Bonechewer Shield Disciple", -- [1]
					"Black Temple", -- [2]
				},
				[164407] = {
					"Sludgefist", -- [1]
					"Castle Nathria", -- [2]
				},
				[90485] = {
					"Felfire Artillery", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[90997] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[166620] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[72423] = {
					"Auctioneer Fazdran", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[50284] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[17464] = {
					"Shattered Hand Gladiator", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118642] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[32915] = {
					"Elder Brightleaf", -- [1]
					"Ulduar", -- [2]
				},
				[164348] = {
					"Wandering Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[10981] = {
					"Frost Wolf", -- [1]
					"Alterac Valley", -- [2]
				},
				[82295] = {
					"Gronn Pulverizer", -- [1]
					"Ashran", -- [2]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[11489] = {
					"Tendris Warpwood", -- [1]
					"Dire Maul", -- [2]
				},
				[75640] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[72130] = {
					"Kor'jus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73197] = {
					"Lesser Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[183321] = {
					"Night Lord", -- [1]
					"Karazhan", -- [2]
				},
				[137474] = {
					"King Timalji", -- [1]
					"Kings' Rest", -- [2]
				},
				[18317] = {
					"Ethereal Priest", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[18702] = {
					"Auchenai Necromancer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[28619] = {
					"Web Wrap", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[56766] = {
					"Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[79900] = {
					"Captain Hoodrych", -- [1]
					"Ashran", -- [2]
				},
				[35346] = {
					"Goblin Mechanic", -- [1]
					"Isle of Conquest", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[72173] = {
					"Kareth", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[10418] = {
					"Risen Guardsman", -- [1]
					"Stratholme", -- [2]
				},
				[75641] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[33985] = {
					"Corruptor Tentacle", -- [1]
					"Ulduar", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[21346] = {
					"Sightless Eye", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[72175] = {
					"Ormok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72958] = {
					"Dragonmaw Tidal Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135475] = {
					"Kula the Butcher", -- [1]
					"Kings' Rest", -- [2]
				},
				[135231] = {
					"Spectral Brute", -- [1]
					"Kings' Rest", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[152003] = {
					"Tactical Officer Ahbramis", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[122366] = {
					"Varimathras", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[22882] = {
					"Shadowmoon Deathshaper", -- [1]
					"Black Temple", -- [2]
				},
				[75642] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[76154] = {
					"Skyreach Raven Whisperer", -- [1]
					"Skyreach", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[93560] = {
					"Deathweaver Cassandra", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[119157] = {
					"Felguard", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[135470] = {
					"Aka'ali the Conqueror", -- [1]
					"Kings' Rest", -- [2]
				},
				[144299] = {
					"Workshop Defender", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[39873] = {
					"Twilight Wyrmcaller", -- [1]
					"Grim Batol", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56767] = {
					"Shado-Pan Fire Archer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[72451] = {
					"Kor'kron Dark Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[34190] = {
					"Hardened Iron Golem", -- [1]
					"Ulduar", -- [2]
				},
				[24674] = {
					"Phoenix", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[151613] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[75643] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[64341] = {
					"Instructor Zarik", -- [1]
					"Heart of Fear", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[102272] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[62980] = {
					"Imperial Vizier Zor'lok", -- [1]
					"Heart of Fear", -- [2]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[71388] = {
					"Amber-Encased Kunchong", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[79739] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[32666] = {
					"Training Dummy", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13139] = {
					"Commander Randolph", -- [1]
					"Alterac Valley", -- [2]
				},
				[72428] = {
					"Horthus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[74108] = {
					"Kor'kron Shredder", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[74620] = {
					"Battle Boar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[73724] = {
					"Zu Yin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[71770] = {
					"Kor'kron Ironblade", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[92538] = {
					"Tarspitter Grub", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[84859] = {
					"Iron Cleaver", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[72662] = {
					"Vanity", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[77692] = {
					"Kromog", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[150249] = {
					"Pistonhead Scrapper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[72177] = {
					"Gest", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73188] = {
					"Captive Cave Bat", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[71772] = {
					"Kor'kron Assassin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[179942] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177646] = {
					"Mindseize Controller", -- [1]
					"Twin Peaks", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[177895] = {
					"Trained Flayedwing", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[93563] = {
					"Cauldronmaster Mills", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[144248] = {
					"Head Machinist Sparkflux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131821] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[30178] = {
					"Ahn'kahar Swarmer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[21818] = {
					"Infinite Whelp", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[63030] = {
					"Enslaved Bonesmasher", -- [1]
					"Heart of Fear", -- [2]
				},
				[91004] = {
					"Ularogg Cragshaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[28734] = {
					"Anub'ar Skirmisher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[84349] = {
					"Marsh Monstrosity", -- [1]
					"Ashran", -- [2]
				},
				[54883] = {
					"Enchanted Magus", -- [1]
					"Well of Eternity", -- [2]
				},
				[77182] = {
					"Oregorger", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[23523] = {
					"Ashtongue Elementalist", -- [1]
					"Black Temple", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[173802] = {
					"Carved Assistant", -- [1]
					"Castle Nathria", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[151658] = {
					"Strider Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[16178] = {
					"Phase Hound", -- [1]
					"Karazhan", -- [2]
				},
				[26798] = {
					"Commander Kolurg", -- [1]
					"The Nexus", -- [2]
				},
				[71771] = {
					"Kor'kron Arcweaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18422] = {
					"Sunseeker Botanist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				[91005] = {
					"Naraxas", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[150254] = {
					"Scraphound", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[19509] = {
					"Sunseeker Harvester", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[84350] = {
					"Podling Poker", -- [1]
					"Ashran", -- [2]
				},
				[173405] = {
					"Deathspeaker Yutla", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[42691] = {
					"Stonecore Rift Conjurer", -- [1]
					"The Stonecore", -- [2]
				},
				[17380] = {
					"Broggok", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				[73194] = {
					"Kor'kron Iron Scorpion", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[95613] = {
					"Binder Hallaani", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[184043] = {
					"Excavation Leader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[67177] = {
					"Zar'thik Supplicant", -- [1]
					"Heart of Fear", -- [2]
				},
				[97260] = {
					"Arcane Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[137969] = {
					"Interment Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[18404] = {
					"Bloodwarder Steward", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[29098] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[127019] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
				},
				[102269] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[72365] = {
					"Dragonmaw Cannoneer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[95614] = {
					"Binder Eloah", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[19512] = {
					"Nethervine Reaper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[130521] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[64355] = {
					"Kor'thik Silentwing", -- [1]
					"Heart of Fear", -- [2]
				},
				[74747] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[10419] = {
					"Risen Conjuror", -- [1]
					"Stratholme", -- [2]
				},
				[83840] = {
					"Sand Snapper", -- [1]
					"Ashran", -- [2]
				},
				[176879] = {
					"Hollowsoul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177903] = {
					"Dominated Protector", -- [1]
					"Silvershard Mines", -- [2]
				},
				[42692] = {
					"Stonecore Bruiser", -- [1]
					"The Stonecore", -- [2]
				},
				[102270] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[74716] = {
					"Aqua Guardian", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[59771] = {
					"Zombified Corpse", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[94607] = {
					"Gorebound Cauterizer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[30179] = {
					"Twilight Apostle", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[176880] = {
					"Soulscream Tormentor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14349] = {
					"Pimgib", -- [1]
					"Dire Maul", -- [2]
				},
				[91543] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61634] = {
					"Commander Vo'jak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[91520] = {
					"Adjunct Kuroh", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[93858] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94663] = {
					"Grand Corruptor U'rogg", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[64353] = {
					"Set'thik Gale-Slicer", -- [1]
					"Heart of Fear", -- [2]
				},
				[92391] = {
					"Gorebound Bloodletter", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102271] = {
					"Spitting Scarab", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[90114] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[48638] = {
					"Guild Battle Standard", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[29340] = {
					"Anub'ar Brood Keeper", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[93298] = {
					"Shadowheart Fiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[90284] = {
					"Iron Reaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94947] = {
					"Fel-Starved Trainee", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[73091] = {
					"Blackfuse Sellsword", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[55294] = {
					"Ultraxion", -- [1]
					"Dragon Soul", -- [2]
				},
				[16485] = {
					"Arcane Watchman", -- [1]
					"Karazhan", -- [2]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[91521] = {
					"Vindicator Bramu", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[177159] = {
					"Soulburner Fraxin", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[76306] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[76675] = {
					"Spirit Binder", -- [1]
					"Ashran", -- [2]
				},
				[126333] = {
					"Felseeker Ritualist", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[126845] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
				},
				[93308] = {
					"Portal Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[91539] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102380] = {
					"Shadow Council Warlock", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[61412] = {
					"Dark Shaman Koranthal", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[29216] = {
					"Anub'ar Guardian", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[95813] = {
					"Weaponlord Mehlkhior", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[18405] = {
					"Tempest-Forge Peacekeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[90498] = {
					"Warspear Engineer", -- [1]
					"Ashran", -- [2]
				},
				[75410] = {
					"Guardian of the Deep", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[91522] = {
					"Protector Bajunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[20897] = {
					"Ethereum Wave-Caster", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[91648] = {
					"Somber Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[54544] = {
					"Echo of Tyrande", -- [1]
					"End Time", -- [2]
				},
				[102273] = {
					"Doomguard Infiltrator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[19557] = {
					"Greater Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[20865] = {
					"Protean Horror", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[20868] = {
					"Entropic Eye", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[59722] = {
					"Pile of Corpses", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[16065] = {
					"Lady Blaumeux", -- [1]
					"Naxxramas", -- [2]
				},
				[113536] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[20881] = {
					"Unbound Devastator", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[21702] = {
					"Ethereum Life-Binder", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[90499] = {
					"Warspear Shredder", -- [1]
					"Ashran", -- [2]
				},
				[56781] = {
					"Goriona", -- [1]
					"Dragon Soul", -- [2]
				},
				[46383] = {
					"Randolph Moloch", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[7290] = {
					"Shadowforge Sharpshooter", -- [1]
					"Uldaman", -- [2]
				},
				[58757] = {
					"Scholomance Acolyte", -- [1]
					"Scholomance", -- [2]
				},
				[58633] = {
					"Instructor Chillheart", -- [1]
					"Scholomance", -- [2]
				},
				[58842] = {
					"Skeleton", -- [1]
					"Scholomance", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
				},
				[59242] = {
					"Woven Boneguard", -- [1]
					"Scholomance", -- [2]
				},
				[59368] = {
					"Krastinovian Carver", -- [1]
					"Scholomance", -- [2]
				},
				[59360] = {
					"Meat Graft", -- [1]
					"Scholomance", -- [2]
				},
				[59980] = {
					"Meat Graft", -- [1]
					"Scholomance", -- [2]
				},
				[59359] = {
					"Flesh Horror", -- [1]
					"Scholomance", -- [2]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[36551] = {
					"Spiteful Apparition", -- [1]
					"The Forge of Souls", -- [2]
				},
				[59080] = {
					"Darkmaster Gandling", -- [1]
					"Scholomance", -- [2]
				},
			},
			["aggro_modifies"] = {
				["health_bar_color"] = false,
			},
			["aura_padding"] = 2,
			["last_news_time"] = 1661408697,
			["aura_width2"] = 30,
			["aura_height2"] = 30,
			["aura_show_crowdcontrol"] = true,
			["health_cutoff"] = false,
			["aura_border_colors"] = {
				["is_show_all"] = {
					0.7019607843137254, -- [1]
					0.1019607843137255, -- [2]
					0.1019607843137255, -- [3]
				},
			},
			["ui_parent_cast_strata"] = "LOW",
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["script_auto_imported"] = {
				["Unit - Important"] = 11,
				["Aura - Buff Alert"] = 13,
				["Cast - Very Important"] = 12,
				["Explosion Affix M+"] = 11,
				["Aura - Debuff Alert"] = 11,
				["Aura is Shield [P]"] = 1,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 11,
				["Cast - Big Alert"] = 12,
				["Unit - Show Energy"] = 11,
				["Cast - Small Alert"] = 11,
				["Relics 9.2 M Dungeons"] = 2,
				["Spiteful Affix"] = 3,
				["Auto Set Skull"] = 11,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Unit - Health Markers"] = 12,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 1,
				["Cast - Frontal Cone"] = 11,
				["Fixate"] = 11,
				["Cast - Glowing [P]"] = 2,
				["Cast - Alert + Timer [P]"] = 2,
				["Cast - Important Target [P]"] = 1,
				["Fixate On You"] = 11,
			},
			["extra_icon_anchor"] = {
				["y"] = 30,
				["x"] = 0,
				["side"] = 8,
			},
			["extra_icon_wide_icon"] = false,
			["range_check_alpha"] = 0,
			["aura_frame2_anchor"] = {
				["y"] = 40,
			},
			["aura_alpha"] = 1,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["debuff_show_cc"] = false,
			["transparency_behavior"] = 4,
			["aura_consolidate"] = true,
			["extra_icon_width"] = 28,
			["health_statusbar_texture"] = "ElvUI Blank",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Execute Range"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Attacking Specific Unit"] = 2,
				["Combo Points"] = 6,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
			},
			["castbar_target_text_size"] = 8,
			["captured_spells"] = {
				[324260] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[79962] = {
					["source"] = "Dave the Quick",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62913,
				},
				[212653] = {
					["source"] = "Zimari-Saurfang",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1953] = {
					["source"] = "Blästi-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1715] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[307118] = {
					["source"] = "Milkýken-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[347600] = {
					["source"] = "Lagbugddosdc-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215607] = {
					["source"] = "Darkges-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[311406] = {
					["source"] = "Burnnr-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[356492] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[308899] = {
					["source"] = "Fineashes-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[355794] = {
					["source"] = "Milkýken-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[307185] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[465] = {
					["source"] = "Katanaofsw-Khaz'goroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312107] = {
					["source"] = "Ku-Jubei'Thos",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[345985] = {
					["source"] = "Drakanight-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[354018] = {
					["source"] = "Basscannon-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[352939] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[41635] = {
					["source"] = "Qiss-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[768] = {
					["source"] = "Kyri-Gundrak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269279] = {
					["source"] = "Ku-Jubei'Thos",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231390] = {
					["source"] = "Wiris-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "Shlippy-Aman'Thul",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[7384] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[262232] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[148539] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186401] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kelsï-Frostmourne",
					["npcID"] = 0,
				},
				[341260] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Nyfika",
					["npcID"] = 0,
				},
				[61781] = {
					["source"] = "Derpybank-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77489] = {
					["source"] = "Qiss-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["source"] = "Milkýken-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[26573] = {
					["source"] = "Icepenguin-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[25771] = {
					["source"] = "Icepenguin-Nagrand",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[154796] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kelsï-Frostmourne",
					["npcID"] = 0,
				},
				[280398] = {
					["source"] = "Lagbugddosdc-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[642] = {
					["source"] = "Icepenguin-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11426] = {
					["source"] = "Cxnnr-Barthilas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215598] = {
					["source"] = "Darkges-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[351913] = {
					["source"] = "Kàyleth-Aman'Thul",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115804] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[17] = {
					["source"] = "Qiss-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[353266] = {
					["source"] = "Qiss-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195692] = {
					["source"] = "Derpybank-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[23881] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[347901] = {
					["source"] = "Demònix-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[307166] = {
					["source"] = "Lagbugddosdc-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "Shlippy-Aman'Thul",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[307611] = {
					["source"] = "Klepa-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[284275] = {
					["source"] = "Milkýken-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[307675] = {
					["source"] = "Ku-Jubei'Thos",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[176277] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[354016] = {
					["source"] = "Lagbugddosdc-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[65081] = {
					["source"] = "Drakanight-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[139] = {
					["source"] = "Qiss-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6788] = {
					["source"] = "Qiss-Frostmourne",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190831] = {
					["source"] = "Brewberrý-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[86603] = {
					["source"] = "Gavin Marlsbury",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61838,
				},
				[8679] = {
					["source"] = "Swolabears",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176151] = {
					["source"] = "Zimari-Saurfang",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[72968] = {
					["source"] = "Urashh-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232698] = {
					["source"] = "Drakanight-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[367405] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315584] = {
					["source"] = "Xiaomeiren-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126664] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[359731] = {
					["source"] = "Synzinoth-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262115] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[369439] = {
					["source"] = "Drakanight-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245686] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5487] = {
					["source"] = "Bryanlim-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[357972] = {
					["source"] = "Vilemaxim-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "Katanaofsw-Khaz'goroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43308] = {
					["source"] = "Katanaofsw-Khaz'goroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1044] = {
					["source"] = "Icepenguin-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260881] = {
					["source"] = "Immazapyou-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[85739] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[165961] = {
					["source"] = "Angrychicken-Khaz'goroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79849] = {
					["source"] = "Alyn Black",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61834,
				},
				[2645] = {
					["source"] = "Immazapyou-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32223] = {
					["source"] = "Klepa-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1459] = {
					["source"] = "Bankfix-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[338036] = {
					["source"] = "Snekss-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3408] = {
					["source"] = "Swolabears",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[105771] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256374] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108366] = {
					["source"] = "Scandria-Khaz'goroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[184362] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[354017] = {
					["source"] = "Khaerzyn-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[158486] = {
					["source"] = "Ku-Jubei'Thos",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Dreàdzy-Frostmourne",
					["npcID"] = 0,
				},
				[332514] = {
					["source"] = "Milkýken-Nagrand",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190411] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[12294] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[6673] = {
					["source"] = "Kratzer-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
			},
			["aura_frame1_anchor"] = {
				["y"] = 18,
			},
			["aura_timer_text_font"] = "PT Sans Narrow",
			["extra_icon_stack_font"] = "PT Sans Narrow",
			["aura_height"] = 15,
			["cast_statusbar_bgtexture"] = "ElvUI Blank",
			["target_indicator"] = "NONE",
			["aura_show_buff_by_the_unit"] = false,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "0.89999997615814",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateOverlapH"] = "0.79999995231628",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "28",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.15",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateShowOnlyNames"] = "0",
				["nameplateOtherTopInset"] = "0.09",
				["nameplateOtherAtBase"] = "0",
				["nameplateOccludedAlphaMult"] = "0.19999998807907",
				["nameplateShowEnemyTotems"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateLargeTopInset"] = "0.049999997019768",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateShowDebuffsOnFriendly"] = "0",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
			},
			["login_counter"] = 19453,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				60, -- [1]
			},
			["aura_stack_font"] = "PT Sans Narrow",
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["hover_highlight_alpha"] = 1,
			["aura_enabled"] = false,
			["plate_config"] = {
				["global_health_height"] = 12,
				["friendlyplayer"] = {
					["actorname_use_friends_color"] = false,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["actorname_use_class_color"] = true,
					["cast"] = {
						100, -- [1]
						5, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
						["x"] = 0,
					},
					["percent_text_show_decimals"] = false,
					["click_through"] = false,
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "AvantGardeGothicLTMedium",
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["all_names"] = true,
					["actorname_text_outline"] = "NONE",
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 9,
					["only_damaged"] = false,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "Arial Narrow",
					["percent_text_ooc"] = true,
					["level_text_anchor"] = {
						["y"] = 0.9000015258789062,
						["x"] = 2,
						["side"] = 6,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						100, -- [1]
						5, -- [2]
					},
					["spellname_text_size"] = 11,
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 4,
					},
					["percent_text_color"] = {
						0.3843137254901961, -- [1]
						0.9019607843137255, -- [2]
						0.2470588235294118, -- [3]
					},
					["spellname_text_font"] = "PT Sans Narrow",
					["big_actorname_text_outline"] = "OUTLINE",
					["spellpercent_text_size"] = 11.55133724212647,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Arial Narrow",
					["big_actorname_text_size"] = 10,
					["level_text_alpha"] = 0.5,
					["spellpercent_text_enabled"] = true,
					["percent_text_font"] = "PT Sans Narrow Bold",
					["buff_frame_y_offset"] = 0,
					["quest_enabled"] = true,
					["big_actortitle_text_size"] = 10,
					["health_incombat"] = {
						50, -- [1]
						1, -- [2]
					},
					["health"] = {
						50, -- [1]
						1, -- [2]
					},
					["percent_text_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = 1,
					},
					["percent_text_outline"] = "NONE",
					["castbar_offset"] = 16,
				},
				["global_health_width"] = 100,
				["enemynpc"] = {
					["castbar_offset"] = 16,
					["spellpercent_text_font"] = "Accidental Presidency",
					["cast"] = {
						100, -- [1]
						5, -- [2]
					},
					["big_actortitle_text_size"] = 8,
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["actorname_text_color"] = {
						nil, -- [1]
						0.4470588235294117, -- [2]
						0, -- [3]
					},
					["percent_text_show_decimals"] = false,
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "AvantGardeCTT",
					["actorname_text_font"] = "normal_font",
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 8,
					["quest_color_enemy"] = {
						nil, -- [1]
						0, -- [2]
					},
					["big_actortitle_text_font"] = "AvantGardeGothicLTMedium",
					["spellpercent_text_size"] = 10,
					["level_text_anchor"] = {
						["y"] = 0,
						["x"] = 12,
					},
					["cast_incombat"] = {
						100, -- [1]
						5, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = 1,
					},
					["percent_text_anchor"] = {
						["y"] = -1,
						["side"] = 4,
					},
					["spellname_text_font"] = "PT Sans Narrow Bold",
					["big_actorname_text_outline"] = "NONE",
					["actorname_text_size"] = 9,
					["big_actorname_text_font"] = "PT Sans Narrow Bold",
					["level_text_alpha"] = 0.75,
					["percent_text_size"] = 8,
					["percent_text_font"] = "normal_font",
					["percent_show_percent"] = false,
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["spellname_text_size"] = 11,
					["health"] = {
						50, -- [1]
						1, -- [2]
					},
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 8,
					},
					["percent_text_outline"] = "NONE",
					["health_incombat"] = {
						50, -- [1]
						1, -- [2]
					},
					["level_text_enabled"] = false,
				},
				["friendlynpc"] = {
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["cast"] = {
						80, -- [1]
						5, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "AvantGardeCTT",
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["quest_color"] = {
						0.5019607843137255, -- [1]
					},
					["big_actortitle_text_color"] = {
						0.8156862745098039, -- [1]
						0.6509803921568628, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 8,
					["big_actortitle_text_font"] = "AvantGardeGothicLTMedium",
					["cast_incombat"] = {
						80, -- [1]
						5, -- [2]
					},
					["spellname_text_size"] = 11,
					["spellname_text_font"] = "PT Sans Narrow",
					["actorname_text_size"] = 9,
					["big_actorname_text_font"] = "PT Sans Narrow Bold",
					["big_actorname_text_size"] = 10,
					["big_actortitle_text_size"] = 8,
					["level_text_alpha"] = 0.5,
					["percent_text_size"] = 6,
					["big_actorname_text_color"] = {
						0.3019607843137255, -- [1]
						0.7450980392156863, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_font"] = "PT Sans Narrow Bold",
					["percent_text_outline"] = "NONE",
					["health_incombat"] = {
						50, -- [1]
						3, -- [2]
					},
					["health"] = {
						50, -- [1]
						3, -- [2]
					},
					["big_actorname_text_outline"] = "NONE",
					["percent_text_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = 2,
					},
					["spellpercent_text_enabled"] = true,
				},
				["enemyplayer"] = {
					["castbar_offset"] = 19,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["cast"] = {
						100, -- [1]
						6, -- [2]
					},
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
						["x"] = 2,
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = false,
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "AvantGardeGothicLTMedium",
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["actorname_use_guild_color"] = true,
					["all_names"] = true,
					["actorname_text_spacing"] = 9,
					["only_damaged"] = false,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["only_thename"] = false,
					["spellpercent_text_size"] = 11,
					["level_text_anchor"] = {
						["y"] = 0.9000015258789062,
						["x"] = 2,
						["side"] = 6,
					},
					["cast_incombat"] = {
						100, -- [1]
						8, -- [2]
					},
					["actorname_use_friends_color"] = true,
					["spellname_text_anchor"] = {
						["y"] = 0.5,
					},
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 4,
					},
					["spellname_text_font"] = "PT Sans Narrow",
					["big_actortitle_text_size"] = 10,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 10,
					["percent_text_outline"] = "NONE",
					["big_actorname_text_size"] = 10,
					["actorname_text_anchor"] = {
						["y"] = -1,
						["side"] = 8,
					},
					["percent_text_size"] = 10,
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["percent_text_font"] = "PT Sans Narrow Bold",
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["quest_enabled"] = true,
					["percent_text_color"] = {
						0.3803921568627451, -- [1]
						0.9019607843137255, -- [2]
						0.2470588235294118, -- [3]
					},
					["health_incombat"] = {
						70, -- [1]
						5, -- [2]
					},
					["health"] = {
						70, -- [1]
						5, -- [2]
					},
					["level_text_alpha"] = 0.5,
					["spellpercent_text_enabled"] = false,
					["percent_show_health"] = false,
					["spellname_text_size"] = 11,
					["level_text_enabled"] = false,
				},
				["player"] = {
					["healthbar_enabled"] = false,
					["spellname_text_outline"] = "NONE",
					["spellpercent_text_outline"] = "NONE",
					["power_percent_text_outline"] = "NONE",
					["percent_text_enabled"] = false,
					["spellpercent_text_enabled"] = false,
					["percent_text_outline"] = "NONE",
					["module_enabled"] = false,
				},
			},
			["aura_y_offset"] = 18,
			["focus_texture"] = "Armory",
			["cast_statusbar_bgcolor"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.5791031420230865, -- [4]
			},
			["border_thickness"] = 1.5,
			["resources_settings"] = {
				["chr"] = {
					["Player-3721-0A0137B3"] = "Chi",
					["Player-3725-0BD8C486"] = "ComboPoints",
					["Player-3725-0C0AFE1B"] = "HolyPower",
					["Player-3725-074CC5BE"] = "Chi",
					["Player-3725-0BD8EAFD"] = "ArcaneCharges",
					["Player-3725-0AF5259A"] = "HolyPower",
					["Player-3725-087BEB8D"] = "HolyPower",
					["Player-3721-0BFAE71B"] = "HolyPower",
					["Player-3725-0C0B02F3"] = "HolyPower",
					["Player-3725-0605CF6D"] = "ArcaneCharges",
					["Player-3725-0B41D004"] = "ComboPoints",
					["Player-3725-0985EB87"] = "Chi",
					["Player-113-01B40ABB"] = "ComboPoints",
					["Player-3725-061D5700"] = "ComboPoints",
					["Player-3725-062B8F5A"] = "SoulShards",
					["Player-3721-0C00B948"] = "HolyPower",
					["Player-3725-0B6345A9"] = "Chi",
					["Player-3721-0C08FC88"] = "HolyPower",
					["Player-3725-0C01FF9F"] = "Chi",
					["Player-3725-0BF2B13B"] = "SoulShards",
					["Player-3721-0BF9D967"] = "HolyPower",
					["Player-3725-0BE55D82"] = "ComboPoints",
				},
			},
			["spell_animation_list"] = {
				[46968] = {
					{
						["fade_out"] = 0.009999999776482582,
						["duration"] = 0.09999999403953552,
						["amplitude"] = 0.949999988079071,
						["cooldown"] = 0.09999999403953552,
					}, -- [1]
				},
				[20243] = {
					{
						["fade_out"] = 0.01999999955296516,
						["scaleX"] = 0.09999847412109375,
						["duration"] = 0.1200000047683716,
						["fade_in"] = 0.009999999776482582,
					}, -- [1]
				},
				[52174] = {
					{
						["scale_upY"] = 1.149999976158142,
						["scale_upX"] = 1.149999976158142,
						["duration"] = 0.07999999821186066,
						["scale_downX"] = 0.7999999523162842,
						["scale_downY"] = 0.7999999523162842,
					}, -- [1]
				},
			},
			["indicator_scale"] = 0.7999999523162842,
			["focus_color"] = {
				1, -- [1]
				0.5254901960784314, -- [2]
				0.5490196078431373, -- [3]
				1, -- [4]
			},
			["npc_colors"] = {
				[137484] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133436] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137516] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[135167] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[132532] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[127111] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[139422] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135263] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[136295] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[137486] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[130485] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134232] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[134629] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134137] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[128969] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[136249] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[137517] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136470] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[136186] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134599] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133345] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[185685] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134012] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[135007] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136076] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[130661] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[125977] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[135235] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"MAGE", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[136934] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[129367] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[141284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135204] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134331] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135474] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131585] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134157] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[137713] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[141285] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[127106] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134600] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[127757] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134364] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131586] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[132491] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[134158] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134174] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130488] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[164464] = {
					true, -- [1]
					false, -- [2]
					"ROGUE", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[129369] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134139] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[138255] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[133593] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[135239] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134990] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134251] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131858] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137478] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133430] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[134144] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[128967] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[136549] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[129370] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[135241] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[131685] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[162689] = {
					true, -- [1]
					false, -- [2]
					"greenyellow", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[136353] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[126918] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[131670] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[127315] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[133432] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[138465] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134417] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136139] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134338] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[164451] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[137511] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[136214] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134418] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[141283] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133482] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[134514] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[144071] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[139949] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[137521] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[185680] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129366] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[134150] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[185683] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
			},
			["transparency_behavior_on_friendlies"] = true,
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1641489747,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22044,
					["Enabled"] = false,
					["Revision"] = 353,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Prio"] = 99,
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1637897437,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22364,
					["Enabled"] = false,
					["Revision"] = 62,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Prio"] = 99,
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "Constructor",
					["version"] = -1,
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1655637022,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22384,
					["Enabled"] = false,
					["Revision"] = 365,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Prio"] = 99,
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1637905483,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["Enabled"] = false,
					["Revision"] = 75,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1637897463,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 285,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Prio"] = 99,
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1637906203,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Enabled"] = false,
					["Revision"] = 184,
					["Options"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Prio"] = 99,
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "Constructor",
					["version"] = -1,
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1637905486,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 100,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Prio"] = 99,
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["Name"] = "Don't Have Aura [Plater]",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["Time"] = 1554138845,
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1637897403,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Enabled"] = false,
					["Revision"] = 190,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1637897417,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22076,
					["Enabled"] = false,
					["Revision"] = 360,
					["Options"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "Initialization",
					["version"] = -1,
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"green\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1637691632,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["Enabled"] = false,
					["Revision"] = 109,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Prio"] = 99,
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "Constructor",
					["version"] = -1,
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Player Logon"] = "function()\n    \n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    Plater.TargetIndicators  [\"EthricArrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow.tga]],\n        coords = {\n            {0, 0, 0, 0}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        width = 26, -- Change size\n        height = 26,\n        x = 17, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow2\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow3\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow4\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow4.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow5\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow5.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow6\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow6.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow7\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow7.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 14, -- Change size\n        height = 14,\n        x = 18, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow8\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow8.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 17, -- Change size\n        height = 17,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow9\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow9.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow10\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow10.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0, \n    }\n    \nend",
					},
					["Time"] = 1613401158,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/okQgj8zoy/5",
					["Icon"] = "INTERFACE\\ICONS\\70_inscription_vantus_rune_nightmare",
					["Enabled"] = false,
					["Revision"] = 18,
					["semver"] = "1.0.4",
					["Author"] = "Ethric-Twisting Nether",
					["Desc"] = "Target Arrows",
					["Prio"] = 99,
					["Name"] = "Ethric's Arrows",
					["PlaterCore"] = 1,
					["version"] = 5,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateAlpha(unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    --if unitFrame.namePlateIsTarget then\n    envTable.updateAlpha(unitFrame)\n    --end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --setup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.7 --75% - unit and you in combat and unit not your target\n    envTable.AlphaTarget = 1.0 --100% - your target\n    envTable.AlphaFocus = 1.0 --100% - your focus target\n    envTable.AlphaNoTargetsOOC = 1.0 --100% - yourself out of combat and no targets\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\n    envTable.AlphaOOC = 1.0 --50% - out of combat units while you are in combat and not your target\n    envTable.AlphaCasting = 1.0 -- alpha for casting units\n    \n    envTable.useOutOfCombat = false -- take combat state into account\n    envTable.useOccluded = true -- take blizzard CVar nameplateOccludedAlphaMult into account\n    envTable.useCastingAlpha = true -- use alpha value for casting units in combat while you are in combat\n    envTable.useFocusAlpha = true -- use alpha value for your focus target\n    envTable.healthBarOnly = false-- only change alpha of healthBar elements\n    \n    \n    function envTable.updateAlpha(unitFrame)\n        local alphaFrame = unitFrame\n        if envTable.healthBarOnly then\n            alphaFrame = unitFrame.healthBar\n        end\n        if (unitFrame.IsSelf) then\n            alphaFrame:SetAlpha (envTable.AlphaPersonalBar)\n        elseif (unitFrame.IsFocus and envTable.useFocusAlpha) then\n            alphaFrame:SetAlpha (envTable.AlphaFocus)\n        else\n            local ocAlpha = unitFrame.PlateFrame:GetAlpha()\n            if (not Plater.PlayerCurrentTargetGUID) then -- no targets at all\n                if envTable.useOutOfCombat then\n                    if InCombatLockdown() then -- you are in combat\n                        if unitFrame.InCombat then -- unit in combat\n                            if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                                alphaFrame:SetAlpha (envTable.AlphaCasting)\n                            else\n                                alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                            end\n                        else -- unit not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                alphaFrame:SetAlpha (ocAlpha)\n                            else\n                                alphaFrame:SetAlpha (envTable.AlphaOOC)\n                            end\n                        end\n                    else -- not in combat\n                        if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                            alphaFrame:SetAlpha (ocAlpha)\n                        else\n                            alphaFrame:SetAlpha (envTable.AlphaNoTargetsOOC)\n                        end\n                    end\n                else -- don't use out of combat check\n                    if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                        alphaFrame:SetAlpha (envTable.AlphaCasting)\n                    elseif envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                        alphaFrame:SetAlpha (ocAlpha)\n                    else\n                        alphaFrame:SetAlpha (envTable.AlphaNoTargetsOOC)\n                    end\n                end\n            else -- you have a target\n                if (unitFrame.namePlateIsTarget) then\n                    alphaFrame:SetAlpha (envTable.AlphaTarget)\n                else -- not your target\n                    if envTable.useOutOfCombat then\n                        if InCombatLockdown() then -- you are in combat\n                            if unitFrame.InCombat then -- unit in combat\n                                if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                                    alphaFrame:SetAlpha (envTable.AlphaCasting)\n                                else\n                                    alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                                end\n                            else -- unit not in combat\n                                if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                    alphaFrame:SetAlpha (ocAlpha)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaOOC)\n                                end\n                            end\n                        else -- not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                                alphaFrame:SetAlpha (ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        end\n                    else -- don't use out of combat check\n                        if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                            alphaFrame:SetAlpha (envTable.AlphaCasting)\n                        elseif envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                            alphaFrame:SetAlpha (ocAlpha)\n                        else\n                            alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateAlpha(unitFrame)\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)\nend\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)\nend\n\n\n",
					},
					["Time"] = 1655637024,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/pm6ay8sZb/10",
					["Icon"] = 132177,
					["Enabled"] = true,
					["Revision"] = 536,
					["semver"] = "1.0.9",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the transparency of nameplates that isn't your target. You might want to disable 'Use Range Check' in the General Settings tab when using this hook.",
					["Prio"] = 99,
					["Name"] = "No Target Alpha - MOD",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = 10,
				}, -- [13]
				{
					["OptionsValues"] = {
						["colorHealthbar"] = true,
						["targetEnabled"] = true,
						["raidMarkColors"] = false,
						["targetColor"] = {
							0.5882352941176471, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["rareEnabled"] = false,
						["ignoreTargetOnPlayers"] = true,
						["colorName"] = true,
						["focusEnabled"] = false,
						["t2Mobs"] = {
							0, -- [1]
							0.3411764705882353, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["t1Mobs"] = {
							0, -- [1]
							0.9764705882352941, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "Initialization",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = \"hotpink\", --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        [174773] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Spiteful\n        \n        \n        -- t3 mobs - light red\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        [177808] = modTable.config[\"t3Mobs\"],\n        \n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        [180336] = modTable.config[\"t1Mobs\"],\n        [177817] = modTable.config[\"t1Mobs\"],\n        [178141] = modTable.config[\"t1Mobs\"],\n        \n        -- Karazhan\n        [114542] = modTable.config[\"t1Mobs\"],\n        [114260] = modTable.config[\"t1Mobs\"],\n        [114261] = modTable.config[\"t1Mobs\"],\n        [114548] = modTable.config[\"t1Mobs\"],\n        [114624] = modTable.config[\"t1Mobs\"],\n        [114804] = modTable.config[\"t1Mobs\"],\n        [114629] = modTable.config[\"t1Mobs\"],\n        [114249] = modTable.config[\"t1Mobs\"],\n        \n        \n        -- Mechagon\n        [150297] = modTable.config[\"t1Mobs\"],\n        [150168] = modTable.config[\"t1Mobs\"],\n        [154758] = modTable.config[\"t1Mobs\"],\n        [154744] = modTable.config[\"t1Mobs\"],\n        [150292] = modTable.config[\"t1Mobs\"],\n        [151657] = modTable.config[\"t1Mobs\"],\n        [144293] = modTable.config[\"t1Mobs\"],\n        \n        \n        -- semi important - light blue\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n        [177816] = modTable.config[\"t2Mobs\"],\n        [180348] = modTable.config[\"t2Mobs\"],\n        [178171] = modTable.config[\"t2Mobs\"],\n        \n        -- Karazhan\n        [114632] = modTable.config[\"t2Mobs\"],\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
					},
					["Time"] = 1661828786,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/UKpo0_GbE/26",
					["Icon"] = -22053,
					["Enabled"] = true,
					["Revision"] = 832,
					["semver"] = "1.3.0",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Color the nameplates of important m+ mobs",
					["Prio"] = 99,
					["Name"] = "M+ Colored Mobs",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "NPC Colors:",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Most Important:",
							["Value"] = {
								0, -- [1]
								0.086274509803922, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "t1Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Semi Important",
							["Value"] = {
								0, -- [1]
								0.81960784313725, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "t2Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Less Important:",
							["Value"] = {
								1, -- [1]
								0.59607843137255, -- [2]
								0.51372549019608, -- [3]
								1, -- [4]
							},
							["Key"] = "t3Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 6",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Color Explosives",
							["Value"] = true,
							["Key"] = "explosivesEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Explosives Color",
							["Value"] = {
								1, -- [1]
								0.4, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "explosivesColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Color M+ Affix NPCs",
							["Value"] = true,
							["Key"] = "s4Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "\"M+ Affix NPCs\"",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "M+ Affix NPCs Color",
							["Value"] = {
								1, -- [1]
								0.070588235294118, -- [2]
								0.56862745098039, -- [3]
								1, -- [4]
							},
							["Key"] = "s4Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "\"M+ Affix NPCs\"",
						}, -- [10]
						{
							["Type"] = 6,
							["Name"] = "Option 18",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Use Target Color",
							["Value"] = true,
							["Key"] = "targetEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 1,
							["Name"] = "Target Color",
							["Value"] = {
								0.27058823529412, -- [1]
								0.50980392156863, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "targetColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 4,
							["Name"] = "Ignore Target Color on Players",
							["Value"] = false,
							["Key"] = "ignoreTargetOnPlayers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 6,
							["Name"] = "Option 21",
							["Value"] = 0,
							["Key"] = "option21",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Use Focus Color",
							["Value"] = true,
							["Key"] = "focusEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Focus Color",
							["Value"] = {
								1, -- [1]
								0.49019607843137, -- [2]
								0.30980392156863, -- [3]
								1, -- [4]
							},
							["Key"] = "focusColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 5,
							["Name"] = "Additional Options:",
							["Value"] = "Additional Options:",
							["Key"] = "option26",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 4,
							["Name"] = "Color Healthbar",
							["Value"] = true,
							["Key"] = "colorHealthbar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 4,
							["Name"] = "Color Name",
							["Value"] = false,
							["Key"] = "colorName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 4,
							["Name"] = "Raid Mark Colors",
							["Value"] = true,
							["Key"] = "raidMarkColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 4,
							["Name"] = "Use Threat Colors",
							["Value"] = false,
							["Key"] = "threatColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [22]
						{
							["Type"] = 4,
							["Name"] = "Color Rares",
							["Value"] = true,
							["Key"] = "rareEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [23]
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = \"hotpink\", --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        [174773] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Spiteful\n        \n        \n        -- t3 mobs - light red\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        [177808] = modTable.config[\"t3Mobs\"],\n        \n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        [180336] = modTable.config[\"t1Mobs\"],\n        [177817] = modTable.config[\"t1Mobs\"],\n        [178141] = modTable.config[\"t1Mobs\"],\n        \n        -- Karazhan\n        [114542] = modTable.config[\"t1Mobs\"],\n        [114260] = modTable.config[\"t1Mobs\"],\n        [114261] = modTable.config[\"t1Mobs\"],\n        [114548] = modTable.config[\"t1Mobs\"],\n        [114624] = modTable.config[\"t1Mobs\"],\n        [114804] = modTable.config[\"t1Mobs\"],\n        [114629] = modTable.config[\"t1Mobs\"],\n        [114249] = modTable.config[\"t1Mobs\"],\n        \n        \n        -- Mechagon\n        [150297] = modTable.config[\"t1Mobs\"],\n        [150168] = modTable.config[\"t1Mobs\"],\n        [154758] = modTable.config[\"t1Mobs\"],\n        [154744] = modTable.config[\"t1Mobs\"],\n        [150292] = modTable.config[\"t1Mobs\"],\n        [151657] = modTable.config[\"t1Mobs\"],\n        [144293] = modTable.config[\"t1Mobs\"],\n        \n        \n        -- semi important - light blue\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n        [177816] = modTable.config[\"t2Mobs\"],\n        [180348] = modTable.config[\"t2Mobs\"],\n        [178171] = modTable.config[\"t2Mobs\"],\n        \n        -- Karazhan\n        [114632] = modTable.config[\"t2Mobs\"],\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
					},
					["version"] = 26,
				}, -- [14]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    -- settings:\n    \n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.inspiringColor, --\"gold\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.1, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 3, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"inspiring\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    modTable.options2 = {\n        glowType = \"ants\",\n        color = modTable.config.inspiredColor, --\"lime\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1.25, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"inspired\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.showInspiring then\n        if Plater.UnitHasAura (unitFrame, 343502) then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        end\n    end\n    \n    if modTable.config.showInspired then\n        if Plater.UnitHasAura (unitFrame, \"Inspired\") then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options2)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options2.glowType, modTable.options2.key)\n        end\n    end\n    \n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options)\n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options2)\n    \nend",
					},
					["Time"] = 1655636978,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/erZiEOzxK/4",
					["Icon"] = 132096,
					["Enabled"] = true,
					["Revision"] = 366,
					["semver"] = "1.0.3",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Adds a glow to the health bar if the unit has Inspiring Presence.",
					["Prio"] = 99,
					["Name"] = "Inspiring Health Glow",
					["PlaterCore"] = 1,
					["version"] = 4,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Glow Inspiring",
							["Value"] = true,
							["Key"] = "showInspiring",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Inspiring Color",
							["Value"] = {
								1, -- [1]
								0.84313725490196, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "inspiringColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Inspired",
							["Value"] = false,
							["Key"] = "showInspired",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Inspired Color",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "inspiredColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
					},
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --custom indicator options\n    --envTable.Texture = [[Interface\\AddOns\\Plater\\media\\cross_64]]\n    envTable.HealerTexture = [[Interface\\AddOns\\ElvUI\\Core\\Media\\Textures\\Healer]]\n    envTable.TankTexture = [[Interface\\AddOns\\ElvUI\\Core\\Media\\Textures\\Tank]]\n    envTable.Width = 15\n    envTable.Height = 15\n    \n    envTable.Anchor = {\n        side = 7, --topright\n        x = envTable.Width / 2, --x offset\n        y = -envTable.Width / 2, --y offset\n    }\n    \n    unitFrame.RoleTexture = unitFrame.RoleTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    unitFrame.RoleTexture.width = envTable.Width\n    unitFrame.RoleTexture.height = envTable.Height\n    Plater.SetAnchor (unitFrame.RoleTexture, envTable.Anchor)\n    \n    local myrealm = GetRealmName()\n    \n    local a1,a2 = '','[%s%-]'\n    local function ShortenRealm(realm)\n        return gsub(realm, a2, a1)\n    end\n    envTable.ShortenRealm = ShortenRealm\n    \n    local a3 = format('%%-%s', ShortenRealm(myrealm))\n    local function StripMyRealm(name)\n        return gsub(name, a3, a1)\n    end\n    \n    \n    local healerSpecIDs = {\n        65,      --Paladin Holy\n        105,    --Druid Restoration\n        256,    --Priest Discipline\n        257,    --Priest Holy\n        264,    --Shaman Restoration\n        270,    --Monk Mistweaver\n    }\n    \n    local tankSpecIDs = {\n        66,        --Paladin Protection\n        581,    --Demon Hunter Vengeance\n        104,    --Druid Guardian\n        268,    --Monk Brewmaster\n        73,     --Warrior Protection\n        250,    --Death Knight Blood\n    }\n    \n    local Healers, HealerSpecs = {}, {}\n    local Tanks, TankSpecs = {}, {}\n    envTable.Healers = Healers\n    envTable.Tanks = Tanks\n    \n    for _, specID in pairs(healerSpecIDs) do\n        local _, name = GetSpecializationInfoByID(specID)\n        if name and not HealerSpecs[name] then\n            HealerSpecs[name] = true\n        end\n    end\n    \n    for _, specID in pairs(tankSpecIDs) do\n        local _, name = GetSpecializationInfoByID(specID)\n        if name and not TankSpecs[name] then\n            TankSpecs[name] = true\n        end\n    end\n    \n    local function Event()\n        local _, instanceType = GetInstanceInfo()\n        if instanceType == 'pvp' or instanceType == 'arena' then\n            local numOpps = GetNumArenaOpponentSpecs()\n            if numOpps == 0 then\n                for i = 1, GetNumBattlefieldScores() do\n                    local name, _, _, _, _, _, _, _, _, _, _, _, _, _, _, talentSpec = GetBattlefieldScore(i)\n                    name = name and name ~= UNKNOWN and StripMyRealm(name)\n                    if name then\n                        if HealerSpecs[talentSpec] then\n                            Healers[name] = talentSpec\n                        elseif Healers[name] then\n                            Healers[name] = nil;\n                        end\n                        if TankSpecs[talentSpec] then\n                            Tanks[name] = talentSpec\n                        elseif Tanks[name] then\n                            Tanks[name] = nil;\n                        end\n                    end\n                end\n            elseif numOpps >= 1 then\n                for i = 1, numOpps do\n                    local name, realm = UnitName(format('arena%d', i))\n                    if name and name ~= UNKNOWN then\n                        realm = (realm and realm ~= '') and ShortenRealm(realm)\n                        if realm then name = name..'-'..realm end\n                        \n                        local s = GetArenaOpponentSpec(i)\n                        local _, talentSpec = nil, UNKNOWN\n                        \n                        if s and s > 0 then\n                            _, talentSpec = GetSpecializationInfoByID(s)\n                        end\n                        \n                        if talentSpec and talentSpec ~= UNKNOWN then\n                            if HealerSpecs[talentSpec] then\n                                Healers[name] = talentSpec\n                            end\n                            if TankSpecs[talentSpec] then\n                                Tanks[name] = talentSpec\n                            end\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \n    local function WipeTable()\n        wipe(Healers)\n        wipe(Tanks)\n    end\n    \n    local frame, events = CreateFrame(\"Frame\"), {};\n    function events:ARENA_OPPONENT_UPDATE(...)\n        Event()\n    end\n    function events:UPDATE_BATTLEFIELD_SCORE(...)\n        Event()\n    end\n    function events:PLAYER_ENTERING_WORLD(...)\n        WipeTable()\n    end\n    frame:SetScript(\"OnEvent\", function(self, event, ...)\n            events[event](self, ...); \n    end);\n    for k, v in pairs(events) do\n        frame:RegisterEvent(k); \n    end\n    \nend",
					},
					["Time"] = 1655636982,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/tgACZDSdQ/3",
					["Enabled"] = true,
					["Revision"] = 375,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "debug",
							["Value"] = false,
							["Key"] = "debug",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "@ PVP Role Icons",
					["PlaterCore"] = 1,
					["version"] = 3,
					["LastHookEdited"] = "",
					["semver"] = "1.0.2",
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.units[unitFrame.namePlateNpcId] or modTable.config.test then\n        if modTable.config.changecolor then\n            Plater.SetNameplateColor (unitFrame, modTable.config.color)\n        end\n        if modTable.config.hidename then\n            unitFrame.healthBar.unitName:Hide()\n        end\n        if modTable.config.hidehp then\n            unitFrame.healthBar.lifePercent:Hide()\n        end\n        if modTable.config.hideauras then\n            unitFrame.BuffFrame:Hide()\n            unitFrame.BuffFrame2:Hide()\n        end\n    end\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.TIF:Hide()\n    \n    local texture\n    \n    if modTable.config.test then\n        texture = modTable.RandomTexture()\n    else\n        texture = modTable.units[unitFrame.namePlateNpcId]\n    end\n    \n    if not texture then return end\n    \n    unitFrame.TIF.t:SetTexture(texture)\n    unitFrame.TIF:Show()\n    \nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.units = {\n        -- war\n        [119052] = GetSpellTexture(236320), -- War Banner\n        -- sham\n        [3527] = GetSpellTexture(5394), -- Healing Stream Totem\n        [5913] = GetSpellTexture(8143), -- Tremor Totem\n        [61245] = GetSpellTexture(192058), -- Capacitor Totem\n        [2630] = GetSpellTexture(2484), -- Earthbind Totem\n        [53006] = GetSpellTexture(98008), -- Spirit Link Totem\n        [59764] = GetSpellTexture(108280), -- Healing Tide Totem\n        [10467] = GetSpellTexture(16191), -- Mana Tide Totem\n        [6112] = GetSpellTexture(8512), -- Windfury Totem\n        [97369] = GetSpellTexture(192222), -- Liquid Magma Totem\n        [100943] = GetSpellTexture(198838), -- Earthen Wall Totem\n        [78001] = GetSpellTexture(157153), -- Cloudburst Totem\n        [104818] = GetSpellTexture(207399), -- Ancestral Protection Totem\n        [60561] = GetSpellTexture(51485), -- Earthgrab Totem\n        [105427] = GetSpellTexture(204330), -- Skyfury Totem\n        [5925] = GetSpellTexture(204336), -- Grounding Totem\n        [105451] = GetSpellTexture(204331), -- Counterstrike Totem\n        [97285] = GetSpellTexture(192077), -- Wind Rush Totem\n    }\n    \n    modTable.RandomTexture = function()\n        local random = random(17)\n        local i = 0\n        for k, v in pairs(modTable.units) do\n            i = i+1\n            if i == random then\n                return v\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.TIF then\n        -- create frame\n        local f = CreateFrame(\"Frame\", nil, unitFrame.healthBar.FrameOverlay)\n        f:SetFrameStrata(\"BACKGROUND\")\n        f:SetWidth(modTable.config.size)\n        f:SetHeight(modTable.config.size)\n        local t = f:CreateTexture(nil, \"BACKGROUND\")\n        t:SetAllPoints(f)\n        f.t = t\n        t:SetTexCoord(.08, .92, .08, .92)\n        f:SetPoint(\"BOTTOM\", unitFrame.healthBar.FrameOverlay, \"TOP\", 0, modTable.config.y)\n        f:Show() \n        unitFrame.TIF = f\n        -- create border\n        unitFrame.TIF.Border = CreateFrame(\n            \"Frame\", \n            nil, \n            f, \n            \"NamePlateFullBorderTemplate\"\n        )\n        unitFrame.TIF.Border:SetVertexColor(0, 0, 0)\n        unitFrame.TIF.Border:SetBorderSizes (0.5, 0.5, 0.5, 0.5)\n        unitFrame.TIF.Border:UpdateSizes()\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1655637024,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/LBLLVTl9f/4",
					["Enabled"] = true,
					["Revision"] = 718,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "test mode",
							["Value"] = false,
							["Key"] = "test",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "delim",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "size and positioning",
							["Value"] = "size & positioning",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 256,
							["Desc"] = "",
							["Min"] = 32,
							["Fraction"] = false,
							["Value"] = 50,
							["Key"] = "size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "icon size",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "anchor = topcenter",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "y",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "y offset",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "delim",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "color options",
							["Value"] = "plate color",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "change color",
							["Value"] = true,
							["Key"] = "changecolor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "plate color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "delim",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "other options",
							["Value"] = "other",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "hide name",
							["Value"] = true,
							["Key"] = "hidename",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "hide health text",
							["Value"] = true,
							["Key"] = "hidehp",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 4,
							["Max"] = 256,
							["Desc"] = "",
							["Min"] = 32,
							["Fraction"] = false,
							["Value"] = 50,
							["Key"] = "hideauras",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Name"] = "hide auras",
						}, -- [14]
					},
					["Author"] = "Ретцер-Ревущий фьорд",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "PVP Totem Plates",
					["PlaterCore"] = 1,
					["version"] = 4,
					["LastHookEdited"] = "",
					["semver"] = "1.0.3",
				}, -- [17]
				{
					["OptionsValues"] = {
						["crowdControlSpells"] = {
							{
								"323673", -- [1]
								"mindgames", -- [2]
							}, -- [1]
							{
								"15487", -- [1]
								"silence", -- [2]
							}, -- [2]
							{
								"31935", -- [1]
								"avengers shield", -- [2]
							}, -- [3]
							{
								"305485", -- [1]
								"lightning lasso", -- [2]
							}, -- [4]
							{
								"236077", -- [1]
								"disarm", -- [2]
							}, -- [5]
						},
						["defensiveSpells"] = {
							{
								"125174", -- [1]
								"touch of karma", -- [2]
							}, -- [1]
							{
								"212295", -- [1]
								"nether ward", -- [2]
							}, -- [2]
							{
								"213602", -- [1]
								"greater fade", -- [2]
							}, -- [3]
							{
								"210294", -- [1]
								"divine favor", -- [2]
							}, -- [4]
							{
								"23920", -- [1]
								"spell reflect", -- [2]
							}, -- [5]
							{
								"330279", -- [1]
								"overwatch (spell reflect)", -- [2]
							}, -- [6]
							{
								"305497", -- [1]
								"thorns", -- [2]
							}, -- [7]
							{
								"1044", -- [1]
								"freedom", -- [2]
							}, -- [8]
							{
								"110909", -- [1]
								"alter time", -- [2]
							}, -- [9]
							{
								"6940", -- [1]
								"sacrifice 30%", -- [2]
							}, -- [10]
							{
								"199448", -- [1]
								"sacrifice 100%", -- [2]
							}, -- [11]
						},
						["offensiveSpells"] = {
							{
								"315443", -- [1]
								"abomination limb", -- [2]
							}, -- [1]
							{
								"51271", -- [1]
								"pillars of frost", -- [2]
							}, -- [2]
							{
								"185422", -- [1]
								"shadow dance", -- [2]
							}, -- [3]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    modTable.resize = function(aura, scale)\n        local expectedW = math.floor(Plater.db.profile.aura_width * scale + 0.5)\n        local expectedH = math.floor(Plater.db.profile.aura_height * scale + 0.5)\n        local W, H = aura:GetSize()\n        local currentW = math.floor(W + 0.5)\n        local currentH = math.floor(W + 0.5)\n        \n        if not (currentW == expectedW) or not (currentW == expectedW) then\n            aura:SetSize (expectedW, expectedH)\n            aura.Icon:SetSize (expectedW-2, expectedH-2)\n            return true\n        end\n        return false\n    end \n    \n    local mergeTable = function(customTable, detailsTable)\n        local merged = {}\n        for k,v in pairs(customTable) do\n            merged[tonumber(k)] = v \n        end\n        for k,v in pairs(detailsTable) do\n            merged[k] = v \n        end\n        return merged\n    end\n    \n    modTable.allCrowdControlSpells = mergeTable(\n        modTable.config.crowdControlSpells, \n        DetailsFramework.CrowdControlSpells\n    )\n    modTable.allDefensiveSpells = mergeTable(\n        modTable.config.defensiveSpells, \n        DetailsFramework.CooldownsAllDeffensive\n    )\n    modTable.allOffensiveSpells = mergeTable(\n        modTable.config.offensiveSpells, \n        DetailsFramework.CooldownsAttack\n    )\n    \n    -- ViragDevTool_AddData(modTable, \"lucy plate buffs modtable\")\nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local cc  = modTable.allCrowdControlSpells\n    local defensives = modTable.allDefensiveSpells\n    local offensives = modTable.allOffensiveSpells\n    \n    local resize = modTable.resize\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    local didResize = false\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for _, auraIcon in ipairs (auraContainer) do\n            if auraIcon:IsShown() then\n                local id = auraIcon.SpellId\n                \n                if defensives[id] then\n                    if resize(auraIcon, modTable.config.defensiveScale) then\n                        didResize = true    \n                    end\n                elseif offensives[id] then\n                    if resize(auraIcon, modTable.config.offensiveScale) then\n                        didResize = true \n                    end\n                elseif cc[id] then\n                    if resize(auraIcon, modTable.config.ccScale) then\n                        didResize = true    \n                    end\n                elseif auraIcon.CanStealOrPurge then\n                    if resize(auraIcon, modTable.config.purgeableScale) then\n                        didResize = true    \n                    end\n                else\n                    if resize(auraIcon, 1) then\n                        didResize = true\n                    end\n                end\n            end\n        end\n    end\n    \n    if Plater.Masque and didResize then\n        Plater.Masque.AuraFrame1:ReSkin()\n        Plater.Masque.AuraFrame2:ReSkin()\n    end\n    \nend",
					},
					["Time"] = 1655636991,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/S8uK6Ls6Z/17",
					["Icon"] = 132311,
					["Enabled"] = true,
					["Revision"] = 785,
					["semver"] = "1.0.16",
					["Author"] = "Lucyón-Bloodfeather",
					["Desc"] = "A mod that imitates flyPlateBuffs. Resize aura icons by the type of aura they are; crowd control, offensive buff, defensive buff or purgable/stealable",
					["Prio"] = 99,
					["Name"] = "@ 1.0.13 Lucy Plate Buffs",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Note",
							["Value"] = "Note for @scriptname to work as intended:",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Note2",
							["Value"] = "In Buff Special DISABLE all \"Auto Add these types of Auras\"",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Note3",
							["Value"] = "In Buff Settings ENABLE CC/Offensive/Defensive/Purgable",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Scale",
							["Value"] = "@scriptname scaling options:",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of crowd control aura icons",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1.4,
							["Key"] = "ccScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Crowd Control",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of offensive buff icons",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1.3,
							["Key"] = "offensiveScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Offensive Buffs",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of defensive buff icons",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1.3,
							["Key"] = "defensiveScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Defensive Buffs",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of buffs that can be purged/stolen",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "purgeableScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Purgeable / Stealable",
						}, -- [10]
						{
							["Type"] = 6,
							["Name"] = "",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "CCs",
							["Value"] = {
								{
									"323673", -- [1]
									"mindgames", -- [2]
								}, -- [1]
								{
									"15487", -- [1]
									"silence", -- [2]
								}, -- [2]
								{
									"31935", -- [1]
									"avengers shield", -- [2]
								}, -- [3]
								{
									"305485", -- [1]
									"lightning lasso", -- [2]
								}, -- [4]
								{
									"236077", -- [1]
									"disarm", -- [2]
								}, -- [5]
							},
							["Key"] = "crowdControlSpells",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 7,
							["Name"] = "Defensive Buffs",
							["Value"] = {
								{
									"125174", -- [1]
									"touch of karma", -- [2]
								}, -- [1]
								{
									"212295", -- [1]
									"nether ward", -- [2]
								}, -- [2]
								{
									"213602", -- [1]
									"greater fade", -- [2]
								}, -- [3]
								{
									"210294", -- [1]
									"divine favor", -- [2]
								}, -- [4]
								{
									"23920", -- [1]
									"spell reflect", -- [2]
								}, -- [5]
								{
									"330279", -- [1]
									"overwatch (spell reflect)", -- [2]
								}, -- [6]
								{
									"305497", -- [1]
									"thorns", -- [2]
								}, -- [7]
								{
									"1044", -- [1]
									"freedom", -- [2]
								}, -- [8]
								{
									"110909", -- [1]
									"alter time", -- [2]
								}, -- [9]
								{
									"6940", -- [1]
									"sacrifice 30%", -- [2]
								}, -- [10]
								{
									"199448", -- [1]
									"sacrifice 100%", -- [2]
								}, -- [11]
							},
							["Key"] = "defensiveSpells",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 7,
							["Name"] = "Offensive Buffs",
							["Value"] = {
								{
									"315443", -- [1]
									"abomination limb", -- [2]
								}, -- [1]
								{
									"51271", -- [1]
									"pillars of frost", -- [2]
								}, -- [2]
								{
									"185422", -- [1]
									"shadow dance", -- [2]
								}, -- [3]
							},
							["Key"] = "offensiveSpells",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [14]
					},
					["HooksTemp"] = {
					},
					["version"] = 17,
				}, -- [18]
				{
					["OptionsValues"] = {
						["glowColor"] = {
							0.03137254901960784, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["x"] = 0.3499999940395355,
						["texPath"] = "Interface\\AddOns\\SharedMedia_Senjitsu\\texture\\Circle_Smooth2",
						["y"] = 0.5999999642372131,
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.CreateHoverHighlight(unitFrame)\nend",
						["Initialization"] = "function (modTable)\n    -- adding show for the glow frame to EnableHighlight\n    function Plater.EnableHighlight (unitFrame)\n        unitFrame.HighlightFrame:Show()\n        unitFrame.HighlightFrame.HighlightTexture:Show()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Show() end\n        \n        unitFrame.HighlightFrame.unit = unitFrame.namePlateUnitToken\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", Plater.CheckHighlight)\n    end\n    \n    -- adding hide for the glow frame to DisableHighlight\n    function Plater.DisableHighlight (unitFrame)\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", nil)\n        unitFrame.HighlightFrame:Hide()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Hide() end\n        unitFrame.HighlightFrame.HighlightTexture:Hide()\n    end\n    \n    -- adding hide/show for the glow frame to CheckHighlight\n    function Plater.CheckHighlight (self)\n        if UnitIsUnit(\"mouseover\", self.unit) and not UnitIsUnit(\"target\", self.unit) then\n            self.HighlightTexture:Show()\n            if self.glow then self.glow:Show() end\n        else\n            self.HighlightTexture:Hide()\n            if self.glow then self.glow:Hide() end\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- texture path for the glow\n    local texture = modTable.config.texPath\n    -- color of the glow { red, green, blue, alpha }\n    local color = modTable.config.glowColor\n    -- texture width/height modifier\n    -- range from 0-1 (0.01 is 1%, 0.1 is 10%, 1 is 100% of the healthbar size)\n    local x = modTable.config.x\n    local y = modTable.config.y\n    \n    function envTable.CreateHoverHighlight(unitFrame)\n        local unit = unitFrame\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local glow = unit.healthBar:CreateTexture(nil, \"background\", nil, -8)\n        glow:SetTexture(texture)\n        glow:SetBlendMode(\"ADD\")\n        glow:SetVertexColor(unpack(color))\n        glow:Hide()\n        unit.HighlightFrame.glow = glow\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local PixelUtil = PixelUtil or DFPixelUtil\n        local widthOs = unit.healthBar:GetWidth() * x\n        local heightOs = unit.healthBar:GetHeight() * y\n        local hover = unit.HighlightFrame.glow\n        hover:ClearAllPoints()\n        PixelUtil.SetPoint(hover, \"topleft\", unit.healthBar, \"topleft\", -widthOs, heightOs)\n        PixelUtil.SetPoint(hover, \"bottomright\", unit.healthBar, \"bottomright\", widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"bottomleft\", unit.healthBar, \"bottomleft\", -widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"topright\", unit.healthBar, \"topright\", widthOs, heightOs)\n    end\nend\n\n\n",
					},
					["Time"] = 1655637056,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/NbSpkcICY/3",
					["Icon"] = 1397641,
					["Enabled"] = true,
					["Revision"] = 396,
					["semver"] = "1.0.2",
					["Author"] = "Viciouwu-Tarren Mill",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Mouseover Highlight Glow",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Title",
							["Value"] = "MOUSEOVER HIGHLIGHT OPTIONS:",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set color of the highlight texture.",
						}, -- [2]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface/ICONS/GlowNameplate",
							["Key"] = "texPath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set texture path of the highlight texture.",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Size scaling",
							["Value"] = "SCALING MODIFIERS FOR WIDTH AND HEIGHT:",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "Size scaling",
							["Value"] = "Width/height modifiers are based on percentage of healthbar size. Range from 0-1  (0.15 is 15%, 1 is 100% of the healthbar size).",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "X modifier",
							["Value"] = "Set width of highlight texture (resizes texture horizontally).",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.25,
							["Key"] = "x",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "X modifier",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Y modifier",
							["Value"] = "Set height of highlight texture (resizes texture vertically).",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "y",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Y modifier",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "",
							["Value"] = "SAVE.",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "",
							["Value"] = "RELOAD UI AFTER SAVING CHANGES.",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
					},
					["HooksTemp"] = {
					},
					["version"] = 3,
				}, -- [19]
			},
			["aura_width"] = 20,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["range_check_enabled"] = false,
			["quick_hide"] = true,
			["widget_bar_anchor"] = {
				["side"] = 8,
			},
			["extra_icon_timer_size"] = 18,
			["target_highlight_color"] = {
				nil, -- [1]
				1, -- [2]
				0, -- [3]
			},
			["resources"] = {
				["scale"] = 0.7999999523162842,
			},
			["click_space"] = {
				120, -- [1]
			},
			["castbar_target_font"] = "AvantGardeGothicLTMedium",
			["ui_parent_cast_level"] = 1,
			["castbar_target_outline"] = "NONE",
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["not_affecting_combat_enabled"] = true,
			["first_run3"] = true,
			["ui_parent_scale_tune"] = 1.428571452899855,
			["health_animation_time_dilatation"] = 2.599999904632568,
			["hide_blizzard_castbar"] = true,
			["health_statusbar_bgtexture"] = "ElvUI Blank",
			["ui_parent_target_strata"] = "MEDIUM",
			["aura_show_enrage"] = true,
			["aura_tracker"] = {
				["buff_banned"] = {
					[317920] = false,
					[183435] = false,
					[259277] = false,
					[115804] = false,
					[465] = false,
					[329289] = false,
					[19514] = false,
					[32223] = false,
				},
				["debuff_banned"] = {
					[132651] = false,
					[339284] = false,
					[5246] = false,
					[24394] = false,
					[115804] = false,
					[337046] = true,
					[324260] = true,
					[208684] = false,
					[190925] = false,
					[270343] = false,
					[2649] = false,
					[345546] = false,
					[34694] = false,
					[132169] = false,
					[262304] = true,
					[259277] = false,
					[217200] = false,
					[345466] = false,
					[295277] = false,
					[6770] = false,
					[408] = false,
					[317491] = false,
					[3355] = false,
					[105771] = false,
					[356620] = false,
				},
				["debuff_tracked"] = {
					[270339] = false,
					[1079] = false,
					[3408] = false,
					[257284] = false,
					[354050] = false,
					[116095] = false,
					[65815] = false,
					[106830] = false,
					[183218] = false,
					[5116] = false,
					[164812] = false,
					[1513] = false,
					[328547] = false,
					[5938] = false,
					[115804] = false,
					[155625] = false,
					[155722] = false,
					[270332] = false,
					[1715] = false,
					[259491] = false,
					[45524] = false,
					[271049] = false,
				},
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[354050] = false,
					[163689] = true,
					[297133] = true,
				},
			},
			["extra_icon_caster_font"] = "PT Sans Narrow",
			["castbar_target_show"] = true,
			["cast_statusbar_color"] = {
				0, -- [1]
				0.8313725490196078, -- [2]
				0.8470588235294118, -- [3]
				0.9600000008940697, -- [4]
			},
			["color_override"] = false,
			["focus_indicator_enabled"] = false,
			["health_selection_overlay_alpha"] = 0,
			["aura_stack_anchor"] = {
				["y"] = -5,
				["x"] = 1,
				["side"] = 11,
			},
			["castbar_icon_show"] = false,
			["global_offset_y"] = -5,
			["extra_icon_timer_font"] = "PT Sans Narrow",
			["target_shady_combat_only"] = false,
			["not_affecting_combat_alpha"] = 1,
			["target_highlight_alpha"] = 1,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["auto_toggle_stacking_enabled"] = true,
			["bossmod_icons_anchor"] = {
				["y"] = 0,
			},
			["target_highlight_height"] = 11.93635749816895,
			["target_shady_enabled"] = false,
			["aura_timer"] = false,
			["health_selection_overlay"] = "Armory",
			["use_ui_parent"] = true,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["patch_version"] = 20,
			["no_spellname_length_limit"] = true,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 13,
			["enable_masque_support"] = true,
			["number_region_first_run"] = true,
			["health_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.8043738603591919, -- [4]
			},
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1660511537,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 341,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1667821722,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373429, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetFromScale(0.2, 1)\n        texture.scale:SetToScale(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
				}, -- [1]
			},
			["castbar_target_anchor"] = {
				["x"] = 2,
				["side"] = 6,
			},
			["cast_statusbar_texture"] = "ElvUI Blank",
			["indicator_faction"] = false,
			["extra_icon_height"] = 28,
			["range_check_alpha_friendlies"] = 1,
			["indicator_raidmark_anchor"] = {
				["x"] = 0,
			},
			["target_highlight"] = false,
			["auto_toggle_stacking"] = {
				["cities"] = true,
			},
		},
		["Test"] = {
			["target_shady_combat_only"] = false,
			["aura_breakline_space"] = 0,
			["debuff_show_cc"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655636933,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["Revision"] = 356,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Skull Texture",
							["Value"] = "Skull Texture",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Skull Color",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "skullColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "skullAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [13]
					},
					["Name"] = "Unit - Important [Plater]",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
					},
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1630581405,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["Revision"] = 614,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Enabled"] = false,
					["Desc"] = "Add the buff name in the trigger box.",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						323149, -- [1]
						324392, -- [2]
						340544, -- [3]
						342189, -- [4]
						333227, -- [5]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1612879332,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["Desc"] = "Time to die Spiteful affix",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["Revision"] = 187,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Time to Die",
							["Value"] = "Time to Die",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "bgWidth",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "bgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textSize",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Targeting",
							["Value"] = "Targeting",
							["Key"] = "option11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "switchTargetName",
							["Value"] = true,
							["Name"] = "Show Target instead of Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "useTargetingColor",
							["Value"] = true,
							["Name"] = "Change Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "targetingColor",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Name"] = "Option 11",
							["Value"] = 0,
							["Key"] = "option11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["Name"] = "M+ Spiteful",
					["Prio"] = 99,
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["Icon"] = 135945,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
						350687, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1655637058,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Revision"] = 464,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [16]
					},
					["Name"] = "Explosion Affix M+ [Plater]",
					["Prio"] = 99,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1630581368,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["Revision"] = 355,
					["semver"] = "",
					["Enabled"] = false,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Prio"] = 99,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
					["SpellIds"] = {
						332329, -- [1]
						320103, -- [2]
						321406, -- [3]
						335817, -- [4]
						321061, -- [5]
						320141, -- [6]
						326171, -- [7]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Name"] = "Health Bar Height Mod",
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Health Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [16]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Time"] = 1655636954,
					["Icon"] = -21623,
					["url"] = "",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["Revision"] = 1065,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Big Alert [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						329239, -- [62]
						328400, -- [63]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1612879304,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Revision"] = 596,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.6,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["Name"] = "Cast - Small Alert [Plater]",
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["SpellIds"] = {
						320170, -- [1]
						320171, -- [2]
						320462, -- [3]
						330712, -- [4]
						332170, -- [5]
						333875, -- [6]
						326836, -- [7]
						342135, -- [8]
						333861, -- [9]
						341969, -- [10]
						317963, -- [11]
						327481, -- [12]
						328331, -- [13]
						322614, -- [14]
						325701, -- [15]
						326438, -- [16]
						323538, -- [17]
						321764, -- [18]
						296523, -- [19]
						330755, -- [20]
						295929, -- [21]
						296019, -- [22]
						335685, -- [23]
						170751, -- [24]
						342207, -- [25]
						350554, -- [26]
						348513, -- [27]
						351779, -- [28]
						328180, -- [29]
						319898, -- [30]
					},
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1628885394,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Revision"] = 67,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Only in Combat",
							["Value"] = false,
							["Key"] = "onlyInCombat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["Desc"] = "Auto set skull marker",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Name"] = "Auto Set Skull",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655636940,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["Revision"] = 407,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["Name"] = "Unit - Main Target [P]",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
						179124, -- [3]
					},
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655636946,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["url"] = "",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Revision"] = 376,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Blink Enabled",
							["Value"] = true,
							["Key"] = "blinkEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = true,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Change NamePlate Color",
							["Value"] = false,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Name"] = "Timeleft to Blink",
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Name"] = "Blink Speed",
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Name"] = "Blink Max Alpha",
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Blink Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "blinkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Timer Color Enabled",
							["Value"] = true,
							["Key"] = "timerColorEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Warning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Critical",
						}, -- [15]
						{
							["Type"] = 1,
							["Name"] = "Warning Color",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "warningColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Critical Color",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "criticalColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Enabled"] = false,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = false,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1655636927,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["Icon"] = -21644,
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["Revision"] = 111,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["Name"] = "Unit - Health Markers [P]",
					["Prio"] = 99,
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1612879297,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Revision"] = 461,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.275,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Key"] = "animSpeed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["Name"] = "Cast - Frontal Cone [Plater]",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["SpellIds"] = {
						323489, -- [1]
						323496, -- [2]
						319941, -- [3]
						319592, -- [4]
						334266, -- [5]
						325258, -- [6]
						334913, -- [7]
						326221, -- [8]
						322936, -- [9]
						323236, -- [10]
						321834, -- [11]
						336752, -- [12]
						325418, -- [13]
						324667, -- [14]
						327233, -- [15]
						324368, -- [16]
						324205, -- [17]
						323943, -- [18]
						319713, -- [19]
						320596, -- [20]
						320729, -- [21]
						323608, -- [22]
						330614, -- [23]
						320063, -- [24]
						332708, -- [25]
						334023, -- [26]
						317231, -- [27]
						317943, -- [28]
						320966, -- [29]
						334053, -- [30]
						328458, -- [31]
						321968, -- [32]
						331718, -- [33]
						325793, -- [34]
						330453, -- [35]
						326997, -- [36]
						334051, -- [37]
						292903, -- [38]
						330843, -- [39]
						294173, -- [40]
						189200, -- [41]
						352833, -- [42]
						330403, -- [43]
					},
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1641489811,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["url"] = "",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Enabled"] = false,
					["Revision"] = 272,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["Options"] = {
					},
					["Icon"] = 1029718,
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Time"] = 1641489800,
					["Icon"] = -21625,
					["url"] = "",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["Revision"] = 844,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Key"] = "shakeAmplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["Name"] = "Cast - Tank Interrupt [P]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Enabled"] = false,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1655636942,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
					["Desc"] = "Show the energy amount above the nameplate.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 235,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "script desc",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show at 80% of Energy",
							["Value"] = true,
							["Key"] = "showLater",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Font Color",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Key"] = "fontColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Enable Text Outline",
							["Value"] = true,
							["Key"] = "outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["Name"] = "Unit - Show Energy [Plater]",
					["Prio"] = 99,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["Icon"] = 136048,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
				}, -- [18]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1655636948,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = false,
					["Revision"] = 270,
					["semver"] = "",
					["Options"] = {
					},
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Author"] = "Tecno-Azralon",
					["Name"] = "Fixate On You [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["Icon"] = 841383,
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Time"] = 1655636954,
					["Icon"] = -21623,
					["url"] = "https://wago.io/gKTEW3X4M/1",
					["NpcNames"] = {
					},
					["semver"] = "1.0.0",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["Revision"] = 983,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["version"] = 1,
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						335305, -- [62]
					},
					["PlaterCore"] = 1,
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["OptionsValues"] = {
						["customSize"] = {
							{
								"17", -- [1]
								"120, 16", -- [2]
							}, -- [1]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1655636958,
					["semver"] = "",
					["url"] = "",
					["Icon"] = -21622,
					["Desc"] = "When a spell resembles more a timer than a spell being cast",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["Revision"] = 284,
					["Options"] = {
						{
							["Type"] = 7,
							["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
							["Value"] = {
								{
									"17", -- [1]
									"120, 16", -- [2]
								}, -- [1]
							},
							["Key"] = "customSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "",
							["Min"] = 5,
							["Key"] = "width",
							["Value"] = 120,
							["Name"] = "Cast Bar Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 16,
							["Key"] = "height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Set the size of the cast time",
							["Min"] = 8,
							["Key"] = "timerFontSize",
							["Value"] = 12,
							["Name"] = "Cast Timer Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 6",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Option 7",
							["Value"] = "Time Separators",
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.5992676615715027, -- [4]
							},
							["Key"] = "separatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "separatorWidth",
							["Value"] = 1,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
					},
					["Name"] = "Cast - Castbar is Timer [P]",
					["Prio"] = 99,
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						354080, -- [1]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1641489780,
					["semver"] = "",
					["url"] = "",
					["Icon"] = -21626,
					["Desc"] = "Highlight the target name",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["Revision"] = 837,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetNameSize",
							["Value"] = 14,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Key"] = "targetFrameWidth",
							["Value"] = 90,
							["Name"] = "Frame Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "targetFrameHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["Name"] = "Cast - Important Target [P]",
					["Prio"] = 99,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["SpellIds"] = {
						354173, -- [1]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
						["timerList"] = {
							{
								"350421", -- [1]
								"5", -- [2]
							}, -- [1]
							{
								"355787", -- [1]
								"15", -- [2]
							}, -- [2]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [3]
							{
								"348513", -- [1]
								"14", -- [2]
							}, -- [4]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1655636950,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["url"] = "",
					["Icon"] = -21623,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["Revision"] = 1165,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["Enabled"] = true,
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["Prio"] = 99,
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
					["NpcNames"] = {
						"185685", -- [1]
						"185680", -- [2]
						"185683", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Relics 9.2 M Dungeons",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Color Settings",
							["Name"] = "ColorSettingsAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "hasteColor",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Name"] = "Haste Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Moviment Speep Color",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Key"] = "msColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "cdrColor",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Name"] = "Cooldown Reduction Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Size Settings",
							["Name"] = "SizeSettingsAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Size",
							["Value"] = false,
							["Key"] = "canChangeSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Name"] = "Width",
							["Value"] = 100,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "width",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Key"] = "height",
							["Value"] = 12,
							["Name"] = "Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option9",
							["Value"] = 0,
							["Name"] = "Option 9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Border Settings",
							["Name"] = "BorderSettingsAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showBorder",
							["Value"] = true,
							["Name"] = "Paint Border",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option12",
							["Value"] = 0,
							["Name"] = "Option 12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option13",
							["Value"] = "Name Settings",
							["Name"] = "NameSettings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Key"] = "hasteName",
							["Value"] = "HASTE",
							["Name"] = "Haste Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Name"] = "Cooldown Reduction Name",
							["Value"] = "CDR",
							["Key"] = "cdrName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Key"] = "msName",
							["Value"] = "MS",
							["Name"] = "Movement Speed Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
				}, -- [24]
			},
			["npcs_renamed"] = {
				[185680] = "Vy Haste",
				[185685] = "Urh CD",
				[185683] = "Wo Invis",
			},
			["extra_icon_height"] = 28,
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateOverlapV"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["ShowNamePlateLoseAggroFlash"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowEnemyMinus"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["NamePlateClassificationScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1442",
				["nameplateShowFriendlyTotems"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplatePersonalHideDelaySeconds"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowFriendlyPets"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateOverlapH"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplatePersonalShowWithTarget"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateMinAlpha"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateResourceOnTarget"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["clampTargetNameplateToScreen"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowAll"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateMaxDistance"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowFriendlyMinions"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateTargetBehindMaxDistance"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"ALLNAMEPLATES\"]:4: in function <[string \"ALLNAMEPLATES\"]:1>\n",
				["NamePlateVerticalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1441",
				["nameplateSelectedAlpha"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowSelf"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplatePersonalShowAlways"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateMotionSpeed"] = "Interface\\AddOns\\Senjitsu\\Senjitsu.lua:10",
				["nameplateGlobalScale"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowEnemyMinions"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowEnemyPets"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowFriendlyNPCs"] = "Interface\\AddOns\\Senjitsu\\Senjitsu.lua:11",
				["nameplateSelectedScale"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"ALLNAMEPLATES\"]:5: in function <[string \"ALLNAMEPLATES\"]:1>\n",
				["nameplateMotion"] = "Interface\\AddOns\\Plater\\Plater.lua:8089",
				["nameplateMinScale"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateOtherTopInset"] = "Interface\\AddOns\\Senjitsu\\Senjitsu.lua:9",
				["nameplateOtherAtBase"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowOnlyNames"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowEnemyTotems"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowFriendlyGuardians"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["NamePlateHorizontalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1440",
				["nameplateLargeTopInset"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateTargetRadialPosition"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateShowDebuffsOnFriendly"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
				["nameplateMinAlphaDistance"] = "Interface\\AddOns\\Plater\\Plater.lua:1938",
			},
			["aura_cache_by_name"] = {
				["volatile bomb"] = {
					178557, -- [1]
					271045, -- [2]
					271047, -- [3]
					271048, -- [4]
					271049, -- [5]
					271050, -- [6]
				},
				["devotion aura"] = {
					465, -- [1]
					8258, -- [2]
					17232, -- [3]
					41452, -- [4]
					52442, -- [5]
					57740, -- [6]
					58944, -- [7]
					165712, -- [8]
					344218, -- [9]
					353101, -- [10]
				},
				["cheap shot"] = {
					1833, -- [1]
					6409, -- [2]
					14902, -- [3]
					30986, -- [4]
					31819, -- [5]
					31843, -- [6]
					34243, -- [7]
					132651, -- [8]
					133002, -- [9]
					138412, -- [10]
					145424, -- [11]
					171953, -- [12]
					188148, -- [13]
					188150, -- [14]
					209238, -- [15]
					257738, -- [16]
					263640, -- [17]
					268987, -- [18]
					268993, -- [19]
					283655, -- [20]
					288588, -- [21]
					326696, -- [22]
				},
				["flayedwing toxin"] = {
					345545, -- [1]
					345546, -- [2]
					345547, -- [3]
				},
				["growl"] = {
					2649, -- [1]
					6795, -- [2]
					31334, -- [3]
					39270, -- [4]
					102649, -- [5]
					173088, -- [6]
					182848, -- [7]
					192640, -- [8]
					210037, -- [9]
					214413, -- [10]
					218312, -- [11]
					218608, -- [12]
					225041, -- [13]
					337176, -- [14]
				},
				["barbed shot"] = {
					62318, -- [1]
					217200, -- [2]
					246152, -- [3]
					246851, -- [4]
					246852, -- [5]
					246853, -- [6]
					246854, -- [7]
					284228, -- [8]
					284253, -- [9]
					284254, -- [10]
					284255, -- [11]
					284257, -- [12]
					284258, -- [13]
					325234, -- [14]
				},
				["serpent sting"] = {
					31975, -- [1]
					35511, -- [2]
					36984, -- [3]
					38859, -- [4]
					38914, -- [5]
					39182, -- [6]
					80009, -- [7]
					87935, -- [8]
					97153, -- [9]
					118253, -- [10]
					125906, -- [11]
					145656, -- [12]
					160503, -- [13]
					162754, -- [14]
					255556, -- [15]
					259293, -- [16]
					259491, -- [17]
					268423, -- [18]
					271788, -- [19]
					282211, -- [20]
					295311, -- [21]
				},
				["shrapnel bomb"] = {
					38753, -- [1]
					130413, -- [2]
					270335, -- [3]
					270336, -- [4]
					270338, -- [5]
					270339, -- [6]
					271020, -- [7]
				},
				["pouch of razor fragments"] = {
					356618, -- [1]
					356620, -- [2]
				},
				["rake"] = {
					1822, -- [1]
					24331, -- [2]
					24332, -- [3]
					27556, -- [4]
					27638, -- [5]
					36332, -- [6]
					53499, -- [7]
					54668, -- [8]
					59881, -- [9]
					65406, -- [10]
					89593, -- [11]
					115871, -- [12]
					120560, -- [13]
					125099, -- [14]
					130191, -- [15]
					147396, -- [16]
					155722, -- [17]
					163505, -- [18]
					217369, -- [19]
					223111, -- [20]
					223954, -- [21]
					231052, -- [22]
					239675, -- [23]
					242931, -- [24]
					250393, -- [25]
					262557, -- [26]
					283699, -- [27]
					283700, -- [28]
					292610, -- [29]
					292611, -- [30]
					319628, -- [31]
				},
				["rip"] = {
					1079, -- [1]
					33912, -- [2]
					36590, -- [3]
					57661, -- [4]
					59989, -- [5]
					71926, -- [6]
					79829, -- [7]
					126120, -- [8]
					133081, -- [9]
					173299, -- [10]
					188353, -- [11]
					208946, -- [12]
					214686, -- [13]
					251332, -- [14]
					256920, -- [15]
					259873, -- [16]
					275440, -- [17]
					283708, -- [18]
					288535, -- [19]
					292626, -- [20]
				},
				["shiv"] = {
					5938, -- [1]
					76511, -- [2]
					159245, -- [3]
					269999, -- [4]
					271443, -- [5]
					277292, -- [6]
					319032, -- [7]
					319504, -- [8]
				},
				["hunter's mark"] = {
					1130, -- [1]
					31615, -- [2]
					56303, -- [3]
					80016, -- [4]
					143882, -- [5]
					145663, -- [6]
					152771, -- [7]
					154170, -- [8]
					163446, -- [9]
					163447, -- [10]
					177114, -- [11]
					189478, -- [12]
					189480, -- [13]
					195515, -- [14]
					250124, -- [15]
					257284, -- [16]
					259556, -- [17]
					259558, -- [18]
					316930, -- [19]
				},
				["moonfire"] = {
					8921, -- [1]
					15798, -- [2]
					20690, -- [3]
					21669, -- [4]
					22206, -- [5]
					23380, -- [6]
					24957, -- [7]
					27737, -- [8]
					31270, -- [9]
					31401, -- [10]
					32373, -- [11]
					32415, -- [12]
					37328, -- [13]
					43545, -- [14]
					45821, -- [15]
					45900, -- [16]
					47072, -- [17]
					52502, -- [18]
					57647, -- [19]
					59987, -- [20]
					65856, -- [21]
					75329, -- [22]
					82816, -- [23]
					101633, -- [24]
					155625, -- [25]
					162623, -- [26]
					164812, -- [27]
					185467, -- [28]
					186624, -- [29]
					208943, -- [30]
					218796, -- [31]
					218797, -- [32]
					224066, -- [33]
					241130, -- [34]
					241144, -- [35]
					243383, -- [36]
					243829, -- [37]
					277921, -- [38]
					278946, -- [39]
					303027, -- [40]
					311738, -- [41]
					315843, -- [42]
					326646, -- [43]
					326654, -- [44]
					328023, -- [45]
					343037, -- [46]
				},
				["intimidation"] = {
					7093, -- [1]
					19577, -- [2]
					24394, -- [3]
					70495, -- [4]
					120558, -- [5]
					123646, -- [6]
					160109, -- [7]
					284378, -- [8]
					284379, -- [9]
					355716, -- [10]
					355719, -- [11]
				},
				["concussive shot"] = {
					5116, -- [1]
					17174, -- [2]
					22914, -- [3]
					27634, -- [4]
					97154, -- [5]
					125909, -- [6]
					142632, -- [7]
					193822, -- [8]
					195521, -- [9]
					203105, -- [10]
					240566, -- [11]
					284217, -- [12]
					292701, -- [13]
					295282, -- [14]
					321023, -- [15]
				},
				["pheromone bomb"] = {
					270323, -- [1]
					270327, -- [2]
					270329, -- [3]
					270332, -- [4]
					271015, -- [5]
				},
				["sap"] = {
					6770, -- [1]
					30980, -- [2]
					73154, -- [3]
					134205, -- [4]
					173107, -- [5]
					193082, -- [6]
					210539, -- [7]
					219692, -- [8]
					257740, -- [9]
					274055, -- [10]
					291391, -- [11]
					292649, -- [12]
					303403, -- [13]
					303406, -- [14]
					324600, -- [15]
				},
				["lightning shield"] = {
					8788, -- [1]
					12550, -- [2]
					13585, -- [3]
					15507, -- [4]
					19514, -- [5]
					20545, -- [6]
					23551, -- [7]
					23552, -- [8]
					25020, -- [9]
					27635, -- [10]
					28820, -- [11]
					28821, -- [12]
					31765, -- [13]
					39067, -- [14]
					41151, -- [15]
					50831, -- [16]
					51620, -- [17]
					51776, -- [18]
					52651, -- [19]
					56221, -- [20]
					59025, -- [21]
					59845, -- [22]
					61570, -- [23]
					75381, -- [24]
					82910, -- [25]
					96414, -- [26]
					101639, -- [27]
					131844, -- [28]
					135999, -- [29]
					138714, -- [30]
					149565, -- [31]
					164470, -- [32]
					170980, -- [33]
					192106, -- [34]
					192109, -- [35]
					232857, -- [36]
					247584, -- [37]
					261872, -- [38]
					261873, -- [39]
					263246, -- [40]
					268831, -- [41]
					268851, -- [42]
					268938, -- [43]
					273324, -- [44]
					273411, -- [45]
					273430, -- [46]
					273446, -- [47]
					274336, -- [48]
					291512, -- [49]
					344174, -- [50]
				},
				["kill command"] = {
					34026, -- [1]
					83381, -- [2]
					118171, -- [3]
					152574, -- [4]
					152637, -- [5]
					152639, -- [6]
					166979, -- [7]
					202198, -- [8]
					205440, -- [9]
					240567, -- [10]
					240568, -- [11]
					259277, -- [12]
					259489, -- [13]
					263186, -- [14]
					268783, -- [15]
					282206, -- [16]
					284266, -- [17]
					284381, -- [18]
					284384, -- [19]
					291367, -- [20]
					291369, -- [21]
				},
				["liquefying ooze"] = {
					345466, -- [1]
				},
				["thrash"] = {
					3391, -- [1]
					3417, -- [2]
					8876, -- [3]
					12787, -- [4]
					21919, -- [5]
					54913, -- [6]
					74979, -- [7]
					77758, -- [8]
					106830, -- [9]
					106832, -- [10]
					131657, -- [11]
					131659, -- [12]
					131993, -- [13]
					131994, -- [14]
					131996, -- [15]
					158175, -- [16]
					158176, -- [17]
					158435, -- [18]
					158436, -- [19]
					158723, -- [20]
					158790, -- [21]
					161129, -- [22]
					163040, -- [23]
					164124, -- [24]
					172035, -- [25]
					174081, -- [26]
					174082, -- [27]
					174916, -- [28]
					174917, -- [29]
					177422, -- [30]
					181269, -- [31]
					182846, -- [32]
					192090, -- [33]
					196345, -- [34]
					207487, -- [35]
					211141, -- [36]
					219286, -- [37]
					219339, -- [38]
					220964, -- [39]
					222814, -- [40]
					242323, -- [41]
					250428, -- [42]
					256409, -- [43]
					257266, -- [44]
					257271, -- [45]
					260321, -- [46]
					260322, -- [47]
					261892, -- [48]
					265539, -- [49]
					275043, -- [50]
					292576, -- [51]
					297382, -- [52]
					297383, -- [53]
					300109, -- [54]
					300110, -- [55]
					301061, -- [56]
					308556, -- [57]
					313970, -- [58]
					313971, -- [59]
					319219, -- [60]
					319222, -- [61]
					319223, -- [62]
					320843, -- [63]
					326409, -- [64]
					326426, -- [65]
					329564, -- [66]
				},
				["die by the sword"] = {
					118038, -- [1]
					236385, -- [2]
					315948, -- [3]
				},
				["charged"] = {
					37234, -- [1]
					136742, -- [2]
					148296, -- [3]
					149328, -- [4]
					172178, -- [5]
					174407, -- [6]
					207566, -- [7]
					207567, -- [8]
					260102, -- [9]
					261838, -- [10]
					277186, -- [11]
					288016, -- [12]
				},
				["harpoon"] = {
					108038, -- [1]
					125245, -- [2]
					147613, -- [3]
					147625, -- [4]
					186260, -- [5]
					190925, -- [6]
					190927, -- [7]
					209035, -- [8]
					212331, -- [9]
					212353, -- [10]
					231550, -- [11]
					232977, -- [12]
					232978, -- [13]
					232979, -- [14]
					235913, -- [15]
					271282, -- [16]
					271625, -- [17]
					288386, -- [18]
					288387, -- [19]
					324485, -- [20]
					324488, -- [21]
					324493, -- [22]
					348486, -- [23]
				},
				["curse of exhaustion"] = {
					29539, -- [1]
					46434, -- [2]
					65815, -- [3]
					77357, -- [4]
					164841, -- [5]
					167587, -- [6]
					170785, -- [7]
					183350, -- [8]
					330371, -- [9]
					334275, -- [10]
				},
				["marksman's advantage"] = {
					339264, -- [1]
					339284, -- [2]
				},
				["chains of ice"] = {
					113, -- [1]
					512, -- [2]
					22744, -- [3]
					22745, -- [4]
					29991, -- [5]
					39268, -- [6]
					45524, -- [7]
					53534, -- [8]
					58464, -- [9]
					61077, -- [10]
					65173, -- [11]
					65174, -- [12]
					66020, -- [13]
					72171, -- [14]
					79899, -- [15]
					96294, -- [16]
					283558, -- [17]
					304831, -- [18]
				},
				["mortal wounds"] = {
					115804, -- [1]
					201075, -- [2]
					201091, -- [3]
					213667, -- [4]
					246249, -- [5]
				},
				["concentration aura"] = {
					79963, -- [1]
					81455, -- [2]
					317920, -- [3]
					344220, -- [4]
				},
				["flayed shot"] = {
					324149, -- [1]
					337046, -- [2]
				},
				["retribution aura"] = {
					8990, -- [1]
					13008, -- [2]
					79976, -- [3]
					165746, -- [4]
					183435, -- [5]
					317906, -- [6]
					342227, -- [7]
					342228, -- [8]
					342229, -- [9]
					344217, -- [10]
				},
				["bolster"] = {
					209859, -- [1]
					280001, -- [2]
				},
				["hand of hindrance"] = {
					183218, -- [1]
				},
				["hamstring"] = {
					1715, -- [1]
					9080, -- [2]
					26141, -- [3]
					26211, -- [4]
					27584, -- [5]
					29667, -- [6]
					30989, -- [7]
					31553, -- [8]
					38262, -- [9]
					38995, -- [10]
					48639, -- [11]
					62845, -- [12]
					87704, -- [13]
					144582, -- [14]
					162350, -- [15]
					188624, -- [16]
					198374, -- [17]
					230003, -- [18]
					240196, -- [19]
					329310, -- [20]
				},
				["deep wounds"] = {
					23256, -- [1]
					43100, -- [2]
					115767, -- [3]
					115768, -- [4]
					262115, -- [5]
					262304, -- [6]
				},
				["summon phantasmal possessor"] = {
					32857, -- [1]
				},
				["intimidating shout"] = {
					5246, -- [1]
					65930, -- [2]
					65931, -- [3]
					95199, -- [4]
					97933, -- [5]
					97934, -- [6]
					155582, -- [7]
					164464, -- [8]
					164465, -- [9]
					167259, -- [10]
					167261, -- [11]
					169432, -- [12]
					223169, -- [13]
					236353, -- [14]
					240190, -- [15]
					273867, -- [16]
					316593, -- [17]
					316594, -- [18]
					316595, -- [19]
				},
				["untouchable"] = {
					126646, -- [1]
					295277, -- [2]
					295278, -- [3]
				},
				["serrated bone spike"] = {
					324073, -- [1]
					324074, -- [2]
					325333, -- [3]
					328547, -- [4]
					328548, -- [5]
					328549, -- [6]
					335940, -- [7]
					341277, -- [8]
					343217, -- [9]
				},
				["charge"] = {
					100, -- [1]
					20508, -- [2]
					22120, -- [3]
					22911, -- [4]
					24023, -- [5]
					24193, -- [6]
					24315, -- [7]
					24408, -- [8]
					25821, -- [9]
					29320, -- [10]
					29847, -- [11]
					31733, -- [12]
					32323, -- [13]
					33709, -- [14]
					34846, -- [15]
					35412, -- [16]
					35570, -- [17]
					35754, -- [18]
					36058, -- [19]
					36140, -- [20]
					36509, -- [21]
					37511, -- [22]
					38461, -- [23]
					39574, -- [24]
					40602, -- [25]
					41581, -- [26]
					42003, -- [27]
					43519, -- [28]
					43651, -- [29]
					43807, -- [30]
					44357, -- [31]
					44884, -- [32]
					49758, -- [33]
					51492, -- [34]
					51756, -- [35]
					51842, -- [36]
					52538, -- [37]
					52577, -- [38]
					52856, -- [39]
					53148, -- [40]
					54460, -- [41]
					55317, -- [42]
					55530, -- [43]
					57627, -- [44]
					58619, -- [45]
					58991, -- [46]
					59040, -- [47]
					59611, -- [48]
					60067, -- [49]
					61685, -- [50]
					62563, -- [51]
					62613, -- [52]
					62614, -- [53]
					62874, -- [54]
					62960, -- [55]
					62961, -- [56]
					62977, -- [57]
					63003, -- [58]
					63010, -- [59]
					63661, -- [60]
					63665, -- [61]
					64591, -- [62]
					64719, -- [63]
					65927, -- [64]
					66481, -- [65]
					68282, -- [66]
					68284, -- [67]
					68301, -- [68]
					68307, -- [69]
					68321, -- [70]
					68498, -- [71]
					68501, -- [72]
					69879, -- [73]
					71553, -- [74]
					74399, -- [75]
					75756, -- [76]
					75915, -- [77]
					77876, -- [78]
					79156, -- [79]
					79904, -- [80]
					80183, -- [81]
					81574, -- [82]
					85250, -- [83]
					87930, -- [84]
					88288, -- [85]
					88295, -- [86]
					88540, -- [87]
					90928, -- [88]
					91187, -- [89]
					91309, -- [90]
					93515, -- [91]
					97164, -- [92]
					97557, -- [93]
					97558, -- [94]
					104056, -- [95]
					105771, -- [96]
					109128, -- [97]
					125277, -- [98]
					126664, -- [99]
					127724, -- [100]
					133253, -- [101]
					135890, -- [102]
					135905, -- [103]
					135906, -- [104]
					136769, -- [105]
					138660, -- [106]
					138796, -- [107]
					138827, -- [108]
					138845, -- [109]
					138848, -- [110]
					138850, -- [111]
					138851, -- [112]
					139961, -- [113]
					141193, -- [114]
					141198, -- [115]
					141202, -- [116]
					141294, -- [117]
					144166, -- [118]
					144608, -- [119]
					144609, -- [120]
					145048, -- [121]
					146740, -- [122]
					147640, -- [123]
					148293, -- [124]
					148294, -- [125]
					149325, -- [126]
					149326, -- [127]
					150502, -- [128]
					153635, -- [129]
					154547, -- [130]
					154548, -- [131]
					154549, -- [132]
					154994, -- [133]
					155114, -- [134]
					155235, -- [135]
					156086, -- [136]
					158022, -- [137]
					160167, -- [138]
					160168, -- [139]
					163635, -- [140]
					165216, -- [141]
					166973, -- [142]
					166975, -- [143]
					168627, -- [144]
					168628, -- [145]
					172179, -- [146]
					175543, -- [147]
					181789, -- [148]
					181796, -- [149]
					181886, -- [150]
					182556, -- [151]
					184121, -- [152]
					184167, -- [153]
					184195, -- [154]
					184197, -- [155]
					184406, -- [156]
					184864, -- [157]
					184881, -- [158]
					184930, -- [159]
					188503, -- [160]
					190278, -- [161]
					190329, -- [162]
					191531, -- [163]
					191532, -- [164]
					191535, -- [165]
					191643, -- [166]
					194247, -- [167]
					194591, -- [168]
					194592, -- [169]
					194593, -- [170]
					198337, -- [171]
					198729, -- [172]
					199172, -- [173]
					199173, -- [174]
					199174, -- [175]
					199575, -- [176]
					201681, -- [177]
					203365, -- [178]
					203372, -- [179]
					203418, -- [180]
					206636, -- [181]
					212406, -- [182]
					215214, -- [183]
					215217, -- [184]
					215803, -- [185]
					215807, -- [186]
					218104, -- [187]
					218428, -- [188]
					220383, -- [189]
					220617, -- [190]
					221175, -- [191]
					221403, -- [192]
					224490, -- [193]
					224491, -- [194]
					224516, -- [195]
					228602, -- [196]
					228603, -- [197]
					229108, -- [198]
					232134, -- [199]
					232177, -- [200]
					232178, -- [201]
					233334, -- [202]
					233507, -- [203]
					233511, -- [204]
					235693, -- [205]
					236027, -- [206]
					236217, -- [207]
					236220, -- [208]
					236365, -- [209]
					236366, -- [210]
					236599, -- [211]
					240180, -- [212]
					242741, -- [213]
					243242, -- [214]
					244880, -- [215]
					246123, -- [216]
					246124, -- [217]
					246125, -- [218]
					248837, -- [219]
					248839, -- [220]
					249089, -- [221]
					249101, -- [222]
					251920, -- [223]
					252849, -- [224]
					253078, -- [225]
					255946, -- [226]
					256089, -- [227]
					256091, -- [228]
					256378, -- [229]
					256379, -- [230]
					260290, -- [231]
					260292, -- [232]
					260303, -- [233]
					260312, -- [234]
					261488, -- [235]
					265403, -- [236]
					271824, -- [237]
					272356, -- [238]
					275087, -- [239]
					275651, -- [240]
					281528, -- [241]
					281529, -- [242]
					282511, -- [243]
					283407, -- [244]
					283408, -- [245]
					287039, -- [246]
					292703, -- [247]
					293129, -- [248]
					293130, -- [249]
					297243, -- [250]
					299091, -- [251]
					300643, -- [252]
					301681, -- [253]
					301686, -- [254]
					304255, -- [255]
					304256, -- [256]
					305093, -- [257]
					308978, -- [258]
					308979, -- [259]
					312646, -- [260]
					313700, -- [261]
					313701, -- [262]
					314315, -- [263]
					319157, -- [264]
					320661, -- [265]
					320679, -- [266]
					321627, -- [267]
					321628, -- [268]
					323593, -- [269]
					328944, -- [270]
					328945, -- [271]
					329987, -- [272]
					334100, -- [273]
					338308, -- [274]
					339623, -- [275]
					340027, -- [276]
					340031, -- [277]
					341206, -- [278]
					341208, -- [279]
					341219, -- [280]
					341226, -- [281]
					341571, -- [282]
					342251, -- [283]
					342820, -- [284]
					343259, -- [285]
					344966, -- [286]
					357522, -- [287]
					357531, -- [288]
				},
				["blind"] = {
					2094, -- [1]
					21060, -- [2]
					34654, -- [3]
					34694, -- [4]
					42972, -- [5]
					43433, -- [6]
					65960, -- [7]
					127886, -- [8]
					175276, -- [9]
					178058, -- [10]
					214299, -- [11]
					257748, -- [12]
					285136, -- [13]
				},
				["condemned"] = {
					317491, -- [1]
				},
				["internal bleeding"] = {
					135345, -- [1]
					154904, -- [2]
					154953, -- [3]
					270343, -- [4]
				},
				["sinful revelation"] = {
					309623, -- [1]
					324260, -- [2]
				},
				["freezing trap"] = {
					3355, -- [1]
					27753, -- [2]
					31933, -- [3]
					32419, -- [4]
					37368, -- [5]
					41085, -- [6]
					43414, -- [7]
					43415, -- [8]
					43447, -- [9]
					43448, -- [10]
					44136, -- [11]
					55040, -- [12]
					153574, -- [13]
					173866, -- [14]
					187650, -- [15]
					187651, -- [16]
					203337, -- [17]
					204460, -- [18]
					212365, -- [19]
					240571, -- [20]
					240572, -- [21]
					240574, -- [22]
					278463, -- [23]
					278464, -- [24]
					278466, -- [25]
					278468, -- [26]
					321159, -- [27]
					321164, -- [28]
					321165, -- [29]
					321177, -- [30]
				},
				["nimble steps"] = {
					352366, -- [1]
					354050, -- [2]
					354051, -- [3]
					354052, -- [4]
				},
				["crusader aura"] = {
					32223, -- [1]
					225454, -- [2]
					328557, -- [3]
					344219, -- [4]
				},
				["crippling poison"] = {
					3408, -- [1]
					3409, -- [2]
					25809, -- [3]
					30981, -- [4]
					44289, -- [5]
					115196, -- [6]
					132747, -- [7]
					132748, -- [8]
					169622, -- [9]
					169623, -- [10]
					283648, -- [11]
					283649, -- [12]
				},
				["kidney shot"] = {
					408, -- [1]
					27615, -- [2]
					30621, -- [3]
					30832, -- [4]
					32864, -- [5]
					41389, -- [6]
					49616, -- [7]
					72335, -- [8]
					176050, -- [9]
					221792, -- [10]
					283661, -- [11]
					326697, -- [12]
					330469, -- [13]
				},
				["storm bolt"] = {
					20685, -- [1]
					55958, -- [2]
					61129, -- [3]
					61628, -- [4]
					73564, -- [5]
					84831, -- [6]
					91853, -- [7]
					107570, -- [8]
					132169, -- [9]
					133396, -- [10]
					133990, -- [11]
					139275, -- [12]
					222897, -- [13]
					259867, -- [14]
					259870, -- [15]
					317277, -- [16]
					348599, -- [17]
				},
				["scare beast"] = {
					1513, -- [1]
				},
				["music of bastion"] = {
					329289, -- [1]
					344873, -- [2]
					344893, -- [3]
					344894, -- [4]
					344895, -- [5]
					344896, -- [6]
					344897, -- [7]
					344912, -- [8]
				},
				["dire beast: hawk"] = {
					208652, -- [1]
					208679, -- [2]
					208684, -- [3]
					208819, -- [4]
					240698, -- [5]
				},
				["disable"] = {
					116095, -- [1]
					116706, -- [2]
					203543, -- [3]
					292785, -- [4]
					311672, -- [5]
					332145, -- [6]
					343731, -- [7]
					345358, -- [8]
					345360, -- [9]
					345362, -- [10]
				},
			},
			["transparency_behavior"] = 4,
			["ui_parent_scale_tune"] = 1.429999828338623,
			["hover_highlight_alpha"] = 0,
			["indicator_faction"] = false,
			["indicator_raidmark_scale"] = 0.7999999523162842,
			["cast_statusbar_spark_alpha"] = 0.7999999523162842,
			["aura2_y_offset"] = 40,
			["aura_consolidate"] = true,
			["aura_enabled"] = false,
			["indicator_raidmark_anchor"] = {
				["x"] = 0,
			},
			["aura_alpha"] = 1,
			["health_statusbar_bgtexture"] = "ElvUI Blank",
			["plate_config"] = {
				["player"] = {
					["spellpercent_text_enabled"] = false,
					["module_enabled"] = false,
					["spellpercent_text_outline"] = "NONE",
					["power_percent_text_outline"] = "NONE",
					["healthbar_enabled"] = false,
					["percent_text_outline"] = "NONE",
					["spellname_text_outline"] = "NONE",
					["percent_text_enabled"] = false,
				},
				["friendlyplayer"] = {
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["actorname_use_class_color"] = true,
					["big_actortitle_text_font"] = "Arial Narrow",
					["cast"] = {
						100, -- [1]
						5, -- [2]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
						["x"] = 0,
					},
					["percent_text_show_decimals"] = false,
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						100, -- [1]
						5, -- [2]
					},
					["click_through"] = false,
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_outline"] = "NONE",
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 4,
					},
					["level_text_font"] = "AvantGardeGothicLTMedium",
					["percent_text_color"] = {
						0.3843137254901961, -- [1]
						0.9019607843137255, -- [2]
						0.2470588235294118, -- [3]
					},
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Arial Narrow",
					["all_names"] = true,
					["level_text_anchor"] = {
						["y"] = 0.9000015258789062,
						["x"] = 2,
						["side"] = 6,
					},
					["big_actorname_text_size"] = 10,
					["spellname_text_font"] = "PT Sans Narrow",
					["actorname_text_outline"] = "NONE",
					["level_text_alpha"] = 0.5,
					["castbar_offset"] = 16,
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 9,
					["only_damaged"] = false,
					["buff_frame_y_offset"] = 0,
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["quest_enabled"] = true,
					["percent_text_enabled"] = true,
					["health_incombat"] = {
						50, -- [1]
						1, -- [2]
					},
					["actorname_use_friends_color"] = false,
					["spellname_text_size"] = 11,
					["health"] = {
						50, -- [1]
						1, -- [2]
					},
					["percent_text_outline"] = "NONE",
					["percent_text_font"] = "PT Sans Narrow Bold",
					["spellpercent_text_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = 1,
					},
					["spellpercent_text_size"] = 12,
				},
				["friendlynpc"] = {
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["quest_color"] = {
						0.5019607843137255, -- [1]
					},
					["big_actorname_text_font"] = "PT Sans Narrow Bold",
					["cast"] = {
						80, -- [1]
						5, -- [2]
					},
					["spellname_text_font"] = "PT Sans Narrow",
					["actorname_text_size"] = 9,
					["big_actortitle_text_size"] = 8,
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["percent_text_size"] = 6,
					["level_text_alpha"] = 0.5,
					["big_actorname_text_color"] = {
						0.3019607843137255, -- [1]
						0.7450980392156863, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "PT Sans Narrow Bold",
					["cast_incombat"] = {
						80, -- [1]
						5, -- [2]
					},
					["spellname_text_size"] = 11,
					["percent_text_outline"] = "NONE",
					["big_actorname_text_outline"] = "NONE",
					["actorname_text_anchor"] = {
						["y"] = 2,
					},
					["percent_text_enabled"] = true,
					["health_incombat"] = {
						50, -- [1]
						3, -- [2]
					},
					["health"] = {
						50, -- [1]
						3, -- [2]
					},
					["spellpercent_text_outline"] = "NONE",
					["big_actortitle_text_color"] = {
						0.8156862745098039, -- [1]
						0.6509803921568628, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["spellpercent_text_enabled"] = true,
					["level_text_font"] = "AvantGardeCTT",
					["big_actortitle_text_font"] = "AvantGardeGothicLTMedium",
				},
				["global_health_width"] = 100,
				["global_health_height"] = 12,
				["enemyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Accidental Presidency",
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 8,
					["only_thename"] = false,
					["cast"] = {
						100, -- [1]
						6, -- [2]
					},
					["spellpercent_text_size"] = 11,
					["big_actortitle_text_size"] = 10,
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
						["x"] = 2,
					},
					["percent_text_show_decimals"] = false,
					["cast_incombat"] = {
						100, -- [1]
						8, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = false,
					["spellpercent_text_outline"] = "NONE",
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 4,
					},
					["level_text_font"] = "AvantGardeGothicLTMedium",
					["percent_text_color"] = {
						0.3803921568627451, -- [1]
						0.9019607843137255, -- [2]
						0.2470588235294118, -- [3]
					},
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 10,
					["actorname_use_guild_color"] = true,
					["all_names"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0.9000015258789062,
						["x"] = 2,
						["side"] = 6,
					},
					["actorname_use_friends_color"] = true,
					["level_text_alpha"] = 0.5,
					["spellname_text_anchor"] = {
						["y"] = 0.5,
					},
					["percent_text_size"] = 10,
					["actorname_text_spacing"] = 9,
					["only_damaged"] = false,
					["spellname_text_font"] = "PT Sans Narrow",
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["percent_text_outline"] = "NONE",
					["percent_text_font"] = "PT Sans Narrow Bold",
					["spellname_text_size"] = 11,
					["percent_show_health"] = false,
					["health_incombat"] = {
						70, -- [1]
						5, -- [2]
					},
					["health"] = {
						70, -- [1]
						5, -- [2]
					},
					["quest_enabled"] = true,
					["spellpercent_text_enabled"] = false,
					["actorname_text_anchor"] = {
						["y"] = -1,
						["side"] = 8,
					},
					["castbar_offset"] = 19,
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["castbar_offset"] = 16,
					["spellpercent_text_font"] = "Accidental Presidency",
					["big_actortitle_text_font"] = "AvantGardeGothicLTMedium",
					["cast"] = {
						100, -- [1]
						5, -- [2]
					},
					["spellpercent_text_size"] = 10,
					["big_actortitle_text_size"] = 8,
					["spellpercent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["actorname_text_color"] = {
						nil, -- [1]
						0.4470588235294117, -- [2]
						0, -- [3]
					},
					["level_text_anchor"] = {
						["y"] = 0,
						["x"] = 12,
					},
					["cast_incombat"] = {
						100, -- [1]
						5, -- [2]
					},
					["spellpercent_text_outline"] = "NONE",
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 4,
					},
					["level_text_font"] = "AvantGardeGothicLTMedium",
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["actorname_text_font"] = "PT Sans Narrow Bold",
					["big_actorname_text_outline"] = "NONE",
					["actorname_text_size"] = 9,
					["big_actorname_text_font"] = "PT Sans Narrow Bold",
					["level_text_alpha"] = 0.75,
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "PT Sans Narrow Bold",
					["quest_color_enemy"] = {
						nil, -- [1]
						0, -- [2]
					},
					["percent_text_outline"] = "NONE",
					["spellname_text_anchor"] = {
						["y"] = 1,
					},
					["spellname_text_font"] = "PT Sans Narrow Bold",
					["percent_text_size"] = 13,
					["spellname_text_size"] = 11,
					["health"] = {
						50, -- [1]
						1, -- [2]
					},
					["percent_show_percent"] = false,
					["health_incombat"] = {
						50, -- [1]
						1, -- [2]
					},
					["percent_text_show_decimals"] = false,
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 8,
					},
					["level_text_enabled"] = false,
				},
			},
			["ui_parent_target_strata"] = "MEDIUM",
			["aura_y_offset"] = 18,
			["extra_icon_width"] = 28,
			["aura_show_enrage"] = true,
			["health_selection_overlay"] = "Armory",
			["health_statusbar_texture"] = "ElvUI Blank",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Hide Neutral Units"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 2,
			},
			["castbar_target_show"] = true,
			["focus_texture"] = "Armory",
			["cast_statusbar_bgcolor"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.5791031420230865, -- [4]
			},
			["extra_icon_caster_font"] = "PT Sans Narrow",
			["hide_blizzard_castbar"] = true,
			["border_thickness"] = 1.5,
			["aura_timer"] = false,
			["color_override"] = false,
			["focus_indicator_enabled"] = false,
			["resources_settings"] = {
				["chr"] = {
					["Player-3721-0A0137B3"] = "Chi",
					["Player-3725-0BD8C486"] = "ComboPoints",
					["Player-3725-0C0AFE1B"] = "HolyPower",
					["Player-3725-0BD8EAFD"] = "ArcaneCharges",
					["Player-3725-0AF5259A"] = "HolyPower",
					["Player-3725-087BEB8D"] = "HolyPower",
					["Player-3721-0BFAE71B"] = "HolyPower",
					["Player-3725-0C0B02F3"] = "HolyPower",
					["Player-3725-0B41D004"] = "ComboPoints",
					["Player-3721-0C00B948"] = "HolyPower",
					["Player-3725-061D5700"] = "ComboPoints",
					["Player-3725-0BE55D82"] = "ComboPoints",
					["Player-3721-0BF9D967"] = "HolyPower",
					["Player-3725-0B6345A9"] = "Chi",
					["Player-3725-0BF2B13B"] = "SoulShards",
					["Player-3725-0C01FF9F"] = "Chi",
					["Player-3721-0C08FC88"] = "HolyPower",
					["Player-3725-062B8F5A"] = "SoulShards",
					["Player-3725-0985EB87"] = "Chi",
				},
			},
			["castbar_target_text_size"] = 8,
			["captured_spells"] = {
				[324260] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[79962] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Dave the Quick",
					["npcID"] = 62913,
				},
				[212653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Zimari-Saurfang",
					["npcID"] = 0,
				},
				[1953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Blästi-Frostmourne",
					["npcID"] = 0,
				},
				[1715] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[307118] = {
					["source"] = "Milkýken-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[347600] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lagbugddosdc-Frostmourne",
					["npcID"] = 0,
				},
				[215607] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Darkges-Frostmourne",
					["npcID"] = 0,
				},
				[311406] = {
					["source"] = "Burnnr-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[356492] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[308899] = {
					["source"] = "Fineashes-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[354016] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lagbugddosdc-Frostmourne",
					["npcID"] = 0,
				},
				[307185] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[465] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Katanaofsw-Khaz'goroth",
					["npcID"] = 0,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ku-Jubei'Thos",
					["npcID"] = 0,
				},
				[345985] = {
					["source"] = "Drakanight-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[354018] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Basscannon-Frostmourne",
					["npcID"] = 0,
				},
				[352939] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[41635] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Qiss-Frostmourne",
					["npcID"] = 0,
				},
				[768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kyri-Gundrak",
					["npcID"] = 0,
				},
				[269279] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ku-Jubei'Thos",
					["npcID"] = 0,
				},
				[231390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Wiris-Frostmourne",
					["npcID"] = 0,
				},
				[227723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Shlippy-Aman'Thul",
					["npcID"] = 0,
				},
				[7384] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[262232] = {
					["source"] = "Xin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[148539] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186401] = {
					["source"] = "Kelsï-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[642] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Icepenguin-Nagrand",
					["npcID"] = 0,
				},
				[61781] = {
					["source"] = "Derpybank-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77489] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Qiss-Frostmourne",
					["npcID"] = 0,
				},
				[164273] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Milkýken-Nagrand",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[12294] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xin",
					["npcID"] = 0,
				},
				[154796] = {
					["source"] = "Kelsï-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lagbugddosdc-Frostmourne",
					["npcID"] = 0,
				},
				[21562] = {
					["source"] = "Dreàdzy-Frostmourne",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11426] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cxnnr-Barthilas",
					["npcID"] = 0,
				},
				[215598] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Darkges-Frostmourne",
					["npcID"] = 0,
				},
				[351913] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kàyleth-Aman'Thul",
					["npcID"] = 0,
				},
				[115804] = {
					["source"] = "Xin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Qiss-Frostmourne",
					["npcID"] = 0,
				},
				[353266] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Qiss-Frostmourne",
					["npcID"] = 0,
				},
				[307675] = {
					["source"] = "Ku-Jubei'Thos",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[139] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Qiss-Frostmourne",
					["npcID"] = 0,
				},
				[347901] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Demònix-Nagrand",
					["npcID"] = 0,
				},
				[307166] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lagbugddosdc-Frostmourne",
					["npcID"] = 0,
				},
				[2383] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Shlippy-Aman'Thul",
					["npcID"] = 0,
				},
				[307611] = {
					["source"] = "Klepa-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[284275] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Milkýken-Nagrand",
					["npcID"] = 0,
				},
				[195692] = {
					["source"] = "Derpybank-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[176277] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[354017] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Khaerzyn-Frostmourne",
					["npcID"] = 0,
				},
				[184362] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[108366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Scandria-Khaz'goroth",
					["npcID"] = 0,
				},
				[256374] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[105771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[86603] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gavin Marlsbury",
					["npcID"] = 61838,
				},
				[32216] = {
					["source"] = "Xin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Zimari-Saurfang",
					["npcID"] = 0,
				},
				[3408] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Swolabears",
					["npcID"] = 0,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Drakanight-Frostmourne",
					["npcID"] = 0,
				},
				[23881] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[315584] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xiaomeiren-Frostmourne",
					["npcID"] = 0,
				},
				[126664] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bankfix-Frostmourne",
					["npcID"] = 0,
				},
				[262115] = {
					["source"] = "Xin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32223] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Klepa-Frostmourne",
					["npcID"] = 0,
				},
				[2645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Immazapyou-Frostmourne",
					["npcID"] = 0,
				},
				[79849] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alyn Black",
					["npcID"] = 61834,
				},
				[357972] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Vilemaxim-Frostmourne",
					["npcID"] = 0,
				},
				[165961] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Angrychicken-Khaz'goroth",
					["npcID"] = 0,
				},
				[100] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2580] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Katanaofsw-Khaz'goroth",
					["npcID"] = 0,
				},
				[43308] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Katanaofsw-Khaz'goroth",
					["npcID"] = 0,
				},
				[260881] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Immazapyou-Frostmourne",
					["npcID"] = 0,
				},
				[85739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[1044] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Icepenguin-Nagrand",
					["npcID"] = 0,
				},
				[5487] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bryanlim-Frostmourne",
					["npcID"] = 0,
				},
				[245686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[369439] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Drakanight-Frostmourne",
					["npcID"] = 0,
				},
				[359731] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Synzinoth-Nagrand",
					["npcID"] = 0,
				},
				[338036] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Snekss-Frostmourne",
					["npcID"] = 0,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Urashh-Frostmourne",
					["npcID"] = 0,
				},
				[8679] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Swolabears",
					["npcID"] = 0,
				},
				[367405] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kratzer-Frostmourne",
					["npcID"] = 0,
				},
				[341260] = {
					["source"] = "Nyfika",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[355794] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Milkýken-Nagrand",
					["npcID"] = 0,
				},
				[65081] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Drakanight-Frostmourne",
					["npcID"] = 0,
				},
				[190831] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Brewberrý-Frostmourne",
					["npcID"] = 0,
				},
				[158486] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ku-Jubei'Thos",
					["npcID"] = 0,
				},
				[6788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Qiss-Frostmourne",
					["npcID"] = 0,
				},
				[332514] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Milkýken-Nagrand",
					["npcID"] = 0,
				},
				[190411] = {
					["source"] = "Kratzer-Frostmourne",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[25771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Icepenguin-Nagrand",
					["npcID"] = 0,
				},
				[26573] = {
					["source"] = "Icepenguin-Nagrand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
			},
			["aura_frame1_anchor"] = {
				["y"] = 18,
			},
			["indicator_scale"] = 0.7999999523162842,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["castbar_icon_show"] = false,
			["global_offset_y"] = -5,
			["aura_timer_text_font"] = "PT Sans Narrow",
			["ui_parent_cast_level"] = 1,
			["hide_friendly_castbars"] = true,
			["npc_colors"] = {
				[137484] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133436] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137516] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[135167] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[132532] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[127111] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137517] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[135263] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[136295] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[137486] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[130485] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[128969] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[134629] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134137] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[185683] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[125977] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[129366] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[136470] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[136186] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[139949] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134599] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133345] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[129367] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[185680] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136076] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[130661] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[137521] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[135235] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"MAGE", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[136934] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[141284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135204] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134331] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[139422] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134232] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[131585] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[137713] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134157] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[141285] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[127106] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[127757] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134364] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131586] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[132491] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[134158] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134174] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[185685] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[164464] = {
					true, -- [1]
					false, -- [2]
					"ROGUE", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[129369] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[130488] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[138255] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[135239] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[141283] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134251] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131858] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[137478] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133430] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[134144] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136214] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[129370] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137511] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[164451] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[135241] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[162689] = {
					true, -- [1]
					false, -- [2]
					"greenyellow", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136139] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[136353] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[131670] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[127315] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[133432] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[138465] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134417] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[126918] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[134338] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[131685] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[136549] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[128967] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[134418] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[134990] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[133593] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[133482] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[134514] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[134139] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[144071] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134012] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[135474] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[134600] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[135007] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136249] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134150] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
			},
			["aggro_modifies"] = {
				["health_bar_color"] = false,
			},
			["cast_statusbar_color"] = {
				0, -- [1]
				0.8313725490196078, -- [2]
				0.8470588235294118, -- [3]
				0.9600000008940697, -- [4]
			},
			["extra_icon_timer_font"] = "PT Sans Narrow",
			["transparency_behavior_on_friendlies"] = true,
			["not_affecting_combat_alpha"] = 1,
			["range_check_alpha"] = 1,
			["target_highlight"] = false,
			["extra_icon_stack_font"] = "PT Sans Narrow",
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
					[354050] = false,
				},
				["debuff_banned"] = {
					[132651] = false,
					[345546] = false,
					[5246] = false,
					[262304] = true,
					[115804] = false,
					[337046] = true,
					[356620] = false,
					[208684] = false,
					[190925] = false,
					[270343] = false,
					[2649] = false,
					[24394] = false,
					[34694] = false,
					[132169] = false,
					[339284] = false,
					[259277] = false,
					[317491] = false,
					[295277] = false,
					[345466] = false,
					[6770] = false,
					[408] = false,
					[217200] = false,
					[3355] = false,
					[105771] = false,
					[324260] = true,
				},
				["buff_banned"] = {
					[115804] = false,
					[259277] = false,
					[32223] = false,
					[329289] = false,
					[183435] = false,
					[19514] = false,
					[317920] = false,
					[465] = false,
				},
				["debuff_tracked"] = {
					[270339] = false,
					[1513] = false,
					[115804] = false,
					[257284] = false,
					[354050] = false,
					[116095] = false,
					[65815] = false,
					[106830] = false,
					[183218] = false,
					[5116] = false,
					[164812] = false,
					[271049] = false,
					[328547] = false,
					[5938] = false,
					[3408] = false,
					[155625] = false,
					[155722] = false,
					[270332] = false,
					[1715] = false,
					[259491] = false,
					[45524] = false,
					[1079] = false,
				},
			},
			["aura_height"] = 15,
			["health_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
			},
			["aura_padding"] = 2,
			["target_highlight_alpha"] = 1,
			["enable_masque_support"] = true,
			["target_indicator"] = "NONE",
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1641489747,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22044,
					["Enabled"] = false,
					["Revision"] = 353,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Key"] = "textureHeightMod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Height Mod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Prio"] = 99,
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "",
					["semver"] = "",
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1637897437,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22364,
					["Enabled"] = false,
					["Revision"] = 62,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Prio"] = 99,
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "Constructor",
					["semver"] = "",
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1655637022,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22384,
					["Enabled"] = false,
					["Revision"] = 365,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Prio"] = 99,
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Change Bar Color",
							["Value"] = true,
							["Key"] = "changeBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Change Border Color",
							["Value"] = false,
							["Key"] = "changeBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Reset Colors",
							["Value"] = true,
							["Key"] = "resetColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1637905483,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["Enabled"] = false,
					["Revision"] = 75,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LastHookEdited"] = "",
					["semver"] = "",
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1637897463,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 285,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Prio"] = 99,
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Options"] = {
					},
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1637906203,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Enabled"] = false,
					["Revision"] = 184,
					["Options"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Prio"] = 99,
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "Constructor",
					["semver"] = "",
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1637905486,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 100,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Prio"] = 99,
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "",
					["semver"] = "",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["version"] = -1,
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1637897403,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Enabled"] = false,
					["Revision"] = 190,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LastHookEdited"] = "",
					["semver"] = "",
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1637897417,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = -22076,
					["Enabled"] = false,
					["Revision"] = 360,
					["Options"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "Initialization",
					["semver"] = "",
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"green\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"green\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1637691632,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["Enabled"] = false,
					["Revision"] = 109,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Prio"] = 99,
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "Constructor",
					["semver"] = "",
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Player Logon"] = "function()\n    \n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    Plater.TargetIndicators  [\"EthricArrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow.tga]],\n        coords = {\n            {0, 0, 0, 0}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        width = 26, -- Change size\n        height = 26,\n        x = 17, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow2\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow3\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow4\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow4.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow5\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow5.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow6\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow6.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow7\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow7.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 14, -- Change size\n        height = 14,\n        x = 18, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow8\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow8.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 17, -- Change size\n        height = 17,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow9\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow9.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow10\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow10.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0, \n    }\n    \nend",
					},
					["Time"] = 1613401158,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/okQgj8zoy/5",
					["Icon"] = "INTERFACE\\ICONS\\70_inscription_vantus_rune_nightmare",
					["Enabled"] = false,
					["Revision"] = 18,
					["semver"] = "1.0.4",
					["Author"] = "Ethric-Twisting Nether",
					["Desc"] = "Target Arrows",
					["Prio"] = 99,
					["Name"] = "Ethric's Arrows",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Player Logon"] = "function()\n    \n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    Plater.TargetIndicators  [\"EthricArrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow.tga]],\n        coords = {\n            {0, 0, 0, 0}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        width = 26, -- Change size\n        height = 26,\n        x = 17, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow2\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow3\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow4\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow4.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow5\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow5.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow6\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow6.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow7\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow7.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 14, -- Change size\n        height = 14,\n        x = 18, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow8\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow8.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 17, -- Change size\n        height = 17,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow9\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow9.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow10\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow10.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0, \n    }\n    \nend",
					},
					["version"] = 5,
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateAlpha(unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    --if unitFrame.namePlateIsTarget then\n    envTable.updateAlpha(unitFrame)\n    --end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateAlpha(unitFrame)\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --setup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.7 --75% - unit and you in combat and unit not your target\n    envTable.AlphaTarget = 1.0 --100% - your target\n    envTable.AlphaFocus = 1.0 --100% - your focus target\n    envTable.AlphaNoTargetsOOC = 1.0 --100% - yourself out of combat and no targets\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\n    envTable.AlphaOOC = 1.0 --50% - out of combat units while you are in combat and not your target\n    envTable.AlphaCasting = 1.0 -- alpha for casting units\n    \n    envTable.useOutOfCombat = false -- take combat state into account\n    envTable.useOccluded = true -- take blizzard CVar nameplateOccludedAlphaMult into account\n    envTable.useCastingAlpha = true -- use alpha value for casting units in combat while you are in combat\n    envTable.useFocusAlpha = true -- use alpha value for your focus target\n    envTable.healthBarOnly = false-- only change alpha of healthBar elements\n    \n    \n    function envTable.updateAlpha(unitFrame)\n        local alphaFrame = unitFrame\n        if envTable.healthBarOnly then\n            alphaFrame = unitFrame.healthBar\n        end\n        if (unitFrame.IsSelf) then\n            alphaFrame:SetAlpha (envTable.AlphaPersonalBar)\n        elseif (unitFrame.IsFocus and envTable.useFocusAlpha) then\n            alphaFrame:SetAlpha (envTable.AlphaFocus)\n        else\n            local ocAlpha = unitFrame.PlateFrame:GetAlpha()\n            if (not Plater.PlayerCurrentTargetGUID) then -- no targets at all\n                if envTable.useOutOfCombat then\n                    if InCombatLockdown() then -- you are in combat\n                        if unitFrame.InCombat then -- unit in combat\n                            if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                                alphaFrame:SetAlpha (envTable.AlphaCasting)\n                            else\n                                alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                            end\n                        else -- unit not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                alphaFrame:SetAlpha (ocAlpha)\n                            else\n                                alphaFrame:SetAlpha (envTable.AlphaOOC)\n                            end\n                        end\n                    else -- not in combat\n                        if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                            alphaFrame:SetAlpha (ocAlpha)\n                        else\n                            alphaFrame:SetAlpha (envTable.AlphaNoTargetsOOC)\n                        end\n                    end\n                else -- don't use out of combat check\n                    if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                        alphaFrame:SetAlpha (envTable.AlphaCasting)\n                    elseif envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                        alphaFrame:SetAlpha (ocAlpha)\n                    else\n                        alphaFrame:SetAlpha (envTable.AlphaNoTargetsOOC)\n                    end\n                end\n            else -- you have a target\n                if (unitFrame.namePlateIsTarget) then\n                    alphaFrame:SetAlpha (envTable.AlphaTarget)\n                else -- not your target\n                    if envTable.useOutOfCombat then\n                        if InCombatLockdown() then -- you are in combat\n                            if unitFrame.InCombat then -- unit in combat\n                                if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                                    alphaFrame:SetAlpha (envTable.AlphaCasting)\n                                else\n                                    alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                                end\n                            else -- unit not in combat\n                                if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                    alphaFrame:SetAlpha (ocAlpha)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaOOC)\n                                end\n                            end\n                        else -- not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                                alphaFrame:SetAlpha (ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        end\n                    else -- don't use out of combat check\n                        if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                            alphaFrame:SetAlpha (envTable.AlphaCasting)\n                        elseif envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                            alphaFrame:SetAlpha (ocAlpha)\n                        else\n                            alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1655637024,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/pm6ay8sZb/10",
					["Icon"] = 132177,
					["Enabled"] = true,
					["Revision"] = 536,
					["semver"] = "1.0.9",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the transparency of nameplates that isn't your target. You might want to disable 'Use Range Check' in the General Settings tab when using this hook.",
					["Prio"] = 99,
					["Name"] = "No Target Alpha - MOD",
					["PlaterCore"] = 1,
					["version"] = 10,
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateAlpha(unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    --if unitFrame.namePlateIsTarget then\n    envTable.updateAlpha(unitFrame)\n    --end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --setup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.7 --75% - unit and you in combat and unit not your target\n    envTable.AlphaTarget = 1.0 --100% - your target\n    envTable.AlphaFocus = 1.0 --100% - your focus target\n    envTable.AlphaNoTargetsOOC = 1.0 --100% - yourself out of combat and no targets\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\n    envTable.AlphaOOC = 1.0 --50% - out of combat units while you are in combat and not your target\n    envTable.AlphaCasting = 1.0 -- alpha for casting units\n    \n    envTable.useOutOfCombat = false -- take combat state into account\n    envTable.useOccluded = true -- take blizzard CVar nameplateOccludedAlphaMult into account\n    envTable.useCastingAlpha = true -- use alpha value for casting units in combat while you are in combat\n    envTable.useFocusAlpha = true -- use alpha value for your focus target\n    envTable.healthBarOnly = false-- only change alpha of healthBar elements\n    \n    \n    function envTable.updateAlpha(unitFrame)\n        local alphaFrame = unitFrame\n        if envTable.healthBarOnly then\n            alphaFrame = unitFrame.healthBar\n        end\n        if (unitFrame.IsSelf) then\n            alphaFrame:SetAlpha (envTable.AlphaPersonalBar)\n        elseif (unitFrame.IsFocus and envTable.useFocusAlpha) then\n            alphaFrame:SetAlpha (envTable.AlphaFocus)\n        else\n            local ocAlpha = unitFrame.PlateFrame:GetAlpha()\n            if (not Plater.PlayerCurrentTargetGUID) then -- no targets at all\n                if envTable.useOutOfCombat then\n                    if InCombatLockdown() then -- you are in combat\n                        if unitFrame.InCombat then -- unit in combat\n                            if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                                alphaFrame:SetAlpha (envTable.AlphaCasting)\n                            else\n                                alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                            end\n                        else -- unit not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                alphaFrame:SetAlpha (ocAlpha)\n                            else\n                                alphaFrame:SetAlpha (envTable.AlphaOOC)\n                            end\n                        end\n                    else -- not in combat\n                        if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                            alphaFrame:SetAlpha (ocAlpha)\n                        else\n                            alphaFrame:SetAlpha (envTable.AlphaNoTargetsOOC)\n                        end\n                    end\n                else -- don't use out of combat check\n                    if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                        alphaFrame:SetAlpha (envTable.AlphaCasting)\n                    elseif envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                        alphaFrame:SetAlpha (ocAlpha)\n                    else\n                        alphaFrame:SetAlpha (envTable.AlphaNoTargetsOOC)\n                    end\n                end\n            else -- you have a target\n                if (unitFrame.namePlateIsTarget) then\n                    alphaFrame:SetAlpha (envTable.AlphaTarget)\n                else -- not your target\n                    if envTable.useOutOfCombat then\n                        if InCombatLockdown() then -- you are in combat\n                            if unitFrame.InCombat then -- unit in combat\n                                if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                                    alphaFrame:SetAlpha (envTable.AlphaCasting)\n                                else\n                                    alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                                end\n                            else -- unit not in combat\n                                if envTable.useOccluded and ocAlpha < envTable.AlphaOOC then\n                                    alphaFrame:SetAlpha (ocAlpha)\n                                else\n                                    alphaFrame:SetAlpha(envTable.AlphaOOC)\n                                end\n                            end\n                        else -- not in combat\n                            if envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                                alphaFrame:SetAlpha (ocAlpha)\n                            else\n                                alphaFrame:SetAlpha(envTable.AlphaIsNotTarget)\n                            end\n                        end\n                    else -- don't use out of combat check\n                        if envTable.useCastingAlpha and (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n                            alphaFrame:SetAlpha (envTable.AlphaCasting)\n                        elseif envTable.useOccluded and ocAlpha < envTable.AlphaIsNotTarget then\n                            alphaFrame:SetAlpha (ocAlpha)\n                        else\n                            alphaFrame:SetAlpha (envTable.AlphaIsNotTarget)\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateAlpha(unitFrame)\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)\nend\n\n\n",
						["Raid Target"] = "		function (self, unitId, unitFrame, envTable, modTable)\n			--insert code here\n			\n		end\n	",
					},
					["Options"] = {
					},
				}, -- [13]
				{
					["OptionsValues"] = {
						["rareEnabled"] = false,
						["t2Mobs"] = {
							0, -- [1]
							0.3411764705882353, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["targetEnabled"] = true,
						["ignoreTargetOnPlayers"] = true,
						["colorName"] = true,
						["raidMarkColors"] = false,
						["targetColor"] = {
							0.5882352941176471, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["t1Mobs"] = {
							0, -- [1]
							0.9764705882352941, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "Initialization",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = \"hotpink\", --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        [174773] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Spiteful\n        \n        \n        -- t3 mobs - light red\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        [177808] = modTable.config[\"t3Mobs\"],\n        \n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        [180336] = modTable.config[\"t1Mobs\"],\n        [177817] = modTable.config[\"t1Mobs\"],\n        [178141] = modTable.config[\"t1Mobs\"],\n        \n        \n        -- semi important - light blue\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n        [177816] = modTable.config[\"t2Mobs\"],\n        [180348] = modTable.config[\"t2Mobs\"],\n        [178171] = modTable.config[\"t2Mobs\"],\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
					},
					["Time"] = 1641818469,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/UKpo0_GbE/26",
					["Icon"] = -22053,
					["Enabled"] = true,
					["Revision"] = 785,
					["semver"] = "1.3.0",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Color the nameplates of important m+ mobs",
					["Prio"] = 99,
					["Name"] = "M+ Colored Mobs",
					["PlaterCore"] = 1,
					["version"] = 26,
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = \"hotpink\", --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        [174773] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Spiteful\n        \n        \n        -- t3 mobs - light red\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        [177808] = modTable.config[\"t3Mobs\"],\n        \n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        [180336] = modTable.config[\"t1Mobs\"],\n        [177817] = modTable.config[\"t1Mobs\"],\n        [178141] = modTable.config[\"t1Mobs\"],\n        \n        \n        -- semi important - light blue\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n        [177816] = modTable.config[\"t2Mobs\"],\n        [180348] = modTable.config[\"t2Mobs\"],\n        [178171] = modTable.config[\"t2Mobs\"],\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
						["Constructor"] = "		function (self, unitId, unitFrame, envTable, modTable)\n			--insert code here\n			\n		end\n	",
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "NPC Colors:",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "t1Mobs",
							["Value"] = {
								0, -- [1]
								0.086274509803922, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Most Important:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "t2Mobs",
							["Value"] = {
								0, -- [1]
								0.81960784313725, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Semi Important",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "t3Mobs",
							["Value"] = {
								1, -- [1]
								0.59607843137255, -- [2]
								0.51372549019608, -- [3]
								1, -- [4]
							},
							["Name"] = "Less Important:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "explosivesEnabled",
							["Value"] = true,
							["Name"] = "Color Explosives",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "explosivesColor",
							["Value"] = {
								1, -- [1]
								0.4, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Name"] = "Explosives Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option9",
							["Value"] = 0,
							["Name"] = "Option 9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "s4Enabled",
							["Value"] = true,
							["Name"] = "Color M+ Affix NPCs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "\"M+ Affix NPCs\"",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "s4Color",
							["Value"] = {
								1, -- [1]
								0.070588235294118, -- [2]
								0.56862745098039, -- [3]
								1, -- [4]
							},
							["Name"] = "M+ Affix NPCs Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "\"M+ Affix NPCs\"",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "targetEnabled",
							["Value"] = true,
							["Name"] = "Use Target Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 1,
							["Key"] = "targetColor",
							["Value"] = {
								0.27058823529412, -- [1]
								0.50980392156863, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Name"] = "Target Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 4,
							["Key"] = "ignoreTargetOnPlayers",
							["Value"] = false,
							["Name"] = "Ignore Target Color on Players",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "option21",
							["Value"] = 0,
							["Name"] = "Option 21",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "focusEnabled",
							["Value"] = true,
							["Name"] = "Use Focus Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "focusColor",
							["Value"] = {
								1, -- [1]
								0.49019607843137, -- [2]
								0.30980392156863, -- [3]
								1, -- [4]
							},
							["Name"] = "Focus Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 5,
							["Key"] = "option26",
							["Value"] = "Additional Options:",
							["Name"] = "Additional Options:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 4,
							["Key"] = "colorHealthbar",
							["Value"] = true,
							["Name"] = "Color Healthbar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 4,
							["Key"] = "colorName",
							["Value"] = false,
							["Name"] = "Color Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 4,
							["Key"] = "raidMarkColors",
							["Value"] = true,
							["Name"] = "Raid Mark Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 4,
							["Key"] = "threatColors",
							["Value"] = false,
							["Name"] = "Use Threat Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [22]
						{
							["Type"] = 4,
							["Key"] = "rareEnabled",
							["Value"] = true,
							["Name"] = "Color Rares",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [23]
					},
				}, -- [14]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    -- settings:\n    \n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.inspiringColor, --\"gold\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.1, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 3, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"inspiring\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    modTable.options2 = {\n        glowType = \"ants\",\n        color = modTable.config.inspiredColor, --\"lime\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1.25, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"inspired\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.showInspiring then\n        if Plater.UnitHasAura (unitFrame, 343502) then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        end\n    end\n    \n    if modTable.config.showInspired then\n        if Plater.UnitHasAura (unitFrame, \"Inspired\") then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options2)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options2.glowType, modTable.options2.key)\n        end\n    end\n    \n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options)\n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options2)\n    \nend",
					},
					["Time"] = 1655636978,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/erZiEOzxK/4",
					["Icon"] = 132096,
					["Enabled"] = true,
					["Revision"] = 366,
					["semver"] = "1.0.3",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Adds a glow to the health bar if the unit has Inspiring Presence.",
					["Prio"] = 99,
					["Name"] = "Inspiring Health Glow",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "showInspiring",
							["Value"] = true,
							["Name"] = "Glow Inspiring",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "inspiringColor",
							["Value"] = {
								1, -- [1]
								0.84313725490196, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Inspiring Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "showInspired",
							["Value"] = false,
							["Name"] = "Glow Inspired",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "inspiredColor",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Inspired Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    -- settings:\n    \n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.inspiringColor, --\"gold\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.1, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 3, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"inspiring\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    modTable.options2 = {\n        glowType = \"ants\",\n        color = modTable.config.inspiredColor, --\"lime\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1.25, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"inspired\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.showInspiring then\n        if Plater.UnitHasAura (unitFrame, 343502) then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        end\n    end\n    \n    if modTable.config.showInspired then\n        if Plater.UnitHasAura (unitFrame, \"Inspired\") then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options2)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options2.glowType, modTable.options2.key)\n        end\n    end\n    \n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options)\n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options2)\n    \nend",
					},
					["version"] = 4,
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --custom indicator options\n    --envTable.Texture = [[Interface\\AddOns\\Plater\\media\\cross_64]]\n    envTable.HealerTexture = [[Interface\\AddOns\\ElvUI\\Core\\Media\\Textures\\Healer]]\n    envTable.TankTexture = [[Interface\\AddOns\\ElvUI\\Core\\Media\\Textures\\Tank]]\n    envTable.Width = 15\n    envTable.Height = 15\n    \n    envTable.Anchor = {\n        side = 7, --topright\n        x = envTable.Width / 2, --x offset\n        y = -envTable.Width / 2, --y offset\n    }\n    \n    unitFrame.RoleTexture = unitFrame.RoleTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    unitFrame.RoleTexture.width = envTable.Width\n    unitFrame.RoleTexture.height = envTable.Height\n    Plater.SetAnchor (unitFrame.RoleTexture, envTable.Anchor)\n    \n    local myrealm = GetRealmName()\n    \n    local a1,a2 = '','[%s%-]'\n    local function ShortenRealm(realm)\n        return gsub(realm, a2, a1)\n    end\n    envTable.ShortenRealm = ShortenRealm\n    \n    local a3 = format('%%-%s', ShortenRealm(myrealm))\n    local function StripMyRealm(name)\n        return gsub(name, a3, a1)\n    end\n    \n    \n    local healerSpecIDs = {\n        65,      --Paladin Holy\n        105,    --Druid Restoration\n        256,    --Priest Discipline\n        257,    --Priest Holy\n        264,    --Shaman Restoration\n        270,    --Monk Mistweaver\n    }\n    \n    local tankSpecIDs = {\n        66,        --Paladin Protection\n        581,    --Demon Hunter Vengeance\n        104,    --Druid Guardian\n        268,    --Monk Brewmaster\n        73,     --Warrior Protection\n        250,    --Death Knight Blood\n    }\n    \n    local Healers, HealerSpecs = {}, {}\n    local Tanks, TankSpecs = {}, {}\n    envTable.Healers = Healers\n    envTable.Tanks = Tanks\n    \n    for _, specID in pairs(healerSpecIDs) do\n        local _, name = GetSpecializationInfoByID(specID)\n        if name and not HealerSpecs[name] then\n            HealerSpecs[name] = true\n        end\n    end\n    \n    for _, specID in pairs(tankSpecIDs) do\n        local _, name = GetSpecializationInfoByID(specID)\n        if name and not TankSpecs[name] then\n            TankSpecs[name] = true\n        end\n    end\n    \n    local function Event()\n        local _, instanceType = GetInstanceInfo()\n        if instanceType == 'pvp' or instanceType == 'arena' then\n            local numOpps = GetNumArenaOpponentSpecs()\n            if numOpps == 0 then\n                for i = 1, GetNumBattlefieldScores() do\n                    local name, _, _, _, _, _, _, _, _, _, _, _, _, _, _, talentSpec = GetBattlefieldScore(i)\n                    name = name and name ~= UNKNOWN and StripMyRealm(name)\n                    if name then\n                        if HealerSpecs[talentSpec] then\n                            Healers[name] = talentSpec\n                        elseif Healers[name] then\n                            Healers[name] = nil;\n                        end\n                        if TankSpecs[talentSpec] then\n                            Tanks[name] = talentSpec\n                        elseif Tanks[name] then\n                            Tanks[name] = nil;\n                        end\n                    end\n                end\n            elseif numOpps >= 1 then\n                for i = 1, numOpps do\n                    local name, realm = UnitName(format('arena%d', i))\n                    if name and name ~= UNKNOWN then\n                        realm = (realm and realm ~= '') and ShortenRealm(realm)\n                        if realm then name = name..'-'..realm end\n                        \n                        local s = GetArenaOpponentSpec(i)\n                        local _, talentSpec = nil, UNKNOWN\n                        \n                        if s and s > 0 then\n                            _, talentSpec = GetSpecializationInfoByID(s)\n                        end\n                        \n                        if talentSpec and talentSpec ~= UNKNOWN then\n                            if HealerSpecs[talentSpec] then\n                                Healers[name] = talentSpec\n                            end\n                            if TankSpecs[talentSpec] then\n                                Tanks[name] = talentSpec\n                            end\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \n    local function WipeTable()\n        wipe(Healers)\n        wipe(Tanks)\n    end\n    \n    local frame, events = CreateFrame(\"Frame\"), {};\n    function events:ARENA_OPPONENT_UPDATE(...)\n        Event()\n    end\n    function events:UPDATE_BATTLEFIELD_SCORE(...)\n        Event()\n    end\n    function events:PLAYER_ENTERING_WORLD(...)\n        WipeTable()\n    end\n    frame:SetScript(\"OnEvent\", function(self, event, ...)\n            events[event](self, ...); \n    end);\n    for k, v in pairs(events) do\n        frame:RegisterEvent(k); \n    end\n    \nend",
					},
					["Time"] = 1655636982,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/tgACZDSdQ/3",
					["Enabled"] = true,
					["Revision"] = 375,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "debug",
							["Value"] = false,
							["Name"] = "debug",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "@ PVP Role Icons",
					["PlaterCore"] = 1,
					["semver"] = "1.0.2",
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local Healers = envTable.Healers\n    local Tanks = envTable.Tanks\n    \n    unitFrame.RoleTexture:Hide()\n    \n    local _, instanceType = GetInstanceInfo()\n    if instanceType == 'pvp' or instanceType == 'arena' then\n        local name, realm = UnitName(self.unit)\n        realm = (realm and realm ~= '') and envTable.ShortenRealm(realm)\n        if realm then name = name..'-'..realm end\n        \n        if Healers[name] then\n            unitFrame.RoleTexture:Show()\n            unitFrame.RoleTexture.texture = envTable.HealerTexture\n        elseif Tanks[name] then\n            unitFrame.RoleTexture:Show()\n            unitFrame.RoleTexture.texture = envTable.TankTexture\n        end\n    end\n    \n    if modTable.config.debug then\n        unitFrame.RoleTexture:Show()\n        if math.random(2) == 1 then\n            unitFrame.RoleTexture.texture = envTable.HealerTexture\n        else\n            unitFrame.RoleTexture.texture = envTable.TankTexture\n        end\n    end\n    \nend",
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --custom indicator options\n    --envTable.Texture = [[Interface\\AddOns\\Plater\\media\\cross_64]]\n    envTable.HealerTexture = [[Interface\\AddOns\\ElvUI\\Core\\Media\\Textures\\Healer]]\n    envTable.TankTexture = [[Interface\\AddOns\\ElvUI\\Core\\Media\\Textures\\Tank]]\n    envTable.Width = 15\n    envTable.Height = 15\n    \n    envTable.Anchor = {\n        side = 7, --topright\n        x = envTable.Width / 2, --x offset\n        y = -envTable.Width / 2, --y offset\n    }\n    \n    unitFrame.RoleTexture = unitFrame.RoleTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    unitFrame.RoleTexture.width = envTable.Width\n    unitFrame.RoleTexture.height = envTable.Height\n    Plater.SetAnchor (unitFrame.RoleTexture, envTable.Anchor)\n    \n    local myrealm = GetRealmName()\n    \n    local a1,a2 = '','[%s%-]'\n    local function ShortenRealm(realm)\n        return gsub(realm, a2, a1)\n    end\n    envTable.ShortenRealm = ShortenRealm\n    \n    local a3 = format('%%-%s', ShortenRealm(myrealm))\n    local function StripMyRealm(name)\n        return gsub(name, a3, a1)\n    end\n    \n    \n    local healerSpecIDs = {\n        65,      --Paladin Holy\n        105,    --Druid Restoration\n        256,    --Priest Discipline\n        257,    --Priest Holy\n        264,    --Shaman Restoration\n        270,    --Monk Mistweaver\n    }\n    \n    local tankSpecIDs = {\n        66,        --Paladin Protection\n        581,    --Demon Hunter Vengeance\n        104,    --Druid Guardian\n        268,    --Monk Brewmaster\n        73,     --Warrior Protection\n        250,    --Death Knight Blood\n    }\n    \n    local Healers, HealerSpecs = {}, {}\n    local Tanks, TankSpecs = {}, {}\n    envTable.Healers = Healers\n    envTable.Tanks = Tanks\n    \n    for _, specID in pairs(healerSpecIDs) do\n        local _, name = GetSpecializationInfoByID(specID)\n        if name and not HealerSpecs[name] then\n            HealerSpecs[name] = true\n        end\n    end\n    \n    for _, specID in pairs(tankSpecIDs) do\n        local _, name = GetSpecializationInfoByID(specID)\n        if name and not TankSpecs[name] then\n            TankSpecs[name] = true\n        end\n    end\n    \n    local function Event()\n        local _, instanceType = GetInstanceInfo()\n        if instanceType == 'pvp' or instanceType == 'arena' then\n            local numOpps = GetNumArenaOpponentSpecs()\n            if numOpps == 0 then\n                for i = 1, GetNumBattlefieldScores() do\n                    local name, _, _, _, _, _, _, _, _, _, _, _, _, _, _, talentSpec = GetBattlefieldScore(i)\n                    name = name and name ~= UNKNOWN and StripMyRealm(name)\n                    if name then\n                        if HealerSpecs[talentSpec] then\n                            Healers[name] = talentSpec\n                        elseif Healers[name] then\n                            Healers[name] = nil;\n                        end\n                        if TankSpecs[talentSpec] then\n                            Tanks[name] = talentSpec\n                        elseif Tanks[name] then\n                            Tanks[name] = nil;\n                        end\n                    end\n                end\n            elseif numOpps >= 1 then\n                for i = 1, numOpps do\n                    local name, realm = UnitName(format('arena%d', i))\n                    if name and name ~= UNKNOWN then\n                        realm = (realm and realm ~= '') and ShortenRealm(realm)\n                        if realm then name = name..'-'..realm end\n                        \n                        local s = GetArenaOpponentSpec(i)\n                        local _, talentSpec = nil, UNKNOWN\n                        \n                        if s and s > 0 then\n                            _, talentSpec = GetSpecializationInfoByID(s)\n                        end\n                        \n                        if talentSpec and talentSpec ~= UNKNOWN then\n                            if HealerSpecs[talentSpec] then\n                                Healers[name] = talentSpec\n                            end\n                            if TankSpecs[talentSpec] then\n                                Tanks[name] = talentSpec\n                            end\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \n    local function WipeTable()\n        wipe(Healers)\n        wipe(Tanks)\n    end\n    \n    local frame, events = CreateFrame(\"Frame\"), {};\n    function events:ARENA_OPPONENT_UPDATE(...)\n        Event()\n    end\n    function events:UPDATE_BATTLEFIELD_SCORE(...)\n        Event()\n    end\n    function events:PLAYER_ENTERING_WORLD(...)\n        WipeTable()\n    end\n    frame:SetScript(\"OnEvent\", function(self, event, ...)\n            events[event](self, ...); \n    end);\n    for k, v in pairs(events) do\n        frame:RegisterEvent(k); \n    end\n    \nend",
					},
					["version"] = 3,
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.TIF:Hide()\n    \n    local texture\n    \n    if modTable.config.test then\n        texture = modTable.RandomTexture()\n    else\n        texture = modTable.units[unitFrame.namePlateNpcId]\n    end\n    \n    if not texture then return end\n    \n    unitFrame.TIF.t:SetTexture(texture)\n    unitFrame.TIF:Show()\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.units[unitFrame.namePlateNpcId] or modTable.config.test then\n        if modTable.config.changecolor then\n            Plater.SetNameplateColor (unitFrame, modTable.config.color)\n        end\n        if modTable.config.hidename then\n            unitFrame.healthBar.unitName:Hide()\n        end\n        if modTable.config.hidehp then\n            unitFrame.healthBar.lifePercent:Hide()\n        end\n        if modTable.config.hideauras then\n            unitFrame.BuffFrame:Hide()\n            unitFrame.BuffFrame2:Hide()\n        end\n    end\n    \nend\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.units = {\n        -- war\n        [119052] = GetSpellTexture(236320), -- War Banner\n        -- sham\n        [3527] = GetSpellTexture(5394), -- Healing Stream Totem\n        [5913] = GetSpellTexture(8143), -- Tremor Totem\n        [61245] = GetSpellTexture(192058), -- Capacitor Totem\n        [2630] = GetSpellTexture(2484), -- Earthbind Totem\n        [53006] = GetSpellTexture(98008), -- Spirit Link Totem\n        [59764] = GetSpellTexture(108280), -- Healing Tide Totem\n        [10467] = GetSpellTexture(16191), -- Mana Tide Totem\n        [6112] = GetSpellTexture(8512), -- Windfury Totem\n        [97369] = GetSpellTexture(192222), -- Liquid Magma Totem\n        [100943] = GetSpellTexture(198838), -- Earthen Wall Totem\n        [78001] = GetSpellTexture(157153), -- Cloudburst Totem\n        [104818] = GetSpellTexture(207399), -- Ancestral Protection Totem\n        [60561] = GetSpellTexture(51485), -- Earthgrab Totem\n        [105427] = GetSpellTexture(204330), -- Skyfury Totem\n        [5925] = GetSpellTexture(204336), -- Grounding Totem\n        [105451] = GetSpellTexture(204331), -- Counterstrike Totem\n        [97285] = GetSpellTexture(192077), -- Wind Rush Totem\n    }\n    \n    modTable.RandomTexture = function()\n        local random = random(17)\n        local i = 0\n        for k, v in pairs(modTable.units) do\n            i = i+1\n            if i == random then\n                return v\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.TIF then\n        -- create frame\n        local f = CreateFrame(\"Frame\", nil, unitFrame.healthBar.FrameOverlay)\n        f:SetFrameStrata(\"BACKGROUND\")\n        f:SetWidth(modTable.config.size)\n        f:SetHeight(modTable.config.size)\n        local t = f:CreateTexture(nil, \"BACKGROUND\")\n        t:SetAllPoints(f)\n        f.t = t\n        t:SetTexCoord(.08, .92, .08, .92)\n        f:SetPoint(\"BOTTOM\", unitFrame.healthBar.FrameOverlay, \"TOP\", 0, modTable.config.y)\n        f:Show() \n        unitFrame.TIF = f\n        -- create border\n        unitFrame.TIF.Border = CreateFrame(\n            \"Frame\", \n            nil, \n            f, \n            \"NamePlateFullBorderTemplate\"\n        )\n        unitFrame.TIF.Border:SetVertexColor(0, 0, 0)\n        unitFrame.TIF.Border:SetBorderSizes (0.5, 0.5, 0.5, 0.5)\n        unitFrame.TIF.Border:UpdateSizes()\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1655637024,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/LBLLVTl9f/4",
					["Enabled"] = true,
					["Revision"] = 718,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "test",
							["Value"] = false,
							["Name"] = "test mode",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "delim",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "size & positioning",
							["Name"] = "size and positioning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 256,
							["Desc"] = "",
							["Min"] = 32,
							["Key"] = "size",
							["Value"] = 50,
							["Name"] = "icon size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "anchor = topcenter",
							["Min"] = 0,
							["Key"] = "y",
							["Value"] = 5,
							["Name"] = "y offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "delim",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "plate color",
							["Name"] = "color options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "changecolor",
							["Value"] = true,
							["Name"] = "change color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "plate color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "delim",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "other",
							["Name"] = "other options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "hidename",
							["Value"] = true,
							["Name"] = "hide name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "hidehp",
							["Value"] = true,
							["Name"] = "hide health text",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 4,
							["Max"] = 256,
							["Desc"] = "",
							["Min"] = 32,
							["Key"] = "hideauras",
							["Value"] = 50,
							["Name"] = "hide auras",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Fraction"] = false,
						}, -- [14]
					},
					["Author"] = "Ретцер-Ревущий фьорд",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "PVP Totem Plates",
					["PlaterCore"] = 1,
					["semver"] = "1.0.3",
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.units[unitFrame.namePlateNpcId] or modTable.config.test then\n        if modTable.config.changecolor then\n            Plater.SetNameplateColor (unitFrame, modTable.config.color)\n        end\n        if modTable.config.hidename then\n            unitFrame.healthBar.unitName:Hide()\n        end\n        if modTable.config.hidehp then\n            unitFrame.healthBar.lifePercent:Hide()\n        end\n        if modTable.config.hideauras then\n            unitFrame.BuffFrame:Hide()\n            unitFrame.BuffFrame2:Hide()\n        end\n    end\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.TIF:Hide()\n    \n    local texture\n    \n    if modTable.config.test then\n        texture = modTable.RandomTexture()\n    else\n        texture = modTable.units[unitFrame.namePlateNpcId]\n    end\n    \n    if not texture then return end\n    \n    unitFrame.TIF.t:SetTexture(texture)\n    unitFrame.TIF:Show()\n    \nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.units = {\n        -- war\n        [119052] = GetSpellTexture(236320), -- War Banner\n        -- sham\n        [3527] = GetSpellTexture(5394), -- Healing Stream Totem\n        [5913] = GetSpellTexture(8143), -- Tremor Totem\n        [61245] = GetSpellTexture(192058), -- Capacitor Totem\n        [2630] = GetSpellTexture(2484), -- Earthbind Totem\n        [53006] = GetSpellTexture(98008), -- Spirit Link Totem\n        [59764] = GetSpellTexture(108280), -- Healing Tide Totem\n        [10467] = GetSpellTexture(16191), -- Mana Tide Totem\n        [6112] = GetSpellTexture(8512), -- Windfury Totem\n        [97369] = GetSpellTexture(192222), -- Liquid Magma Totem\n        [100943] = GetSpellTexture(198838), -- Earthen Wall Totem\n        [78001] = GetSpellTexture(157153), -- Cloudburst Totem\n        [104818] = GetSpellTexture(207399), -- Ancestral Protection Totem\n        [60561] = GetSpellTexture(51485), -- Earthgrab Totem\n        [105427] = GetSpellTexture(204330), -- Skyfury Totem\n        [5925] = GetSpellTexture(204336), -- Grounding Totem\n        [105451] = GetSpellTexture(204331), -- Counterstrike Totem\n        [97285] = GetSpellTexture(192077), -- Wind Rush Totem\n    }\n    \n    modTable.RandomTexture = function()\n        local random = random(17)\n        local i = 0\n        for k, v in pairs(modTable.units) do\n            i = i+1\n            if i == random then\n                return v\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.TIF then\n        -- create frame\n        local f = CreateFrame(\"Frame\", nil, unitFrame.healthBar.FrameOverlay)\n        f:SetFrameStrata(\"BACKGROUND\")\n        f:SetWidth(modTable.config.size)\n        f:SetHeight(modTable.config.size)\n        local t = f:CreateTexture(nil, \"BACKGROUND\")\n        t:SetAllPoints(f)\n        f.t = t\n        t:SetTexCoord(.08, .92, .08, .92)\n        f:SetPoint(\"BOTTOM\", unitFrame.healthBar.FrameOverlay, \"TOP\", 0, modTable.config.y)\n        f:Show() \n        unitFrame.TIF = f\n        -- create border\n        unitFrame.TIF.Border = CreateFrame(\n            \"Frame\", \n            nil, \n            f, \n            \"NamePlateFullBorderTemplate\"\n        )\n        unitFrame.TIF.Border:SetVertexColor(0, 0, 0)\n        unitFrame.TIF.Border:SetBorderSizes (0.5, 0.5, 0.5, 0.5)\n        unitFrame.TIF.Border:UpdateSizes()\n    end\n    \nend\n\n\n",
					},
					["version"] = 4,
				}, -- [17]
				{
					["OptionsValues"] = {
						["crowdControlSpells"] = {
							{
								"323673", -- [1]
								"mindgames", -- [2]
							}, -- [1]
							{
								"15487", -- [1]
								"silence", -- [2]
							}, -- [2]
							{
								"31935", -- [1]
								"avengers shield", -- [2]
							}, -- [3]
							{
								"305485", -- [1]
								"lightning lasso", -- [2]
							}, -- [4]
							{
								"236077", -- [1]
								"disarm", -- [2]
							}, -- [5]
						},
						["defensiveSpells"] = {
							{
								"125174", -- [1]
								"touch of karma", -- [2]
							}, -- [1]
							{
								"212295", -- [1]
								"nether ward", -- [2]
							}, -- [2]
							{
								"213602", -- [1]
								"greater fade", -- [2]
							}, -- [3]
							{
								"210294", -- [1]
								"divine favor", -- [2]
							}, -- [4]
							{
								"23920", -- [1]
								"spell reflect", -- [2]
							}, -- [5]
							{
								"330279", -- [1]
								"overwatch (spell reflect)", -- [2]
							}, -- [6]
							{
								"305497", -- [1]
								"thorns", -- [2]
							}, -- [7]
							{
								"1044", -- [1]
								"freedom", -- [2]
							}, -- [8]
							{
								"110909", -- [1]
								"alter time", -- [2]
							}, -- [9]
							{
								"6940", -- [1]
								"sacrifice 30%", -- [2]
							}, -- [10]
							{
								"199448", -- [1]
								"sacrifice 100%", -- [2]
							}, -- [11]
						},
						["offensiveSpells"] = {
							{
								"315443", -- [1]
								"abomination limb", -- [2]
							}, -- [1]
							{
								"51271", -- [1]
								"pillars of frost", -- [2]
							}, -- [2]
							{
								"185422", -- [1]
								"shadow dance", -- [2]
							}, -- [3]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    modTable.resize = function(aura, scale)\n        local expectedW = math.floor(Plater.db.profile.aura_width * scale + 0.5)\n        local expectedH = math.floor(Plater.db.profile.aura_height * scale + 0.5)\n        local W, H = aura:GetSize()\n        local currentW = math.floor(W + 0.5)\n        local currentH = math.floor(W + 0.5)\n        \n        if not (currentW == expectedW) or not (currentW == expectedW) then\n            aura:SetSize (expectedW, expectedH)\n            aura.Icon:SetSize (expectedW-2, expectedH-2)\n            return true\n        end\n        return false\n    end \n    \n    local mergeTable = function(customTable, detailsTable)\n        local merged = {}\n        for k,v in pairs(customTable) do\n            merged[tonumber(k)] = v \n        end\n        for k,v in pairs(detailsTable) do\n            merged[k] = v \n        end\n        return merged\n    end\n    \n    modTable.allCrowdControlSpells = mergeTable(\n        modTable.config.crowdControlSpells, \n        DetailsFramework.CrowdControlSpells\n    )\n    modTable.allDefensiveSpells = mergeTable(\n        modTable.config.defensiveSpells, \n        DetailsFramework.CooldownsAllDeffensive\n    )\n    modTable.allOffensiveSpells = mergeTable(\n        modTable.config.offensiveSpells, \n        DetailsFramework.CooldownsAttack\n    )\n    \n    -- ViragDevTool_AddData(modTable, \"lucy plate buffs modtable\")\nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local cc  = modTable.allCrowdControlSpells\n    local defensives = modTable.allDefensiveSpells\n    local offensives = modTable.allOffensiveSpells\n    \n    local resize = modTable.resize\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    local didResize = false\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for _, auraIcon in ipairs (auraContainer) do\n            if auraIcon:IsShown() then\n                local id = auraIcon.SpellId\n                \n                if defensives[id] then\n                    if resize(auraIcon, modTable.config.defensiveScale) then\n                        didResize = true    \n                    end\n                elseif offensives[id] then\n                    if resize(auraIcon, modTable.config.offensiveScale) then\n                        didResize = true \n                    end\n                elseif cc[id] then\n                    if resize(auraIcon, modTable.config.ccScale) then\n                        didResize = true    \n                    end\n                elseif auraIcon.CanStealOrPurge then\n                    if resize(auraIcon, modTable.config.purgeableScale) then\n                        didResize = true    \n                    end\n                else\n                    if resize(auraIcon, 1) then\n                        didResize = true\n                    end\n                end\n            end\n        end\n    end\n    \n    if Plater.Masque and didResize then\n        Plater.Masque.AuraFrame1:ReSkin()\n        Plater.Masque.AuraFrame2:ReSkin()\n    end\n    \nend",
					},
					["Time"] = 1655636991,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/S8uK6Ls6Z/17",
					["Icon"] = 132311,
					["Enabled"] = true,
					["Revision"] = 785,
					["semver"] = "1.0.16",
					["Author"] = "Lucyón-Bloodfeather",
					["Desc"] = "A mod that imitates flyPlateBuffs. Resize aura icons by the type of aura they are; crowd control, offensive buff, defensive buff or purgable/stealable",
					["Prio"] = 99,
					["Name"] = "@ 1.0.13 Lucy Plate Buffs",
					["PlaterCore"] = 1,
					["version"] = 17,
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    modTable.resize = function(aura, scale)\n        local expectedW = math.floor(Plater.db.profile.aura_width * scale + 0.5)\n        local expectedH = math.floor(Plater.db.profile.aura_height * scale + 0.5)\n        local W, H = aura:GetSize()\n        local currentW = math.floor(W + 0.5)\n        local currentH = math.floor(W + 0.5)\n        \n        if not (currentW == expectedW) or not (currentW == expectedW) then\n            aura:SetSize (expectedW, expectedH)\n            aura.Icon:SetSize (expectedW-2, expectedH-2)\n            return true\n        end\n        return false\n    end \n    \n    local mergeTable = function(customTable, detailsTable)\n        local merged = {}\n        for k,v in pairs(customTable) do\n            merged[tonumber(k)] = v \n        end\n        for k,v in pairs(detailsTable) do\n            merged[k] = v \n        end\n        return merged\n    end\n    \n    modTable.allCrowdControlSpells = mergeTable(\n        modTable.config.crowdControlSpells, \n        DetailsFramework.CrowdControlSpells\n    )\n    modTable.allDefensiveSpells = mergeTable(\n        modTable.config.defensiveSpells, \n        DetailsFramework.CooldownsAllDeffensive\n    )\n    modTable.allOffensiveSpells = mergeTable(\n        modTable.config.offensiveSpells, \n        DetailsFramework.CooldownsAttack\n    )\n    \n    -- ViragDevTool_AddData(modTable, \"lucy plate buffs modtable\")\nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local cc  = modTable.allCrowdControlSpells\n    local defensives = modTable.allDefensiveSpells\n    local offensives = modTable.allOffensiveSpells\n    \n    local resize = modTable.resize\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    local didResize = false\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for _, auraIcon in ipairs (auraContainer) do\n            if auraIcon:IsShown() then\n                local id = auraIcon.SpellId\n                \n                if defensives[id] then\n                    if resize(auraIcon, modTable.config.defensiveScale) then\n                        didResize = true    \n                    end\n                elseif offensives[id] then\n                    if resize(auraIcon, modTable.config.offensiveScale) then\n                        didResize = true \n                    end\n                elseif cc[id] then\n                    if resize(auraIcon, modTable.config.ccScale) then\n                        didResize = true    \n                    end\n                elseif auraIcon.CanStealOrPurge then\n                    if resize(auraIcon, modTable.config.purgeableScale) then\n                        didResize = true    \n                    end\n                else\n                    if resize(auraIcon, 1) then\n                        didResize = true\n                    end\n                end\n            end\n        end\n    end\n    \n    if Plater.Masque and didResize then\n        Plater.Masque.AuraFrame1:ReSkin()\n        Plater.Masque.AuraFrame2:ReSkin()\n    end\n    \nend",
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Note for @scriptname to work as intended:",
							["Name"] = "Note",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "In Buff Special DISABLE all \"Auto Add these types of Auras\"",
							["Name"] = "Note2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "In Buff Settings ENABLE CC/Offensive/Defensive/Purgable",
							["Name"] = "Note3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "@scriptname scaling options:",
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of crowd control aura icons",
							["Min"] = 0,
							["Key"] = "ccScale",
							["Value"] = 1.4,
							["Name"] = "Crowd Control",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of offensive buff icons",
							["Min"] = 0,
							["Key"] = "offensiveScale",
							["Value"] = 1.3,
							["Name"] = "Offensive Buffs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of defensive buff icons",
							["Min"] = 0,
							["Key"] = "defensiveScale",
							["Value"] = 1.3,
							["Name"] = "Defensive Buffs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "The scale of buffs that can be purged/stolen",
							["Min"] = 0,
							["Key"] = "purgeableScale",
							["Value"] = 1,
							["Name"] = "Purgeable / Stealable",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "crowdControlSpells",
							["Value"] = {
								{
									"323673", -- [1]
									"mindgames", -- [2]
								}, -- [1]
								{
									"15487", -- [1]
									"silence", -- [2]
								}, -- [2]
								{
									"31935", -- [1]
									"avengers shield", -- [2]
								}, -- [3]
								{
									"305485", -- [1]
									"lightning lasso", -- [2]
								}, -- [4]
								{
									"236077", -- [1]
									"disarm", -- [2]
								}, -- [5]
							},
							["Name"] = "CCs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 7,
							["Key"] = "defensiveSpells",
							["Value"] = {
								{
									"125174", -- [1]
									"touch of karma", -- [2]
								}, -- [1]
								{
									"212295", -- [1]
									"nether ward", -- [2]
								}, -- [2]
								{
									"213602", -- [1]
									"greater fade", -- [2]
								}, -- [3]
								{
									"210294", -- [1]
									"divine favor", -- [2]
								}, -- [4]
								{
									"23920", -- [1]
									"spell reflect", -- [2]
								}, -- [5]
								{
									"330279", -- [1]
									"overwatch (spell reflect)", -- [2]
								}, -- [6]
								{
									"305497", -- [1]
									"thorns", -- [2]
								}, -- [7]
								{
									"1044", -- [1]
									"freedom", -- [2]
								}, -- [8]
								{
									"110909", -- [1]
									"alter time", -- [2]
								}, -- [9]
								{
									"6940", -- [1]
									"sacrifice 30%", -- [2]
								}, -- [10]
								{
									"199448", -- [1]
									"sacrifice 100%", -- [2]
								}, -- [11]
							},
							["Name"] = "Defensive Buffs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 7,
							["Key"] = "offensiveSpells",
							["Value"] = {
								{
									"315443", -- [1]
									"abomination limb", -- [2]
								}, -- [1]
								{
									"51271", -- [1]
									"pillars of frost", -- [2]
								}, -- [2]
								{
									"185422", -- [1]
									"shadow dance", -- [2]
								}, -- [3]
							},
							["Name"] = "Offensive Buffs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [14]
					},
				}, -- [18]
				{
					["OptionsValues"] = {
						["glowColor"] = {
							0.03137254901960784, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["x"] = 0.3499999940395355,
						["texPath"] = "Interface\\AddOns\\SharedMedia_Senjitsu\\texture\\Circle_Smooth2",
						["y"] = 0.5999999642372131,
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.CreateHoverHighlight(unitFrame)\nend",
						["Initialization"] = "function (modTable)\n    -- adding show for the glow frame to EnableHighlight\n    function Plater.EnableHighlight (unitFrame)\n        unitFrame.HighlightFrame:Show()\n        unitFrame.HighlightFrame.HighlightTexture:Show()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Show() end\n        \n        unitFrame.HighlightFrame.unit = unitFrame.namePlateUnitToken\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", Plater.CheckHighlight)\n    end\n    \n    -- adding hide for the glow frame to DisableHighlight\n    function Plater.DisableHighlight (unitFrame)\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", nil)\n        unitFrame.HighlightFrame:Hide()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Hide() end\n        unitFrame.HighlightFrame.HighlightTexture:Hide()\n    end\n    \n    -- adding hide/show for the glow frame to CheckHighlight\n    function Plater.CheckHighlight (self)\n        if UnitIsUnit(\"mouseover\", self.unit) and not UnitIsUnit(\"target\", self.unit) then\n            self.HighlightTexture:Show()\n            if self.glow then self.glow:Show() end\n        else\n            self.HighlightTexture:Hide()\n            if self.glow then self.glow:Hide() end\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- texture path for the glow\n    local texture = modTable.config.texPath\n    -- color of the glow { red, green, blue, alpha }\n    local color = modTable.config.glowColor\n    -- texture width/height modifier\n    -- range from 0-1 (0.01 is 1%, 0.1 is 10%, 1 is 100% of the healthbar size)\n    local x = modTable.config.x\n    local y = modTable.config.y\n    \n    function envTable.CreateHoverHighlight(unitFrame)\n        local unit = unitFrame\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local glow = unit.healthBar:CreateTexture(nil, \"background\", nil, -8)\n        glow:SetTexture(texture)\n        glow:SetBlendMode(\"ADD\")\n        glow:SetVertexColor(unpack(color))\n        glow:Hide()\n        unit.HighlightFrame.glow = glow\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local PixelUtil = PixelUtil or DFPixelUtil\n        local widthOs = unit.healthBar:GetWidth() * x\n        local heightOs = unit.healthBar:GetHeight() * y\n        local hover = unit.HighlightFrame.glow\n        hover:ClearAllPoints()\n        PixelUtil.SetPoint(hover, \"topleft\", unit.healthBar, \"topleft\", -widthOs, heightOs)\n        PixelUtil.SetPoint(hover, \"bottomright\", unit.healthBar, \"bottomright\", widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"bottomleft\", unit.healthBar, \"bottomleft\", -widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"topright\", unit.healthBar, \"topright\", widthOs, heightOs)\n    end\nend\n\n\n",
					},
					["Time"] = 1655637056,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/NbSpkcICY/3",
					["Icon"] = 1397641,
					["Enabled"] = true,
					["Revision"] = 396,
					["semver"] = "1.0.2",
					["Author"] = "Viciouwu-Tarren Mill",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Mouseover Highlight Glow",
					["PlaterCore"] = 1,
					["version"] = 3,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.CreateHoverHighlight(unitFrame)\nend",
						["Initialization"] = "function (modTable)\n    -- adding show for the glow frame to EnableHighlight\n    function Plater.EnableHighlight (unitFrame)\n        unitFrame.HighlightFrame:Show()\n        unitFrame.HighlightFrame.HighlightTexture:Show()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Show() end\n        \n        unitFrame.HighlightFrame.unit = unitFrame.namePlateUnitToken\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", Plater.CheckHighlight)\n    end\n    \n    -- adding hide for the glow frame to DisableHighlight\n    function Plater.DisableHighlight (unitFrame)\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", nil)\n        unitFrame.HighlightFrame:Hide()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Hide() end\n        unitFrame.HighlightFrame.HighlightTexture:Hide()\n    end\n    \n    -- adding hide/show for the glow frame to CheckHighlight\n    function Plater.CheckHighlight (self)\n        if UnitIsUnit(\"mouseover\", self.unit) and not UnitIsUnit(\"target\", self.unit) then\n            self.HighlightTexture:Show()\n            if self.glow then self.glow:Show() end\n        else\n            self.HighlightTexture:Hide()\n            if self.glow then self.glow:Hide() end\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- texture path for the glow\n    local texture = modTable.config.texPath\n    -- color of the glow { red, green, blue, alpha }\n    local color = modTable.config.glowColor\n    -- texture width/height modifier\n    -- range from 0-1 (0.01 is 1%, 0.1 is 10%, 1 is 100% of the healthbar size)\n    local x = modTable.config.x\n    local y = modTable.config.y\n    \n    function envTable.CreateHoverHighlight(unitFrame)\n        local unit = unitFrame\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local glow = unit.healthBar:CreateTexture(nil, \"background\", nil, -8)\n        glow:SetTexture(texture)\n        glow:SetBlendMode(\"ADD\")\n        glow:SetVertexColor(unpack(color))\n        glow:Hide()\n        unit.HighlightFrame.glow = glow\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local PixelUtil = PixelUtil or DFPixelUtil\n        local widthOs = unit.healthBar:GetWidth() * x\n        local heightOs = unit.healthBar:GetHeight() * y\n        local hover = unit.HighlightFrame.glow\n        hover:ClearAllPoints()\n        PixelUtil.SetPoint(hover, \"topleft\", unit.healthBar, \"topleft\", -widthOs, heightOs)\n        PixelUtil.SetPoint(hover, \"bottomright\", unit.healthBar, \"bottomright\", widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"bottomleft\", unit.healthBar, \"bottomleft\", -widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"topright\", unit.healthBar, \"topright\", widthOs, heightOs)\n    end\nend\n\n\n",
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "MOUSEOVER HIGHLIGHT OPTIONS:",
							["Name"] = "Title",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set color of the highlight texture.",
						}, -- [2]
						{
							["Type"] = 3,
							["Key"] = "texPath",
							["Value"] = "Interface/ICONS/GlowNameplate",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set texture path of the highlight texture.",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "SCALING MODIFIERS FOR WIDTH AND HEIGHT:",
							["Name"] = "Size scaling",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Width/height modifiers are based on percentage of healthbar size. Range from 0-1  (0.15 is 15%, 1 is 100% of the healthbar size).",
							["Name"] = "Size scaling",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Set width of highlight texture (resizes texture horizontally).",
							["Name"] = "X modifier",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "x",
							["Value"] = 0.25,
							["Name"] = "X modifier",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Set height of highlight texture (resizes texture vertically).",
							["Name"] = "Y modifier",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "y",
							["Value"] = 0.5,
							["Name"] = "Y modifier",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "SAVE.",
							["Name"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "RELOAD UI AFTER SAVING CHANGES.",
							["Name"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
					},
				}, -- [19]
			},
			["bossmod_icons_anchor"] = {
				["y"] = 0,
			},
			["auto_toggle_stacking_enabled"] = true,
			["aura_width2"] = 30,
			["extra_icon_anchor"] = {
				["y"] = 30,
				["x"] = 0,
				["side"] = 8,
			},
			["aura_show_buff_by_the_unit"] = false,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.3000000715256",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateOverlapH"] = "0.79999995231628",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.15",
				["nameplateShowFriends"] = "1",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.09",
				["nameplateOtherAtBase"] = "0",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateShowEnemyTotems"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowDebuffsOnFriendly"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateLargeTopInset"] = "0.085",
				["nameplateShowOnlyNames"] = "0",
			},
			["target_highlight_color"] = {
				nil, -- [1]
				1, -- [2]
				0, -- [3]
			},
			["script_auto_imported"] = {
				["Unit - Important"] = 11,
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Very Important"] = 12,
				["Explosion Affix M+"] = 11,
				["Aura - Debuff Alert"] = 11,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 11,
				["Cast - Big Alert"] = 12,
				["Cast - Small Alert"] = 11,
				["Fixate On You"] = 11,
				["Auto Set Skull"] = 11,
				["Cast - Important Target [P]"] = 1,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Cast - Alert + Timer [P]"] = 2,
				["Countdown"] = 11,
				["Unit - Health Markers"] = 12,
				["Cast - Frontal Cone"] = 11,
				["Fixate"] = 11,
				["Cast - Tank Interrupt"] = 12,
				["Aura - Buff Alert"] = 13,
				["Spiteful Affix"] = 3,
				["Unit - Show Energy"] = 11,
			},
			["aura_stack_font"] = "PT Sans Narrow",
			["aura_width"] = 20,
			["aura_height2"] = 30,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["target_highlight_height"] = 12,
			["aura_show_crowdcontrol"] = true,
			["health_cutoff"] = false,
			["login_counter"] = 12145,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				60, -- [1]
			},
			["range_check_enabled"] = false,
			["aura_border_colors"] = {
				["is_show_all"] = {
					0.7019607843137254, -- [1]
					0.1019607843137255, -- [2]
					0.1019607843137255, -- [3]
				},
			},
			["ui_parent_cast_strata"] = "LOW",
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["UID"] = "0x62b2b413134e497",
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1655878675,
					["Temp_ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 1,
					["Options"] = {
					},
					["__TrashAt"] = 1655878683,
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Author"] = "Senjitsu-Frostmourne",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "",
					["OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Name"] = "New Script",
					["ScriptType"] = 1,
					["Icon"] = "",
				}, -- [1]
			},
			["castbar_target_anchor"] = {
				["side"] = 6,
				["x"] = 2,
			},
			["quick_hide"] = true,
			["widget_bar_anchor"] = {
				["side"] = 8,
			},
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local DungeonTools = MDT or MethodDungeonTools\n        if DungeonTools ~= nil and DungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming, teemingCount = DungeonTools:GetEnemyForces(npcId)\n            if (teemingCount and isTeeming) or not count then\n                count = teemingCount\n            end\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend",
					},
					["__TrashAt"] = 1655895980,
					["Time"] = 1655879002,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/M8ejNxoo_/10",
					["Icon"] = 254292,
					["Enabled"] = true,
					["Revision"] = 191,
					["semver"] = "1.0.9",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Shows the m+ mob percentage on the nameplate. REQUIRES MDT \"Method Dungeon Tools\" TO WORK!",
					["Prio"] = 99,
					["Name"] = "M+ MDT MobPercentage",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local DungeonTools = MDT or MethodDungeonTools\n        if DungeonTools ~= nil and DungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming, teemingCount = DungeonTools:GetEnemyForces(npcId)\n            if (teemingCount and isTeeming) or not count then\n                count = teemingCount\n            end\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend",
					},
					["version"] = 10,
				}, -- [1]
			},
			["patch_version"] = 19,
			["no_spellname_length_limit"] = true,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 13,
			["extra_icon_wide_icon"] = false,
			["extra_icon_timer_size"] = 18,
			["number_region_first_run"] = true,
			["cast_statusbar_bgtexture"] = "ElvUI Blank",
			["health_animation_time_dilatation"] = 2.599999904632568,
			["resources"] = {
				["scale"] = 0.7999999523162842,
			},
			["click_space"] = {
				120, -- [1]
			},
			["health_selection_overlay_alpha"] = 0,
			["castbar_target_font"] = "AvantGardeGothicLTMedium",
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["castbar_target_outline"] = "NONE",
			["focus_color"] = {
				1, -- [1]
				0.5254901960784314, -- [2]
				0.5490196078431373, -- [3]
				1, -- [4]
			},
			["spell_animation_list"] = {
				[20243] = {
					{
						["fade_in"] = 0.009999999776482582,
						["fade_out"] = 0.01999999955296516,
						["scaleX"] = 0.09999847412109375,
						["duration"] = 0.1200000047683716,
					}, -- [1]
				},
				[52174] = {
					{
						["scale_upY"] = 1.149999976158142,
						["scale_upX"] = 1.149999976158142,
						["duration"] = 0.07999999821186066,
						["scale_downX"] = 0.7999999523162842,
						["scale_downY"] = 0.7999999523162842,
					}, -- [1]
				},
				[46968] = {
					{
						["fade_out"] = 0.009999999776482582,
						["duration"] = 0.09999999403953552,
						["cooldown"] = 0.09999999403953552,
						["amplitude"] = 0.949999988079071,
					}, -- [1]
				},
			},
			["npc_cache"] = {
				[85767] = {
					"Cursed Harbinger", -- [1]
					"Ashran", -- [2]
				},
				[36877] = {
					"Wrathbone Skeleton", -- [1]
					"Pit of Saron", -- [2]
				},
				[16459] = {
					"Wanton Hostess", -- [1]
					"Karazhan", -- [2]
				},
				[16523] = {
					"Shattered Hand Savage", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[24777] = {
					"Sunblade Sentinel", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[10375] = {
					"Spire Spiderling", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[10407] = {
					"Fleshflayer Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[10439] = {
					"Ramstein the Gorger", -- [1]
					"Stratholme", -- [2]
				},
				[83720] = {
					"Sporebat Darter", -- [1]
					"Ashran", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[177646] = {
					"Mindseize Controller", -- [1]
					"Twin Peaks", -- [2]
				},
				[97285] = {
					"Wind Rush Totem", -- [1]
					"Warsong Gulch", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[7396] = {
					"Earthen Stonebreaker", -- [1]
					"Uldaman", -- [2]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[164338] = {
					"Mawsworn Guard", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[25865] = {
					"Frozen Core", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[178671] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[10983] = {
					"Winterax Troll", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[164339] = {
					"Mawsworn Bowman", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[56713] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[76811] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[36494] = {
					"Forgemaster Garfrost", -- [1]
					"Pit of Saron", -- [2]
				},
				[18315] = {
					"Ethereal Theurgist", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[61448] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[127231] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[84746] = {
					"Captured Gor'vosh Stoneshaper", -- [1]
					"Ashran", -- [2]
				},
				[76812] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[106245] = {
					"Inna the Cryptstalker", -- [1]
					"Shield's Rest", -- [2]
				},
				[23562] = {
					"Unstoppable Abomination", -- [1]
					"Naxxramas", -- [2]
				},
				[164342] = {
					"Mawsworn Defender", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165366] = {
					"Veteran Siegecrafter", -- [1]
					"Plaguefall", -- [2]
				},
				[178163] = {
					"Murkbrine Shorerunner", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[43917] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164343] = {
					"Mawsworn Debilitator", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[77325] = {
					"Blackhand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[85771] = {
					"Elder Darkweaver Kath", -- [1]
					"Ashran", -- [2]
				},
				[36879] = {
					"Plagueborn Horror", -- [1]
					"Pit of Saron", -- [2]
				},
				[16460] = {
					"Night Mistress", -- [1]
					"Karazhan", -- [2]
				},
				[16524] = {
					"Shade of Aran", -- [1]
					"Karazhan", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[100360] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[113413] = {
					"Infernal Siegebreaker", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[54795] = {
					"Fountain of Light", -- [1]
					"End Time", -- [2]
				},
				[54923] = {
					"Infinite Warden", -- [1]
					"End Time", -- [2]
				},
				[17356] = {
					"Creeping Ooze", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[17420] = {
					"Shattered Hand Heathen", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[34960] = {
					"Alliance Gunship Captain", -- [1]
					"Isle of Conquest", -- [2]
				},
				[4421] = {
					"Charlga Razorflank", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[43662] = {
					"Unbound Earth Rager", -- [1]
					"The Stonecore", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56587] = {
					"Twilight Assault Drake", -- [1]
					"Dragon Soul", -- [2]
				},
				[76815] = {
					"Primal Elementalist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[13319] = {
					"Commander Duffy", -- [1]
					"Alterac Valley", -- [2]
				},
				[127235] = {
					"Garothi Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[18700] = {
					"Reanimated Bones", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179193] = {
					"Fel Obelisk", -- [1]
					"Ashran", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[34193] = {
					"Clockwork Sapper", -- [1]
					"Ulduar", -- [2]
				},
				[4853] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman", -- [2]
				},
				[9736] = {
					"Quartermaster Zigris", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[60043] = {
					"Jade Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				[80400] = {
					"Iron Assembly Warden", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[10120] = {
					"Vault Warder", -- [1]
					"Uldaman", -- [2]
				},
				[167935] = {
					"Contagious Droplet", -- [1]
					"Warsong Gulch", -- [2]
				},
				[16461] = {
					"Zealous Paramour", -- [1]
					"Karazhan", -- [2]
				},
				[123398] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[10408] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[184828] = {
					"Winged Soul Eater", -- [1]
					"Path of the Primus", -- [2]
				},
				[76306] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[170496] = {
					"Shanir Veincutter", -- [1]
					"Theater of Pain", -- [2]
				},
				[17357] = {
					"Creeping Oozeling", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
				},
				[173568] = {
					"Anima Crazed Worker", -- [1]
					"Castle Nathria", -- [2]
				},
				[35346] = {
					"Goblin Mechanic", -- [1]
					"Isle of Conquest", -- [2]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[83729] = {
					"Ashmaul Warden", -- [1]
					"Ashran", -- [2]
				},
				[56589] = {
					"Striker Ga'dok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56717] = {
					"Hoptallus", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Silvershard Mines", -- [2]
				},
				[32915] = {
					"Elder Brightleaf", -- [1]
					"Ulduar", -- [2]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[11464] = {
					"Warpwood Tangler", -- [1]
					"Dire Maul", -- [2]
				},
				[11496] = {
					"Immol'thar", -- [1]
					"Dire Maul", -- [2]
				},
				[177154] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80659] = {
					"Supercharged Siegemaker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[23436] = {
					"Image of Dementia", -- [1]
					"Black Temple", -- [2]
				},
				[735] = {
					"Murloc Streamrunner", -- [1]
					"Maraudon", -- [2]
				},
				[94224] = {
					"Petrifying Totem", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[5925] = {
					"Grounding Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[15975] = {
					"Carrion Spinner", -- [1]
					"Naxxramas", -- [2]
				},
				[43537] = {
					"Stonecore Earthshaper", -- [1]
					"The Stonecore", -- [2]
				},
				[39698] = {
					"Karsh Steelbender", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[39954] = {
					"Twilight Shadow Weaver", -- [1]
					"Grim Batol", -- [2]
				},
				[16167] = {
					"Bony Construct", -- [1]
					"Naxxramas", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
				},
				[56718] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[56846] = {
					"Arm Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[122890] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16526] = {
					"Sorcerous Shade", -- [1]
					"Karazhan", -- [2]
				},
				[16525] = {
					"Spell Shade", -- [1]
					"Karazhan", -- [2]
				},
				[48906] = {
					"Blaze of the Heavens", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[23563] = {
					"Soul Weaver", -- [1]
					"Naxxramas", -- [2]
				},
				[157681] = {
					"Acolyte of Purity", -- [1]
					"Isle of Conquest", -- [2]
				},
				[180741] = {
					"Xuen", -- [1]
					"Alterac Valley", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[34196] = {
					"Rune Etched Sentry", -- [1]
					"Ulduar", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[54927] = {
					"Guardian Demon", -- [1]
					"Well of Eternity", -- [2]
				},
				[7076] = {
					"Earthen Guardian", -- [1]
					"Uldaman", -- [2]
				},
				[34190] = {
					"Hardened Iron Golem", -- [1]
					"Ulduar", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[119052] = {
					"War Banner", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[25740] = {
					"Ahune", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[62348] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[137233] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[124171] = {
					"Shadowguard Subjugator", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[167406] = {
					"Sire Denathrius", -- [1]
					"Castle Nathria", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[172030] = {
					"Tormenter Overlord", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[30283] = {
					"Plague Walker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[91919] = {
					"Marked Apexis Windwraith", -- [1]
					"Ashran", -- [2]
				},
				[56719] = {
					"Sha of Violence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[9097] = {
					"Scarshield Legionnaire", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[18702] = {
					"Auchenai Necromancer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[57231] = {
					"Twilight Portal", -- [1]
					"Dragon Soul", -- [2]
				},
				[13320] = {
					"Commander Karl Philips", -- [1]
					"Alterac Valley", -- [2]
				},
				[9257] = {
					"Scarshield Warlock", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[173066] = {
					"Kel'Thuzad", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[154127] = {
					"Fire Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174090] = {
					"Nathrian Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[32913] = {
					"Elder Ironbranch", -- [1]
					"Ulduar", -- [2]
				},
				[34069] = {
					"Molten Colossus", -- [1]
					"Ulduar", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[13798] = {
					"Jotek", -- [1]
					"Alterac Valley", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				[34197] = {
					"Chamber Overseer", -- [1]
					"Ulduar", -- [2]
				},
				[9545] = {
					"Grim Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Warsong Gulch", -- [2]
				},
				[167949] = {
					"Plague-Ridden Survivor", -- [1]
					"Warsong Gulch", -- [2]
				},
				[59915] = {
					"Jasper Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[40084] = {
					"Bellows Slave", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[39700] = {
					"Beauty", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[23049] = {
					"Shadowmoon Weapon Master", -- [1]
					"Black Temple", -- [2]
				},
				[39956] = {
					"Twilight Enforcer", -- [1]
					"Grim Batol", -- [2]
				},
				[172557] = {
					"Lichsworn Guardian", -- [1]
					"Isle of Conquest", -- [2]
				},
				[177164] = {
					"Mawsworn Pillager", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[56848] = {
					"Twilight Elite Slayer", -- [1]
					"Dragon Soul", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[77337] = {
					"Aknor Steelbringer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[9416] = {
					"Scarshield Worg", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[33293] = {
					"XT-002 Deconstructor", -- [1]
					"Ulduar", -- [2]
				},
				[32918] = {
					"Detonating Lasher", -- [1]
					"Ulduar", -- [2]
				},
				[177165] = {
					"Mawsworn Destroyer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[162300] = {
					"Ravenous Galescreamer", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[33430] = {
					"Guardian Lasher", -- [1]
					"Ulduar", -- [2]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[18506] = {
					"Raging Soul", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[80409] = {
					"Markog Aba'dir", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[34198] = {
					"Iron Mender", -- [1]
					"Ulduar", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[7397] = {
					"Earthen Stonecarver", -- [1]
					"Uldaman", -- [2]
				},
				[10697] = {
					"Bile Slime", -- [1]
					"Stratholme", -- [2]
				},
				[76810] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
				},
				[154131] = {
					"Molten Fury", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[55689] = {
					"Hagara the Stormbinder", -- [1]
					"Dragon Soul", -- [2]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[26125] = {
					"Risen Ghoul", -- [1]
					"Silvershard Mines", -- [2]
				},
				[30284] = {
					"Bonegrinder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[109075] = {
					"Parasitic Lasher", -- [1]
					"The Nighthold", -- [2]
				},
				[163326] = {
					"Skeletal Defender", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[109587] = {
					"Fel Lord Zardak", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[93719] = {
					"Fel Commander Azgalor", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[176145] = {
					"Stone Prison", -- [1]
					"Twin Peaks", -- [2]
				},
				[36881] = {
					"Skeletal Slave", -- [1]
					"Pit of Saron", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[43658] = {
					"Frenzied Crocolisk", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[33431] = {
					"Forest Swarmer", -- [1]
					"Ulduar", -- [2]
				},
				[11465] = {
					"Warpwood Stomper", -- [1]
					"Dire Maul", -- [2]
				},
				[54544] = {
					"Echo of Tyrande", -- [1]
					"End Time", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[80411] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[34199] = {
					"Lightning Charged Iron Dwarf", -- [1]
					"Ulduar", -- [2]
				},
				[101398] = {
					"Psyfiend", -- [1]
					"Alterac Valley", -- [2]
				},
				[175123] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134173] = {
					"Animated Droplet", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[15976] = {
					"Venom Stalker", -- [1]
					"Naxxramas", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[177683] = {
					"Hungering Mite", -- [1]
					"Twin Peaks", -- [2]
				},
				[23694] = {
					"Pulsing Pumpkin", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[78620] = {
					"Shadow Figurine", -- [1]
					"Ashran", -- [2]
				},
				[123921] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[79900] = {
					"Captain Hoodrych", -- [1]
					"Ashran", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[134686] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
				},
				[60561] = {
					"Earthgrab Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[12201] = {
					"Princess Theradras", -- [1]
					"Maraudon", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[175611] = {
					"The Tarragrue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174100] = {
					"Nathrian Singuard", -- [1]
					"Castle Nathria", -- [2]
				},
				[82204] = {
					"Atomik", -- [1]
					"Ashran", -- [2]
				},
				[113149] = {
					"Felguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[57746] = {
					"Faceless Destroyer", -- [1]
					"Dragon Soul", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[33432] = {
					"Leviathan Mk II", -- [1]
					"Ulduar", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177161] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[131617] = {
					"Groundskeeper Lilith", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[76829] = {
					"Slag Elemental", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[118804] = {
					"Domatrax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[183317] = {
					"Wanton Host", -- [1]
					"Karazhan", -- [2]
				},
				[178661] = {
					"Mawsworn Interceptor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[110614] = {
					"Malificus", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[177150] = {
					"Lady Moonberry", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59794] = {
					"Krik'thik Disruptor", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[30285] = {
					"Eye of Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13577] = {
					"Stormpike Ram Rider Commander", -- [1]
					"Alterac Valley", -- [2]
				},
				[45065] = {
					"Tol'vir Merchant", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[124947] = {
					"Void Flayer", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[13097] = {
					"Coldmine Surveyor", -- [1]
					"Alterac Valley", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[9098] = {
					"Scarshield Spellbinder", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[13257] = {
					"Murgot Deepforge", -- [1]
					"Alterac Valley", -- [2]
				},
				[134691] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[9258] = {
					"Scarshield Raider", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[84483] = {
					"Gronnling Breaker", -- [1]
					"Ashran", -- [2]
				},
				[107288] = {
					"Vilethorn Sapling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[57875] = {
					"Eye of Go'rath", -- [1]
					"Dragon Soul", -- [2]
				},
				[174565] = {
					"Raider's Tanking Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
				},
				[109080] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[112664] = {
					"Arc Well", -- [1]
					"The Nighthold", -- [2]
				},
				[109592] = {
					"Felguard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[166429] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[183321] = {
					"Night Lord", -- [1]
					"Karazhan", -- [2]
				},
				[4854] = {
					"Grimlok", -- [1]
					"Uldaman", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[100351] = {
					"Avatar of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
				},
				[183322] = {
					"Zealous Consort", -- [1]
					"Karazhan", -- [2]
				},
				[179739] = {
					"Porous Stone Statue", -- [1]
					"Alterac Valley", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[178659] = {
					"Wild Hunt Enchanter", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Alterac Valley", -- [2]
				},
				[14185] = {
					"Najak Hexxen", -- [1]
					"Alterac Valley", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[40600] = {
					"Faceless Corruptor", -- [1]
					"Grim Batol", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[177162] = {
					"Mawsworn Interrogator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[110617] = {
					"Shadowsworn Harbinger", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[16593] = {
					"Shattered Hand Brawler", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[16529] = {
					"Magical Horror", -- [1]
					"Karazhan", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[178717] = {
					"Wild Hunt Guardian", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[175646] = {
					"P.O.S.T. Master", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
				},
				[164897] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[123402] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[122135] = {
					"Shatug", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[178718] = {
					"Wild Hunt Archer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[114712] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[172064] = {
					"Unstable Larva", -- [1]
					"Plaguefall", -- [2]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[178719] = {
					"Wild Hunt Nightblade", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[39705] = {
					"Ascendant Lord Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[10986] = {
					"Snowblind Harpy", -- [1]
					"Alterac Valley", -- [2]
				},
				[39961] = {
					"Enslaved Water Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[30286] = {
					"Frostbringer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[11082] = {
					"Stratholme Courier", -- [1]
					"Stratholme", -- [2]
				},
				[30414] = {
					"Forgotten One", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[108796] = {
					"Arcanist Malrodi", -- [1]
					"Court of Stars", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[93983] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[114714] = {
					"Ghostly Steward", -- [1]
					"Return to Karazhan", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				[177185] = {
					"Crested Gromit", -- [1]
					"Eye of the Storm", -- [2]
				},
				[57749] = {
					"Faceless Corruptor", -- [1]
					"Dragon Soul", -- [2]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[166436] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[11466] = {
					"Highborne Summoner", -- [1]
					"Dire Maul", -- [2]
				},
				[87841] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[33819] = {
					"Twilight Frost Mage", -- [1]
					"Ulduar", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Silvershard Mines", -- [2]
				},
				[15689] = {
					"Netherspite", -- [1]
					"Karazhan", -- [2]
				},
				[123929] = {
					"Garothi Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[114716] = {
					"Ghostly Baker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80676] = {
					"Iron Flametwister", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[166949] = {
					"Chi-Ji", -- [1]
					"Alterac Valley", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Eye of the Storm", -- [2]
				},
				[114715] = {
					"Ghostly Chef", -- [1]
					"Return to Karazhan", -- [2]
				},
				[78116] = {
					"Water Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[102397] = {
					"Wrathlord Bulwark", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[15977] = {
					"Poisonous Skitterer", -- [1]
					"Naxxramas", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[11946] = {
					"Drek'Thar", -- [1]
					"Alterac Valley", -- [2]
				},
				[115484] = {
					"Fel Bat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[175652] = {
					"Lord of Woe", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
				},
				[32907] = {
					"Captured Mercenary Captain", -- [1]
					"Ulduar", -- [2]
				},
				[36874] = {
					"Disturbed Glacial Revenant", -- [1]
					"Pit of Saron", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[16297] = {
					"Mutated Grub", -- [1]
					"Naxxramas", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[77605] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[102431] = {
					"Blood-Princess Thal'ena", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[24656] = {
					"Fizzle", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16530] = {
					"Mana Warp", -- [1]
					"Karazhan", -- [2]
				},
				[74534] = {
					"Crystalline Behemoth", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[6230] = {
					"Peacekeeper Security Suit", -- [1]
					"Gnomeregan", -- [2]
				},
				[83492] = {
					"Iron Brute", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[25040] = {
					"Greater Water Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[75814] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[152612] = {
					"Subjugator Klontzas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[80677] = {
					"Iron Journeyman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11142] = {
					"Undead Postman", -- [1]
					"Stratholme", -- [2]
				},
				[49045] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[30278] = {
					"Ahn'kahar Spell Flinger", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[56854] = {
					"Twilight Elite Dreadblade", -- [1]
					"Dragon Soul", -- [2]
				},
				[83713] = {
					"Titarus", -- [1]
					"Ashran", -- [2]
				},
				[109591] = {
					"Felguard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[107024] = {
					"Fel Lord", -- [1]
					"Isle of Conquest", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[17938] = {
					"Coilfang Observer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[129050] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168490] = {
					"Brittlebark Mischief-Maker", -- [1]
					"Eye of the Storm", -- [2]
				},
				[80422] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[173609] = {
					"Nathrian Conservator", -- [1]
					"Castle Nathria", -- [2]
				},
				[56855] = {
					"Twilight Assault Drake", -- [1]
					"Dragon Soul", -- [2]
				},
				[94718] = {
					"Greater Raven", -- [1]
					"Shield's Rest", -- [2]
				},
				[22929] = {
					"Greater Shadowfiend", -- [1]
					"Black Temple", -- [2]
				},
				[61334] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[36892] = {
					"Ymirjar Deathbringer", -- [1]
					"Pit of Saron", -- [2]
				},
				[9259] = {
					"Firebrand Grunt", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[80423] = {
					"Thunderlord Beast-Tender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[7030] = {
					"Shadowforge Geologist", -- [1]
					"Uldaman", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[178732] = {
					"Mawsworn Runesmith", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[9547] = {
					"Guzzling Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[122398] = {
					"Sapped Voidlord", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[113145] = {
					"Doomguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[178733] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[176605] = {
					"Gilgamesh", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178734] = {
					"Mawsworn Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17491] = {
					"Laughing Skull Rogue", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[39708] = {
					"Twilight Flame Caller", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[155185] = {
					"Paintbot Green", -- [1]
					"Alterac Valley", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180779] = {
					"Terrorspine", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[7078] = {
					"Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
				},
				[14186] = {
					"Ravak Grimtotem", -- [1]
					"Alterac Valley", -- [2]
				},
				[125981] = {
					"Fragmented Voidling", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[101667] = {
					"Shielded Anchor", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[14282] = {
					"Frost Wolf Bloodhound", -- [1]
					"Alterac Valley", -- [2]
				},
				[163376] = {
					"Redelav Attendant", -- [1]
					"Warsong Gulch", -- [2]
				},
				[36893] = {
					"Ymirjar Flamebearer", -- [1]
					"Pit of Saron", -- [2]
				},
				[180780] = {
					"Dreadmaw", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[7206] = {
					"Ancient Stone Keeper", -- [1]
					"Uldaman", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
				},
				[10411] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[33822] = {
					"Twilight Guardian", -- [1]
					"Ulduar", -- [2]
				},
				[180781] = {
					"Frothing Hound", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[21138] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[41096] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[45063] = {
					"Bonesnapper Scorpid", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[14762] = {
					"Dun Baldar North Marshal", -- [1]
					"Alterac Valley", -- [2]
				},
				[118304] = {
					"Tortured Skeleton", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[175663] = {
					"Hylbrande", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[17427] = {
					"Shattered Hand Archer", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[83754] = {
					"Star Root Sniffer", -- [1]
					"Ashran", -- [2]
				},
				[10955] = {
					"Summoned Water Elemental", -- [1]
					"Stratholme", -- [2]
				},
				[10987] = {
					"Irondeep Trogg", -- [1]
					"Alterac Valley", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136250] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[30416] = {
					"Bound Fire Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[166451] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114210] = {
					"Doomguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[122401] = {
					"Shadowguard Trickster", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[32927] = {
					"Runemaster Molgeim", -- [1]
					"Ulduar", -- [2]
				},
				[164406] = {
					"Shriekwing", -- [1]
					"Castle Nathria", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[166452] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[33567] = {
					"Deathsworn Zealot", -- [1]
					"Ulduar", -- [2]
				},
				[62360] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[33823] = {
					"Twilight Slayer", -- [1]
					"Ulduar", -- [2]
				},
				[16170] = {
					"Coldmist Stalker", -- [1]
					"Karazhan", -- [2]
				},
				[15690] = {
					"Prince Malchezaar", -- [1]
					"Karazhan", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[166453] = {
					"Darkturned Clawguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114211] = {
					"Fel Hound", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[4852] = {
					"Stonevault Oracle", -- [1]
					"Uldaman", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[180786] = {
					"Binding of Misery", -- [1]
					"De Other Side", -- [2]
				},
				[13099] = {
					"Irondeep Explorer", -- [1]
					"Alterac Valley", -- [2]
				},
				[15978] = {
					"Crypt Reaver", -- [1]
					"Naxxramas", -- [2]
				},
				[9196] = {
					"Highlord Omokk", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[11947] = {
					"Captain Galvangar", -- [1]
					"Alterac Valley", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[13323] = {
					"Subterranean Diemetradon", -- [1]
					"Maraudon", -- [2]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
				},
				[164407] = {
					"Sludgefist", -- [1]
					"Castle Nathria", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[12203] = {
					"Landslide", -- [1]
					"Maraudon", -- [2]
				},
				[114212] = {
					"Felguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[61337] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[76087] = {
					"Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[16468] = {
					"Spectral Patron", -- [1]
					"Karazhan", -- [2]
				},
				[24722] = {
					"Fel Crystal", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16596] = {
					"Greater Fleshbeast", -- [1]
					"Karazhan", -- [2]
				},
				[82175] = {
					"Silverwing Kaliri", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[104493] = {
					"Spitting Cobra", -- [1]
					"Ashran", -- [2]
				},
				[13797] = {
					"Mountaineer Boombellow", -- [1]
					"Alterac Valley", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[33824] = {
					"Twilight Shadowblade", -- [1]
					"Ulduar", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[170460] = {
					"Pearly Wader", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
				},
				[81197] = {
					"Iron Raider", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[122403] = {
					"Shadowguard Champion", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[113398] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[177114] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[75055] = {
					"Razorfen Torchbearer", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[43934] = {
					"Soul Fragment", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[172601] = {
					"Necrotic Sorcerer", -- [1]
					"Isle of Conquest", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[56731] = {
					"Habanero Brew", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178744] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[122404] = {
					"Shadowguard Voidbender", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[61338] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[9260] = {
					"Firebrand Legionnaire", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22855] = {
					"Illidari Nightlord", -- [1]
					"Black Temple", -- [2]
				},
				[2748] = {
					"Archaedas", -- [1]
					"Uldaman", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179257] = {
					"Burning Shade", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17429] = {
					"Fel Orc Neophyte", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[88109] = {
					"Kimilyn", -- [1]
					"Ashran", -- [2]
				},
				[41095] = {
					"Twilight Drake", -- [1]
					"Grim Batol", -- [2]
				},
				[45062] = {
					"Oathsworn Scorpid Keeper", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[30418] = {
					"Bound Air Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[18312] = {
					"Ethereal Spellbinder", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[33699] = {
					"Storm Tempered Keeper", -- [1]
					"Ulduar", -- [2]
				},
				[122405] = {
					"Shadowguard Conjurer", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[4855] = {
					"Stonevault Brawler", -- [1]
					"Uldaman", -- [2]
				},
				[168004] = {
					"Empowered Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[74545] = {
					"Razorfen Geomagus", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[157149] = {
					"Heartseeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178747] = {
					"Injured Hunter", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[102705] = {
					"Fel Lord Rakaz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[54432] = {
					"Murozond", -- [1]
					"End Time", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[74549] = {
					"Razorfen Stonechanter", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[75061] = {
					"Young Boar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[14187] = {
					"Athramanis", -- [1]
					"Alterac Valley", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[93485] = {
					"Forsaken Crewman", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[14283] = {
					"Stormpike Owl", -- [1]
					"Alterac Valley", -- [2]
				},
				[175677] = {
					"Smuggled Creature", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[32930] = {
					"Kologarn", -- [1]
					"Ulduar", -- [2]
				},
				[24723] = {
					"Selin Fireheart", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[33186] = {
					"Razorscale", -- [1]
					"Ulduar", -- [2]
				},
				[165952] = {
					"Primed Defiler", -- [1]
					"Isle of Conquest", -- [2]
				},
				[10412] = {
					"Crypt Crawler", -- [1]
					"Stratholme", -- [2]
				},
				[85811] = {
					"Warspear Gladiator", -- [1]
					"Ashran", -- [2]
				},
				[74751] = {
					"Solarshard Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75318] = {
					"Venomous Discharge", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[152644] = {
					"Deadsoul Drifter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
				},
				[165953] = {
					"Callused Monstrosity", -- [1]
					"Isle of Conquest", -- [2]
				},
				[93486] = {
					"Dread-Captain Tattersail", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[122407] = {
					"Warp Stalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[83764] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[59804] = {
					"Gripping Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[165954] = {
					"Composed Defender", -- [1]
					"Isle of Conquest", -- [2]
				},
				[99629] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[17941] = {
					"Mennu the Betrayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
				},
				[17622] = {
					"Sharpshooter Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[165955] = {
					"Fraying Remnants", -- [1]
					"Isle of Conquest", -- [2]
				},
				[44704] = {
					"Minion of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[122408] = {
					"Shadow Stalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[61340] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176705] = {
					"Venza Goldfuse", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74548] = {
					"Blazing Servitor", -- [1]
					"Razorfen Downs", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[99630] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[79923] = {
					"Shimmerwing Mothling", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[173641] = {
					"Nathrian Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[15691] = {
					"The Curator", -- [1]
					"Karazhan", -- [2]
				},
				[56863] = {
					"Sleepy Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[74552] = {
					"Razorfen Huntmaster", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[102446] = {
					"Fel Lord Betrug", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[102702] = {
					"Wrathguard Dreadblade", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[15979] = {
					"Tomb Horror", -- [1]
					"Naxxramas", -- [2]
				},
				[95280] = {
					"Kaz'rogal", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[11948] = {
					"Vanndar Stormpike", -- [1]
					"Alterac Valley", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
				},
				[16171] = {
					"Coldmist Widow", -- [1]
					"Karazhan", -- [2]
				},
				[60701] = {
					"Zian of the Endless Shadow", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[33288] = {
					"Yogg-Saron", -- [1]
					"Ulduar", -- [2]
				},
				[44577] = {
					"General Husam", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[12236] = {
					"Lord Vyletongue", -- [1]
					"Maraudon", -- [2]
				},
				[61341] = {
					"Mounted Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102703] = {
					"Fel Lord Dukaz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[74550] = {
					"Razorfen Kraulshaper", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[32904] = {
					"Dark Rune Commoner", -- [1]
					"Ulduar", -- [2]
				},
				[33572] = {
					"Steelforged Defender", -- [1]
					"Ulduar", -- [2]
				},
				[155211] = {
					"Gormling Pest", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[16471] = {
					"Skeletal Usher", -- [1]
					"Karazhan", -- [2]
				},
				[113197] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[54687] = {
					"Time-Twisted Footman", -- [1]
					"End Time", -- [2]
				},
				[76090] = {
					"Blood-Branded Razorfen", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[93490] = {
					"Royal Dreadguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[17623] = {
					"Reaver Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[85812] = {
					"Stormshield Gladiator", -- [1]
					"Ashran", -- [2]
				},
				[184910] = {
					"Wo Drifter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[102704] = {
					"Fel Lord Zarnoz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[56706] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[153165] = {
					"Custodian Thonar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95282] = {
					"Azgalor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[153174] = {
					"Watchers of Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[126767] = {
					"Clubfist Beastlord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[17942] = {
					"Quagmirran", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				[91704] = {
					"Anchoring Crystal", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[30419] = {
					"Bound Water Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13196] = {
					"Phase Lasher", -- [1]
					"Dire Maul", -- [2]
				},
				[85753] = {
					"Kaliri Skyterror", -- [1]
					"Ashran", -- [2]
				},
				[122412] = {
					"Bound Voidlord", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[9197] = {
					"Spirestone Battle Mage", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[113971] = {
					"Maiden of Virtue", -- [1]
					"Return to Karazhan", -- [2]
				},
				[32933] = {
					"Left Arm", -- [1]
					"Ulduar", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[22869] = {
					"Illidari Boneslicer", -- [1]
					"Black Temple", -- [2]
				},
				[168033] = {
					"Fallen Monk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[22997] = {
					"Flame of Azzinoth", -- [1]
					"Black Temple", -- [2]
				},
				[16408] = {
					"Phantom Valet", -- [1]
					"Karazhan", -- [2]
				},
				[76088] = {
					"Razorfen Huntmaster", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[34085] = {
					"Forge Construct", -- [1]
					"Ulduar", -- [2]
				},
				[54688] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[180690] = {
					"Vazzaren the Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[122413] = {
					"Shadowguard Riftstalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[126764] = {
					"Bladesworn Ravager", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[106545] = {
					"Empowered Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[59551] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[74553] = {
					"Blood-Branded Razorfen", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[81725] = {
					"Muk'Mar Raz", -- [1]
					"Ashran", -- [2]
				},
				[120366] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[60447] = {
					"Krik'thik Saboteur", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[7079] = {
					"Viscous Fallout", -- [1]
					"Gnomeregan", -- [2]
				},
				[14188] = {
					"Dirk Swindle", -- [1]
					"Alterac Valley", -- [2]
				},
				[40484] = {
					"Erudax", -- [1]
					"Grim Batol", -- [2]
				},
				[178642] = {
					"Shandris Feathermoon", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[10221] = {
					"Bloodaxe Worg Pup", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[7175] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173134] = {
					"Darksworn Goliath", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74554] = {
					"Razorfen Scarblade", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[10381] = {
					"Ravaged Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[10413] = {
					"Crypt Beast", -- [1]
					"Stratholme", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[30549] = {
					"Baron Rivendare", -- [1]
					"Naxxramas", -- [2]
				},
				[184908] = {
					"Vy Interceptor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[34086] = {
					"Magma Rager", -- [1]
					"Ulduar", -- [2]
				},
				[34183] = {
					"Arachnopod Destroyer", -- [1]
					"Ulduar", -- [2]
				},
				[76284] = {
					"Spiteful Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[14764] = {
					"Icewing Marshal", -- [1]
					"Alterac Valley", -- [2]
				},
				[9198] = {
					"Spirestone Mystic", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166492] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[78650] = {
					"Shattered Hand Torturer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[124207] = {
					"Fel-Charged Obfuscator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[53890] = {
					"Hideous Amalgamation", -- [1]
					"Dragon Soul", -- [2]
				},
				[17879] = {
					"Chrono Lord Deja", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[106041] = {
					"Zombie", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
				},
				[40357] = {
					"Invoked Flaming Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[56865] = {
					"Aqua Dancer", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[76097] = {
					"Solar Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[61216] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18503] = {
					"Phantasmal Possessor", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[184911] = {
					"Urh Dismantler", -- [1]
					"Halls of Atonement", -- [2]
				},
				[111155] = {
					"Makaan the Malevolent", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[78651] = {
					"Shattered Hand Bonechopper", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[174162] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[166495] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[179281] = {
					"Coagulated Blood", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44932] = {
					"Oathsworn Pathfinder", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[93687] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[54690] = {
					"Time-Twisted Priest", -- [1]
					"End Time", -- [2]
				},
				[23318] = {
					"Ashtongue Rogue", -- [1]
					"Black Temple", -- [2]
				},
				[93496] = {
					"Black Rose Apothecary", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[42789] = {
					"Stonecore Magmalord", -- [1]
					"The Stonecore", -- [2]
				},
				[172647] = {
					"Parasitic Infestor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[11789] = {
					"Deep Borer", -- [1]
					"Maraudon", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[173140] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[15980] = {
					"Naxxramas Cultist", -- [1]
					"Naxxramas", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[11949] = {
					"Captain Balinda Stonehearth", -- [1]
					"Alterac Valley", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"Alterac Valley", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[81985] = {
					"Everbloom Tender", -- [1]
					"The Everbloom", -- [2]
				},
				[30276] = {
					"Ahn'kahar Web Winder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[16236] = {
					"Eye Stalk", -- [1]
					"Naxxramas", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[165472] = {
					"Nathrian Siphoner", -- [1]
					"Castle Nathria", -- [2]
				},
				[59684] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[61345] = {
					"Mogu Archer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[16472] = {
					"Phantom Stagehand", -- [1]
					"Karazhan", -- [2]
				},
				[111157] = {
					"Pilik", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[45477] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[57890] = {
					"Claw of Go'rath", -- [1]
					"Dragon Soul", -- [2]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[120371] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[54435] = {
					"Avaleè", -- [1]
					"End Time", -- [2]
				},
				[173143] = {
					"Soul Weaver", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[93498] = {
					"Forsaken Deathguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[175713] = {
					"Suffering Soul", -- [1]
					"Isle of Conquest", -- [2]
				},
				[159323] = {
					"Stoneward Trampler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59426] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[82425] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[75588] = {
					"Grotto Toad", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[43430] = {
					"Stonecore Berserker", -- [1]
					"The Stonecore", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80962] = {
					"Machinist B'randt", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[17816] = {
					"Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17880] = {
					"Temporus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[75839] = {
					"Vigilant Kaathar", -- [1]
					"Auchindoun", -- [2]
				},
				[85752] = {
					"Outcast Harbinger", -- [1]
					"Ashran", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[163278] = {
					"Fallen Battle-Medic", -- [1]
					"Theater of Pain", -- [2]
				},
				[56867] = {
					"Fiery Trickster", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[166491] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[81726] = {
					"Gaul Dun Firok", -- [1]
					"Ashran", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[13357] = {
					"Frostwolf Mine Layer", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[46248] = {
					"Riverpaw Basher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[22871] = {
					"Teron Gorefiend", -- [1]
					"Black Temple", -- [2]
				},
				[33966] = {
					"Crusher Tentacle", -- [1]
					"Ulduar", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[165469] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[33670] = {
					"Aerial Command Unit", -- [1]
					"Ulduar", -- [2]
				},
				[60709] = {
					"Qiang the Merciless", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[122421] = {
					"Umbral War-Adept", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[10405] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[91970] = {
					"Felguard Invader", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[74490] = {
					"Boneflayer Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[76102] = {
					"Air Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[120374] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[165481] = {
					"Court Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[183919] = {
					"Dominated Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164447] = {
					"Skuld", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[76865] = {
					"Beastlord Darmac", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[14285] = {
					"Frostwolf Battleguard", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[61347] = {
					"Kingsguard", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
				},
				[32938] = {
					"Flash Freeze", -- [1]
					"Ulduar", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[123702] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[10382] = {
					"Mangled Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[10414] = {
					"Patchwork Horror", -- [1]
					"Stratholme", -- [2]
				},
				[175198] = {
					"Void Lasher", -- [1]
					"Alterac Valley", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[157645] = {
					"Control Location 1 - Widget", -- [1]
					"Plaguefall", -- [2]
				},
				[18394] = {
					"Ethereal Wraith", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[54693] = {
					"Time-Twisted Rifleman", -- [1]
					"End Time", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[93173] = {
					"Icebound Dreadnought", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[122423] = {
					"Grand Shadow-Weaver", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[13326] = {
					"Seasoned Defender", -- [1]
					"Alterac Valley", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[123191] = {
					"Fel Hound", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[136297] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[165474] = {
					"Nathrian Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[96756] = {
					"Ymiron, the Fallen King", -- [1]
					"Maw of Souls", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[17817] = {
					"Greater Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17881] = {
					"Aeonus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[180171] = {
					"Brooding Cleric", -- [1]
					"Ashran", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[60708] = {
					"Meng the Demented", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[9263] = {
					"Firebrand Dreadweaver", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[155238] = {
					"Guardian of the Leaf", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[18521] = {
					"Raging Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[54952] = {
					"Brittle Ghoul", -- [1]
					"End Time", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[175732] = {
					"Sylvanas Windrunner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74489] = {
					"Thorn Eater Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[11470] = {
					"Eldreth Sorcerer", -- [1]
					"Dire Maul", -- [2]
				},
				[155239] = {
					"Forest Father", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[128060] = {
					"Priestess of Delirium", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[175725] = {
					"Eye of the Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Ashran", -- [2]
				},
				[101950] = {
					"Mindflayer Kaahrj", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[126776] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[11790] = {
					"Putridus Satyr", -- [1]
					"Maraudon", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[15981] = {
					"Naxxramas Acolyte", -- [1]
					"Naxxramas", -- [2]
				},
				[175726] = {
					"Skyja", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[46251] = {
					"Riverpaw Looter", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
				},
				[124729] = {
					"L'ura", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[39978] = {
					"Twilight Torturer", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[80708] = {
					"Iron Taskmaster", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[23237] = {
					"Bonechewer Blood Prophet", -- [1]
					"Black Temple", -- [2]
				},
				[12206] = {
					"Primordial Behemoth", -- [1]
					"Maraudon", -- [2]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[28695] = {
					"Molten Golem", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24664] = {
					"Kael'thas Sunstrider", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[81225] = {
					"Risen Spirit", -- [1]
					"Ashran", -- [2]
				},
				[81737] = {
					"Unchecked Growth", -- [1]
					"The Everbloom", -- [2]
				},
				[61989] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[6232] = {
					"Arcane Nullifier X-21", -- [1]
					"Gnomeregan", -- [2]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				[75590] = {
					"Enormous Bullfrog", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[33836] = {
					"Bomb Bot", -- [1]
					"Ulduar", -- [2]
				},
				[46249] = {
					"Riverpaw Slayer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[156779] = {
					"Fallen Knowledge-Seeker", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[54695] = {
					"Senjitsu", -- [1]
					"Well of Eternity", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[18524] = {
					"Angered Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[17370] = {
					"Laughing Skull Enforcer", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[127723] = {
					"Imperator Deconix", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[111087] = {
					"Hakkar the Houndmaster", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[123451] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[17626] = {
					"Laughing Skull Legionnaire", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[30680] = {
					"Onyx Brood General", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[111175] = {
					"The Overseer", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[77559] = {
					"Solar Magnifier", -- [1]
					"Skyreach", -- [2]
				},
				[179313] = {
					"Lady Moonberry", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[60710] = {
					"Subetai the Swift", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[46252] = {
					"Riverpaw Shaman", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[93171] = {
					"Skeletal Gryphon", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[9199] = {
					"Spirestone Enforcer", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[159853] = {
					"Cleansing Aspirant", -- [1]
					"Isle of Conquest", -- [2]
				},
				[13358] = {
					"Stormpike Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				[123452] = {
					"Fel Lord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[105200] = {
					"Felguard Invader", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[56575] = {
					"Burning Tendons", -- [1]
					"Dragon Soul", -- [2]
				},
				[33453] = {
					"Dark Rune Watcher", -- [1]
					"Ulduar", -- [2]
				},
				[179305] = {
					"Mawsworn Steelshaper", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[17990] = {
					"Underbog Mushroom", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[46250] = {
					"Riverpaw Poacher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[105966] = {
					"Guardian Orb", -- [1]
					"Shield's Rest", -- [2]
				},
				[9583] = {
					"Bloodaxe Veteran", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77128] = {
					"Pack Beast", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[94276] = {
					"Gul'dan", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[11791] = {
					"Putridus Trickster", -- [1]
					"Maraudon", -- [2]
				},
				[170093] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16174] = {
					"Greater Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[39980] = {
					"Twilight Sadist", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[76105] = {
					"Crystalfire Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[39854] = {
					"Azureborne Guardian", -- [1]
					"Grim Batol", -- [2]
				},
				[88902] = {
					"Mol'dana Two-Blade", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
				},
				[179308] = {
					"Voracious Mawrat", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[155250] = {
					"Decayspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57384] = {
					"Cobalt Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[16539] = {
					"Homunculus", -- [1]
					"Karazhan", -- [2]
				},
				[74570] = {
					"Ruination", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[10383] = {
					"Broken Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[180678] = {
					"Keensnout Gromit", -- [1]
					"Silvershard Mines", -- [2]
				},
				[12047] = {
					"Stormpike Mountaineer", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[155251] = {
					"Elder Longbranch", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33838] = {
					"Enslaved Fire Elemental", -- [1]
					"Ulduar", -- [2]
				},
				[7320] = {
					"Stonevault Mauler", -- [1]
					"Uldaman", -- [2]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[175559] = {
					"Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76874] = {
					"Dreadwing", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[175727] = {
					"Soulrender Dormazain", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[16412] = {
					"Ghostly Baker", -- [1]
					"Karazhan", -- [2]
				},
				[21148] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[157300] = {
					"Tunk", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[16540] = {
					"Shadow Pillager", -- [1]
					"Karazhan", -- [2]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177272] = {
					"Lord Herne", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[76107] = {
					"Solarshard Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				[22299] = {
					"Spore Strider", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[39855] = {
					"Azureborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[126527] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[175729] = {
					"Remnant of Ner'zhul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[9200] = {
					"Spirestone Reaver", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[79093] = {
					"Skyreach Sun Talon", -- [1]
					"Skyreach", -- [2]
				},
				[9264] = {
					"Firebrand Pyromancer", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[174194] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[22874] = {
					"Coilskar Harpooner", -- [1]
					"Black Temple", -- [2]
				},
				[11471] = {
					"Eldreth Apparition", -- [1]
					"Dire Maul", -- [2]
				},
				[175730] = {
					"Fatescribe Roh-Kalo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177273] = {
					"Niya", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[62632] = {
					"Sik'thik Engineer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[83790] = {
					"Ashmaul Flamespeaker", -- [1]
					"Ashran", -- [2]
				},
				[177274] = {
					"Dreamweaver", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[77132] = {
					"Sargerei Zealot", -- [1]
					"Auchindoun", -- [2]
				},
				[54700] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[175731] = {
					"Guardian of the First Ones", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[73805] = {
					"Corrupted Toad", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[180865] = {
					"Twisted Warden", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[36355] = {
					"Siege Turret", -- [1]
					"Isle of Conquest", -- [2]
				},
				[177787] = {
					"Mawsworn Hopebreaker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[99655] = {
					"Void-Touched Juggernaut", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[120646] = {
					"Book of Arcane Monstrosities", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[104262] = {
					"Burning Ember", -- [1]
					"The Nighthold", -- [2]
				},
				[39982] = {
					"Crazed Mage", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[39984] = {
					"Malignant Trogg", -- [1]
					"Grim Batol", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[12207] = {
					"Thessala Hydra", -- [1]
					"Maraudon", -- [2]
				},
				[114244] = {
					"Eredar Mageslayer", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[18501] = {
					"Unliving Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[57386] = {
					"Crimson Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[77905] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[177269] = {
					"So'leah", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177277] = {
					"Sparklepuff", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[179837] = {
					"Tracker Zo'korss", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135816] = {
					"Vilefiend", -- [1]
					"Ashran", -- [2]
				},
				[46383] = {
					"Randolph Moloch", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[61485] = {
					"General Pa'valak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[62633] = {
					"Sik'thik Builder", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[46381] = {
					"Shifty Thief", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[17693] = {
					"Shattered Hand Scout", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[114245] = {
					"Eredar Mageslayer", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[163450] = {
					"Stoneguard Centurion", -- [1]
					"Warsong Gulch", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[54191] = {
					"Risen Ghoul", -- [1]
					"End Time", -- [2]
				},
				[36658] = {
					"Scourgelord Tyrannus", -- [1]
					"Pit of Saron", -- [2]
				},
				[127810] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[30682] = {
					"Onyx Flight Captain", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[124227] = {
					"Volant Kerapteron", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168579] = {
					"Fen Hatchling", -- [1]
					"Plaguefall", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[56747] = {
					"Gu Cloudstrike", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56875] = {
					"Krik'thik Demolisher", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[166523] = {
					"Vesper Totem", -- [1]
					"Eye of the Storm", -- [2]
				},
				[113131] = {
					"Living Felblaze", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[30681] = {
					"Onyx Blaze Mistress", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[57387] = {
					"Glowing Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[164476] = {
					"Tortured Amalgamation", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[175234] = {
					"Tractus the Icebreaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166012] = {
					"Athanos", -- [1]
					"Bastion Scenario", -- [2]
				},
				[22875] = {
					"Coilskar Sea-Caller", -- [1]
					"Black Temple", -- [2]
				},
				[22939] = {
					"Temple Concubine", -- [1]
					"Black Temple", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[33715] = {
					"Charged Sphere", -- [1]
					"Ulduar", -- [2]
				},
				[46254] = {
					"Hogger", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[80719] = {
					"Iron Smith", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[72785] = {
					"Twisted Ancient", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[166525] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114247] = {
					"The Curator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[4857] = {
					"Stone Keeper", -- [1]
					"Uldaman", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[11460] = {
					"Alzzin's Minion", -- [1]
					"Dire Maul", -- [2]
				},
				[177275] = {
					"Hunt-Captain Korayn", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[59819] = {
					"Artillery", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[11600] = {
					"Irondeep Shaman", -- [1]
					"Alterac Valley", -- [2]
				},
				[114251] = {
					"Galindre", -- [1]
					"Return to Karazhan", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[75857] = {
					"Unstable Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[56876] = {
					"Krik'thik Sapper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[94191] = {
					"Burning Terrorhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[32665] = {
					"Crystalline Tangler", -- [1]
					"The Nexus", -- [2]
				},
				[183931] = {
					"Dominated Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57388] = {
					"Shadowed Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[18309] = {
					"Ethereal Scavenger", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[74834] = {
					"Web Wrap", -- [1]
					"Razorfen Downs", -- [2]
				},
				[10416] = {
					"Bile Spewer", -- [1]
					"Stratholme", -- [2]
				},
				[178624] = {
					"Mawsworn Sentry", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[33717] = {
					"Azure Consort", -- [1]
					"Ulduar", -- [2]
				},
				[54445] = {
					"Echo of Jaina", -- [1]
					"End Time", -- [2]
				},
				[177278] = {
					"Glittermint", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[54701] = {
					"Time-Twisted Huntress", -- [1]
					"End Time", -- [2]
				},
				[105196] = {
					"Brogozog", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[30338] = {
					"Ahn'kahar Swarmer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[55085] = {
					"Peroth'arn", -- [1]
					"Well of Eternity", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[16414] = {
					"Ghostly Steward", -- [1]
					"Karazhan", -- [2]
				},
				[98637] = {
					"Ancient Widow", -- [1]
					"Black Rook Hold", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[169601] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[174208] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[78933] = {
					"Herald of Sunrise", -- [1]
					"Skyreach", -- [2]
				},
				[6233] = {
					"Mechanized Sentry", -- [1]
					"Gnomeregan", -- [2]
				},
				[183934] = {
					"Dominated Core", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[39985] = {
					"Mad Prisoner", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[11120] = {
					"Risen Hammersmith", -- [1]
					"Stratholme", -- [2]
				},
				[56877] = {
					"Raigonn", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Halls of Atonement", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[6329] = {
					"Irradiated Pillager", -- [1]
					"Gnomeregan", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[9201] = {
					"Spirestone Ogre Magus", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[57773] = {
					"Kohcrom", -- [1]
					"Dragon Soul", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[22876] = {
					"Coilskar Soothsayer", -- [1]
					"Black Temple", -- [2]
				},
				[183424] = {
					"Virtuous Gentleman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
				},
				[76116] = {
					"Diving Chakram Spinner", -- [1]
					"Skyreach", -- [2]
				},
				[23196] = {
					"Bonechewer Behemoth", -- [1]
					"Black Temple", -- [2]
				},
				[17477] = {
					"Hellfire Imp", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[76884] = {
					"Cruelfang", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77140] = {
					"Amaukwa", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[179330] = {
					"Plague Deviser Marileth", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[11792] = {
					"Putridus Shadowstalker", -- [1]
					"Maraudon", -- [2]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[90705] = {
					"Dread Commander Arganoth", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[94190] = {
					"Burning Sentry", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[78932] = {
					"Driving Gale-Caller", -- [1]
					"Skyreach", -- [2]
				},
				[178819] = {
					"Ice Wall", -- [1]
					"Eye of the Storm", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[12048] = {
					"Alliance Sentinel", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[16175] = {
					"Vampiric Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[39987] = {
					"Evolved Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[131731] = {
					"Sown Lasher", -- [1]
					"Waycrest Manor", -- [2]
				},
				[167564] = {
					"Fel'endae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[114252] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[44977] = {
					"Neferset Torturer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[98384] = {
					"Razormouth", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[177285] = {
					"Mawsworn Gatekeeper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[175238] = {
					"Arch-Tyrant Zerios", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33716] = {
					"Ruby Consort", -- [1]
					"Ulduar", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[177286] = {
					"Phantasmic Amalgamation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[88915] = {
					"Packmule", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[36788] = {
					"Deathwhisper Necrolyte", -- [1]
					"Pit of Saron", -- [2]
				},
				[9265] = {
					"Smolderthorn Shadow Hunter", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'nyy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[127050] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[25756] = {
					"Ahunite Coldwave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[74583] = {
					"Festering Spiderling", -- [1]
					"Razorfen Downs", -- [2]
				},
				[17694] = {
					"Shadowmoon Darkcaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[58108] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[78935] = {
					"Rubyspike Goren", -- [1]
					"Ashran", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[88404] = {
					"Lava Fury", -- [1]
					"Ashran", -- [2]
				},
				[83798] = {
					"Burning Ember", -- [1]
					"Ashran", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[113998] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[5139] = {
					"Kurdrum Barleybeard", -- [1]
					"Alterac Valley", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[13328] = {
					"Seasoned Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
				},
				[156814] = {
					"Gor'groth", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[74584] = {
					"Plague-Rotted Webslinger", -- [1]
					"Razorfen Downs", -- [2]
				},
				[13456] = {
					"Noxxion's Spawn", -- [1]
					"Maraudon", -- [2]
				},
				[75096] = {
					"Crystalline Aberration", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[94189] = {
					"Living Felblaze", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[65402] = {
					"Gurthan Swiftblade", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[76376] = {
					"Skyreach Arcanologist", -- [1]
					"Skyreach", -- [2]
				},
				[39450] = {
					"Trogg Dweller", -- [1]
					"Grim Batol", -- [2]
				},
				[40448] = {
					"Twilight Enforcer", -- [1]
					"Grim Batol", -- [2]
				},
				[124158] = {
					"Imonar the Soulhunter", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[162958] = {
					"Brandon Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[122367] = {
					"Admiral Svirax", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[176572] = {
					"Mawsworn Accursed", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[177291] = {
					"Mawsworn Corruptor", -- [1]
					"Eye of the Storm", -- [2]
				},
				[157328] = {
					"Darkmaul Channeler", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[78936] = {
					"Goren Iron-eater", -- [1]
					"Ashran", -- [2]
				},
				[120550] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[23965] = {
					"Frost Tomb", -- [1]
					"Utgarde Keep", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[88406] = {
					"Shadowy Shape", -- [1]
					"Ashran", -- [2]
				},
				[177292] = {
					"Mawsworn Mutilator", -- [1]
					"Eye of the Storm", -- [2]
				},
				[82201] = {
					"Kronus", -- [1]
					"Ashran", -- [2]
				},
				[177293] = {
					"Mawsworn Torturer", -- [1]
					"Eye of the Storm", -- [2]
				},
				[78832] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[36661] = {
					"Rimefang", -- [1]
					"Pit of Saron", -- [2]
				},
				[183947] = {
					"Empowered Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16415] = {
					"Skeletal Waiter", -- [1]
					"Karazhan", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[95061] = {
					"Greater Fire Elemental", -- [1]
					"Eye of the Storm", -- [2]
				},
				[10385] = {
					"Ghostly Citizen", -- [1]
					"Stratholme", -- [2]
				},
				[10417] = {
					"Venom Belcher", -- [1]
					"Stratholme", -- [2]
				},
				[124164] = {
					"Torment of Golganneth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[33846] = {
					"Dark Rune Sentinel", -- [1]
					"Ulduar", -- [2]
				},
				[7321] = {
					"Stonevault Flameweaver", -- [1]
					"Uldaman", -- [2]
				},
				[105299] = {
					"Recursive Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[165521] = {
					"Lady Inerva Darkvein", -- [1]
					"Castle Nathria", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[21140] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[162962] = {
					"Millie Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[100876] = {
					"Val'kyr Battlemaiden", -- [1]
					"Isle of Conquest", -- [2]
				},
				[127230] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[33719] = {
					"Emerald Consort", -- [1]
					"Ulduar", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[17695] = {
					"Shattered Hand Assassin", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[60208] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[116561] = {
					"Unbound Pyrelord", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[156821] = {
					"Darkmaul Shadowcaller", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[23235] = {
					"Bonechewer Blade Fury", -- [1]
					"Black Temple", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[46260] = {
					"Searing Destroyer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[44980] = {
					"Neferset Theurgist", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[175546] = {
					"Timecap'n Hooktail", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[136347] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[119633] = {
					"Fel Imp", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
				},
				[22878] = {
					"Aqueous Lord", -- [1]
					"Black Temple", -- [2]
				},
				[11473] = {
					"Eldreth Spectre", -- [1]
					"Dire Maul", -- [2]
				},
				[116562] = {
					"Flamewaker Centurion", -- [1]
					"Return to Karazhan", -- [2]
				},
				[31260] = {
					"Ymirjar Skycaller", -- [1]
					"Pit of Saron", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[7849] = {
					"Mobile Alert System", -- [1]
					"Gnomeregan", -- [2]
				},
				[105301] = {
					"Expedient Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[104534] = {
					"D'zorykx the Trapper", -- [1]
					"The Nighthold", -- [2]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[156825] = {
					"Darkmaul Centurion", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[74480] = {
					"Splinterbone Shadowcaster", -- [1]
					"Razorfen Downs", -- [2]
				},
				[160407] = {
					"Bonearmed Decapitator", -- [1]
					"Plaguefall", -- [2]
				},
				[15952] = {
					"Maexxna", -- [1]
					"Naxxramas", -- [2]
				},
				[56754] = {
					"Azure Serpent", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[102377] = {
					"Fel Inciter", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[52019] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[116563] = {
					"Ancient Core Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[39990] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[16176] = {
					"Shadowbeast", -- [1]
					"Karazhan", -- [2]
				},
				[36151] = {
					"Navigator Taylor", -- [1]
					"Isle of Conquest", -- [2]
				},
				[60849] = {
					"Jade Serpent Statue", -- [1]
					"Warsong Gulch", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[114516] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[114260] = {
					"Mrrgria", -- [1]
					"Return to Karazhan", -- [2]
				},
				[44981] = {
					"Oathsworn Skinner", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[16544] = {
					"Ethereal Thief", -- [1]
					"Karazhan", -- [2]
				},
				[177813] = {
					"Mawchained Demolisher", -- [1]
					"Twin Peaks", -- [2]
				},
				[40447] = {
					"Chains of Woe", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[83804] = {
					"Ashmaul Gutwrencher", -- [1]
					"Ashran", -- [2]
				},
				[171159] = {
					"Unraveling Soul Remnant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33720] = {
					"Obsidian Consort", -- [1]
					"Ulduar", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[46261] = {
					"Enraged Fire Elemental", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[97369] = {
					"Liquid Magma Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114261] = {
					"Toe Knee", -- [1]
					"Return to Karazhan", -- [2]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[17952] = {
					"Darkwater Crocolisk", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[39679] = {
					"Corla, Herald of Twilight", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[36152] = {
					"Navigator Saracen", -- [1]
					"Isle of Conquest", -- [2]
				},
				[83805] = {
					"Grom'kar Grimshot", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[44982] = {
					"Neferset Darkcaster", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[13137] = {
					"Lieutenant Rugba", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166043] = {
					"Truthbringer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[85341] = {
					"Lunarfall Raccoon", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[114262] = {
					"Attumen the Huntsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[13297] = {
					"Lieutenant Stouthandle", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[123476] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[9266] = {
					"Smolderthorn Witch Doctor", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[44976] = {
					"Neferset Plaguebringer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[22879] = {
					"Shadowmoon Reaver", -- [1]
					"Black Temple", -- [2]
				},
				[120405] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[83806] = {
					"Grom'kar Vanguard", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[46262] = {
					"Rumbling Earth", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[13617] = {
					"Stormpike Stable Master", -- [1]
					"Alterac Valley", -- [2]
				},
				[113239] = {
					"Gibbering Felspawn", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[58803] = {
					"Residual Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[16470] = {
					"Ghostly Philanthropist", -- [1]
					"Karazhan", -- [2]
				},
				[87359] = {
					"Kroshik", -- [1]
					"Ashran", -- [2]
				},
				[99675] = {
					"Enormous Stone Quilen", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[123477] = {
					"Antoran Doomguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[23775] = {
					"Head of the Horseman", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[166046] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[79200] = {
					"Blackrock Forge Specialist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[83807] = {
					"Burning Blademaster", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[179867] = {
					"Static Field Totem", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[180379] = {
					"Mawsworn Arbalest", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[33820] = {
					"Twilight Pyromancer", -- [1]
					"Ulduar", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56884] = {
					"Corrupted Taran Zhu", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[54699] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
				},
				[171166] = {
					"Unraveling Soul Remnant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77665] = {
					"Iron Soldier", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[123478] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16481] = {
					"Ghastly Haunt", -- [1]
					"Karazhan", -- [2]
				},
				[16545] = {
					"Ethereal Spellfilcher", -- [1]
					"Karazhan", -- [2]
				},
				[109604] = {
					"Felguard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[10418] = {
					"Risen Guardsman", -- [1]
					"Stratholme", -- [2]
				},
				[99676] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[114265] = {
					"Gang Ruffian", -- [1]
					"Return to Karazhan", -- [2]
				},
				[33722] = {
					"Storm Tempered Keeper", -- [1]
					"Ulduar", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[46263] = {
					"Slag Fury", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[82530] = {
					"Mandragora", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[34234] = {
					"Runeforged Sentry", -- [1]
					"Ulduar", -- [2]
				},
				[11058] = {
					"Fras Siabi", -- [1]
					"Stratholme", -- [2]
				},
				[16194] = {
					"Unholy Axe", -- [1]
					"Naxxramas", -- [2]
				},
				[42808] = {
					"Stonecore Flayer", -- [1]
					"The Stonecore", -- [2]
				},
				[85856] = {
					"Bloodthirsty Axebeak", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
				},
				[46264] = {
					"Lord Overheat", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168098] = {
					"Empowered Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[76132] = {
					"Soaring Chakram Master", -- [1]
					"Skyreach", -- [2]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114522] = {
					"Mrs. Cauldrons", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[123480] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Theater of Pain", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[22880] = {
					"Shadowmoon Champion", -- [1]
					"Black Temple", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16145] = {
					"Death Knight Captain", -- [1]
					"Naxxramas", -- [2]
				},
				[180385] = {
					"Condemned Soul Remnant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[11602] = {
					"Irondeep Skullthumper", -- [1]
					"Alterac Valley", -- [2]
				},
				[97119] = {
					"Shroud Hound", -- [1]
					"Maw of Souls", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19873] = {
					"Lord Crispin Ference", -- [1]
					"Karazhan", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[15953] = {
					"Grand Widow Faerlina", -- [1]
					"Naxxramas", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[107101] = {
					"Fel Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Eye of the Storm", -- [2]
				},
				[16017] = {
					"Patchwork Golem", -- [1]
					"Naxxramas", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83811] = {
					"Fireblade Invoker", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[12050] = {
					"Stormpike Defender", -- [1]
					"Alterac Valley", -- [2]
				},
				[16177] = {
					"Dreadbeast", -- [1]
					"Karazhan", -- [2]
				},
				[16011] = {
					"Loatheb", -- [1]
					"Naxxramas", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[33818] = {
					"Twilight Adherent", -- [1]
					"Ulduar", -- [2]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[39960] = {
					"Deep Murloc Drudge", -- [1]
					"Throne of the Tides", -- [2]
				},
				[11469] = {
					"Eldreth Seether", -- [1]
					"Dire Maul", -- [2]
				},
				[17301] = {
					"Shattered Hand Executioner", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[16482] = {
					"Trapped Soul", -- [1]
					"Karazhan", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[180389] = {
					"Mawsworn Rageguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Eye of the Storm", -- [2]
				},
				[75110] = {
					"Razorfen Torchbearer", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83812] = {
					"Ashmaul Enforcer", -- [1]
					"Ashran", -- [2]
				},
				[112733] = {
					"Venomhide Shadowspinner", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[80485] = {
					"Shani Freezewind", -- [1]
					"Ashran", -- [2]
				},
				[177830] = {
					"Mawsworn Gatekeeper", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[79462] = {
					"Blinding Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[42810] = {
					"Crystalspawn Giant", -- [1]
					"The Stonecore", -- [2]
				},
				[84202] = {
					"Rescued Vanguard Priest", -- [1]
					"Ashran", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[177831] = {
					"Mawchained Deadeye", -- [1]
					"Twin Peaks", -- [2]
				},
				[83690] = {
					"Panthran Witchdoctor", -- [1]
					"Ashran", -- [2]
				},
				[31104] = {
					"Ahn'kahar Watcher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[30111] = {
					"Twilight Worshipper", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156333] = {
					"Darkturned Pupil", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[13138] = {
					"Lieutenant Spencer", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[84837] = {
					"Marsh Creature", -- [1]
					"Ashran", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[114526] = {
					"Ghostly Understudy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[9267] = {
					"Smolderthorn Axe Thrower", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[79463] = {
					"Radiant Supernova", -- [1]
					"Skyreach", -- [2]
				},
				[177833] = {
					"Mawchained Rampager", -- [1]
					"Twin Peaks", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[22945] = {
					"Shadowmoon Blood Mage", -- [1]
					"Black Temple", -- [2]
				},
				[116574] = {
					"Silver Forks", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18371] = {
					"Shirrak the Dead Watcher", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[168110] = {
					"Empowered Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[58807] = {
					"Vestige of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[97510] = {
					"Soulbound Destructor", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76267] = {
					"Solar Zealot", -- [1]
					"Skyreach", -- [2]
				},
				[11043] = {
					"Risen Monk", -- [1]
					"Stratholme", -- [2]
				},
				[126558] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[11475] = {
					"Eldreth Phantasm", -- [1]
					"Dire Maul", -- [2]
				},
				[79208] = {
					"Blackrock Enforcer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[172205] = {
					"Bone Thrall", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[84327] = {
					"Skeletal Warrior", -- [1]
					"Ashran", -- [2]
				},
				[56249] = {
					"Twilight Assaulter", -- [1]
					"Dragon Soul", -- [2]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[80490] = {
					"Mindbender Talbadar", -- [1]
					"Ashran", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[61239] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[122718] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168111] = {
					"Empowered Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[61240] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[33214] = {
					"Mechanolift 304-A", -- [1]
					"Ulduar", -- [2]
				},
				[10387] = {
					"Vengeful Phantom", -- [1]
					"Stratholme", -- [2]
				},
				[10419] = {
					"Risen Conjuror", -- [1]
					"Stratholme", -- [2]
				},
				[16803] = {
					"Death Knight Understudy", -- [1]
					"Naxxramas", -- [2]
				},
				[7290] = {
					"Shadowforge Sharpshooter", -- [1]
					"Uldaman", -- [2]
				},
				[168112] = {
					"General Kaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[172210] = {
					"Madstitch Fleshcrafter", -- [1]
					"Alterac Valley", -- [2]
				},
				[42428] = {
					"Devout Follower", -- [1]
					"The Stonecore", -- [2]
				},
				[76906] = {
					"Operator Thogar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[178862] = {
					"Screamspike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[1863] = {
					"Aellia", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[74347] = {
					"Mordresh Fire Eye", -- [1]
					"Razorfen Downs", -- [2]
				},
				[79467] = {
					"Adept of the Dawn", -- [1]
					"Skyreach", -- [2]
				},
				[33855] = {
					"Junk Bot", -- [1]
					"Ulduar", -- [2]
				},
				[64183] = {
					"Enormous Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[30176] = {
					"Ahn'kahar Guardian", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[112738] = {
					"Acolyte of Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[11603] = {
					"Whitewhisker Digger", -- [1]
					"Alterac Valley", -- [2]
				},
				[125535] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[84841] = {
					"Iron Dockworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11859] = {
					"Doomguard", -- [1]
					"Alterac Valley", -- [2]
				},
				[179890] = {
					"Executioner Varruth", -- [1]
					"De Other Side", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[183983] = {
					"Dominated Attendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[76266] = {
					"High Sage Viryx", -- [1]
					"Skyreach", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[128095] = {
					"Sister of the Lash", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[22882] = {
					"Shadowmoon Deathshaper", -- [1]
					"Black Temple", -- [2]
				},
				[22946] = {
					"Shadowmoon War Hound", -- [1]
					"Black Temple", -- [2]
				},
				[104293] = {
					"Avatar of Shadow", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33983] = {
					"Constrictor Tentacle", -- [1]
					"Ulduar", -- [2]
				},
				[80491] = {
					"Elementalist Novo", -- [1]
					"Ashran", -- [2]
				},
				[19875] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Karazhan", -- [2]
				},
				[179891] = {
					"Soggodon the Breaker", -- [1]
					"De Other Side", -- [2]
				},
				[23394] = {
					"Promenade Sentinel", -- [1]
					"Black Temple", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[102246] = {
					"Anub'esset", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[12051] = {
					"Frostwolf Legionnaire", -- [1]
					"Alterac Valley", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[15954] = {
					"Noth the Plaguebringer", -- [1]
					"Naxxramas", -- [2]
				},
				[16178] = {
					"Phase Hound", -- [1]
					"Karazhan", -- [2]
				},
				[16018] = {
					"Bile Retcher", -- [1]
					"Naxxramas", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
				},
				[56250] = {
					"Twilight Assaulter", -- [1]
					"Dragon Soul", -- [2]
				},
				[16146] = {
					"Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[76141] = {
					"Araknath", -- [1]
					"Skyreach", -- [2]
				},
				[173238] = {
					"Deadsoul Strider", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56890] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Spires of Ascension", -- [2]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[179892] = {
					"Oros Coldheart", -- [1]
					"De Other Side", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[24674] = {
					"Phoenix", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[33088] = {
					"Iron Roots", -- [1]
					"Ulduar", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[179116] = {
					"Hunt-Captain Korayn", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[79469] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[179893] = {
					"Cartel Skulker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[112741] = {
					"Wrathguard Decimator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[17380] = {
					"Broggok", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17892] = {
					"Infinite Chronomancer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[58810] = {
					"Fragment of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[32639] = {
					"Gnimo", -- [1]
					"Eye of the Storm", -- [2]
				},
				[17252] = {
					"Felguard", -- [1]
					"Ashran", -- [2]
				},
				[122467] = {
					"Asara, Mother of Night", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[179894] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178604] = {
					"Mawsworn Swarmer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[152253] = {
					"The Tarragrue", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165050] = {
					"Rotbriar Scrapper", -- [1]
					"Warsong Gulch", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[61242] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[56251] = {
					"Twilight Assaulter", -- [1]
					"Dragon Soul", -- [2]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76143] = {
					"Rukhran", -- [1]
					"Skyreach", -- [2]
				},
				[13139] = {
					"Commander Randolph", -- [1]
					"Alterac Valley", -- [2]
				},
				[56763] = {
					"Regenerating Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[114790] = {
					"Viz'aduum the Watcher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[101994] = {
					"Faceless Tendril", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[30625] = {
					"Satellites", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13299] = {
					"Lieutenant Lonadin", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[9236] = {
					"Shadow Hunter Vosh'gajin", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[9268] = {
					"Smolderthorn Berserker", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[179386] = {
					"Corsair Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[9716] = {
					"Bloodaxe Warmonger", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[22883] = {
					"Aqueous Spawn", -- [1]
					"Black Temple", -- [2]
				},
				[22947] = {
					"Mother Shahraz", -- [1]
					"Black Temple", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[59835] = {
					"Krik'thik Swarmer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[33985] = {
					"Corruptor Tentacle", -- [1]
					"Ulduar", -- [2]
				},
				[19876] = {
					"Lord Robin Daris", -- [1]
					"Karazhan", -- [2]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[122469] = {
					"Diima, Mother of Gloom", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[23523] = {
					"Ashtongue Elementalist", -- [1]
					"Black Temple", -- [2]
				},
				[77936] = {
					"Greater Storm Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[24675] = {
					"Phoenix Egg", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[173756] = {
					"Ksi", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[183209] = {
					"Soulseeker", -- [1]
					"Path of the Primus", -- [2]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[95852] = {
					"Nathanos Blightcaller", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[172221] = {
					"Wretched Assistant", -- [1]
					"Alterac Valley", -- [2]
				},
				[76145] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[56636] = {
					"Commander Ri'mok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56764] = {
					"Consuming Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				[61243] = {
					"Gekkan", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114792] = {
					"Virtuous Lady", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16485] = {
					"Arcane Watchman", -- [1]
					"Karazhan", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Alterac Valley", -- [2]
				},
				[76877] = {
					"Gruul", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[10420] = {
					"Risen Initiate", -- [1]
					"Stratholme", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[175806] = {
					"So'azmi", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[10516] = {
					"The Unforgiven", -- [1]
					"Stratholme", -- [2]
				},
				[76146] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[54589] = {
					"Enchanted Highmistress", -- [1]
					"Well of Eternity", -- [2]
				},
				[58812] = {
					"Hateful Essence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[17381] = {
					"The Maker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[81522] = {
					"Witherbark", -- [1]
					"The Everbloom", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[102253] = {
					"Understone Demolisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[22849] = {
					"Ashtongue Feral Spirit", -- [1]
					"Black Temple", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[30114] = {
					"Twilight Initiate", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[17957] = {
					"Coilfang Champion", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[36162] = {
					"Goblin Engineering Crew", -- [1]
					"Isle of Conquest", -- [2]
				},
				[76659] = {
					"Ancient Spirit", -- [1]
					"Ashran", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[18341] = {
					"Pandemonius", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114794] = {
					"Skeletal Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
				},
				[165060] = {
					"Anima Cell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22948] = {
					"Gurtogg Bloodboil", -- [1]
					"Black Temple", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
				},
				[22884] = {
					"Leviathan", -- [1]
					"Black Temple", -- [2]
				},
				[11476] = {
					"Skeletal Highborne", -- [1]
					"Dire Maul", -- [2]
				},
				[13282] = {
					"Noxxion", -- [1]
					"Maraudon", -- [2]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80499] = {
					"Avenger Turley", -- [1]
					"Ashran", -- [2]
				},
				[13218] = {
					"Grunnda Wolfheart", -- [1]
					"Alterac Valley", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[87780] = {
					"Slagshop Brute", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[23524] = {
					"Ashtongue Spiritbinder", -- [1]
					"Black Temple", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[169157] = {
					"Mudlump", -- [1]
					"Castle Nathria", -- [2]
				},
				[136398] = {
					"Illidari Satyr", -- [1]
					"Ashran", -- [2]
				},
				[171433] = {
					"Suppressor Cer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114284] = {
					"Elfyra", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80500] = {
					"Taylor Dewland", -- [1]
					"Ashran", -- [2]
				},
				[56766] = {
					"Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[88178] = {
					"Jeron Emberfall", -- [1]
					"Ashran", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[125545] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16243] = {
					"Plague Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[45377] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[6235] = {
					"Electrocutioner 6000", -- [1]
					"Gnomeregan", -- [2]
				},
				[6219] = {
					"Corrosive Lurker", -- [1]
					"Gnomeregan", -- [2]
				},
				[87411] = {
					"Workshop Guardian", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[157145] = {
					"Gravitas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136402] = {
					"Ur'zul", -- [1]
					"Isle of Conquest", -- [2]
				},
				[36164] = {
					"Kor'kron Reaver", -- [1]
					"Isle of Conquest", -- [2]
				},
				[88435] = {
					"Guardian of the Forge", -- [1]
					"Ashran", -- [2]
				},
				[157099] = {
					"Imperial Censor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[136401] = {
					"Eye of Gul'dan", -- [1]
					"Ashran", -- [2]
				},
				[77687] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114541] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[84341] = {
					"Moonshell Crawler", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[156364] = {
					"Congealed Pride", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[13140] = {
					"Commander Dardosh", -- [1]
					"Alterac Valley", -- [2]
				},
				[64061] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[9237] = {
					"War Master Voone", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[30179] = {
					"Twilight Apostle", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[17958] = {
					"Coilfang Defender", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[56767] = {
					"Shado-Pan Fire Archer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56895] = {
					"Weak Spot", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[13236] = {
					"Primalist Thurloga", -- [1]
					"Alterac Valley", -- [2]
				},
				[45378] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[13300] = {
					"Lieutenant Mancuso", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[45122] = {
					"Oathsworn Captain", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[9269] = {
					"Smolderthorn Seer", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[136403] = {
					"Void Terror", -- [1]
					"Ashran", -- [2]
				},
				[119515] = {
					"Foul Dreadbringer", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[22885] = {
					"Dragon Turtle", -- [1]
					"Black Temple", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[177645] = {
					"Melded Gorger", -- [1]
					"Twin Peaks", -- [2]
				},
				[18982] = {
					"Sable Jaguar", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[136404] = {
					"Bilescourge", -- [1]
					"Twin Peaks", -- [2]
				},
				[23397] = {
					"Illidari Blood Lord", -- [1]
					"Black Temple", -- [2]
				},
				[136406] = {
					"Shivarra", -- [1]
					"Ashran", -- [2]
				},
				[42691] = {
					"Stonecore Rift Conjurer", -- [1]
					"The Stonecore", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[9717] = {
					"Bloodaxe Summoner", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
				},
				[82295] = {
					"Gronn Pulverizer", -- [1]
					"Ashran", -- [2]
				},
				[39236] = {
					"Poison Extraction Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[90997] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[32638] = {
					"Hakmud of Argus", -- [1]
					"Eye of the Storm", -- [2]
				},
				[125549] = {
					"Hungering Stalker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
				},
				[184010] = {
					"Oracle of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180427] = {
					"Loom Guardian", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104818] = {
					"Ancestral Protection Totem", -- [1]
					"Silvershard Mines", -- [2]
				},
				[36165] = {
					"7th Legion Deckhand", -- [1]
					"Isle of Conquest", -- [2]
				},
				[16807] = {
					"Grand Warlock Nethekurse", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[45379] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[122478] = {
					"Void Discharge", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180428] = {
					"Tortured Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74875] = {
					"Death Speaker Blackthorn", -- [1]
					"Razorfen Downs", -- [2]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[33350] = {
					"Mimiron", -- [1]
					"Ulduar", -- [2]
				},
				[10421] = {
					"Risen Defender", -- [1]
					"Stratholme", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[7291] = {
					"Galgann Firehammer", -- [1]
					"Uldaman", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[76154] = {
					"Skyreach Raven Whisperer", -- [1]
					"Skyreach", -- [2]
				},
				[136408] = {
					"Darkhound", -- [1]
					"Eye of the Storm", -- [2]
				},
				[121711] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[42692] = {
					"Stonecore Bruiser", -- [1]
					"The Stonecore", -- [2]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[183202] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[114801] = {
					"Spectral Apprentice", -- [1]
					"Return to Karazhan", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[123503] = {
					"Torment of Norgannon", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[74620] = {
					"Battle Boar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[64063] = {
					"Mogu'shan Arcanist", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[165798] = {
					"Necromancer Ritualist", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[10997] = {
					"Willey Hopebreaker", -- [1]
					"Stratholme", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[36166] = {
					"7th Legion Marine", -- [1]
					"Isle of Conquest", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[22950] = {
					"High Nethermancer Zerevor", -- [1]
					"Black Temple", -- [2]
				},
				[23398] = {
					"Angered Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[18343] = {
					"Tavarok", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[77692] = {
					"Kromog", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[114802] = {
					"Spectral Journeyman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[63808] = {
					"Faintly Glowing Gem", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[123760] = {
					"Fel-Infused Destructor", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16020] = {
					"Mad Scientist", -- [1]
					"Naxxramas", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[16148] = {
					"Spectral Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[11605] = {
					"Whitewhisker Overseer", -- [1]
					"Alterac Valley", -- [2]
				},
				[84859] = {
					"Iron Cleaver", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[72829] = {
					"Podling Bopper", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[93560] = {
					"Deathweaver Cassandra", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[7915] = {
					"Walking Bomb", -- [1]
					"Gnomeregan", -- [2]
				},
				[126832] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[15956] = {
					"Anub'Rekhan", -- [1]
					"Naxxramas", -- [2]
				},
				[91001] = {
					"Tarspitter Lurker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[120793] = {
					"Mephistroth", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[177365] = {
					"Trained Flayedwing", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[87521] = {
					"Iron Slag-Shaper", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[12053] = {
					"Frostwolf Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[16244] = {
					"Infectious Ghoul", -- [1]
					"Naxxramas", -- [2]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[16808] = {
					"Warchief Kargath Bladefist", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[16424] = {
					"Spectral Sentry", -- [1]
					"Karazhan", -- [2]
				},
				[16488] = {
					"Arcane Anomaly", -- [1]
					"Karazhan", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[119923] = {
					"Helblaze Soulmender", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[115418] = {
					"Spider", -- [1]
					"Return to Karazhan", -- [2]
				},
				[95865] = {
					"Stormshield Miner", -- [1]
					"Ashran", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[92538] = {
					"Tarspitter Grub", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[160474] = {
					"Fleshsewn Scavenger", -- [1]
					"Plaguefall", -- [2]
				},
				[44819] = {
					"Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[84860] = {
					"Iron Earthbinder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[77182] = {
					"Oregorger", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[57333] = {
					"Acidic Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[59458] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
				},
				[111222] = {
					"Demonic Essence", -- [1]
					"The Nighthold", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[30245] = {
					"Nexus Lord", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[182687] = {
					"Dreadlord Infiltrator", -- [1]
					"Path of the Primus", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[285] = {
					"Murloc", -- [1]
					"Maraudon", -- [2]
				},
				[17960] = {
					"Coilfang Soothsayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[84349] = {
					"Marsh Monstrosity", -- [1]
					"Ashran", -- [2]
				},
				[13141] = {
					"Deeprot Stomper", -- [1]
					"Maraudon", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[93563] = {
					"Cauldronmaster Mills", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[61250] = {
					"Sorcerer Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[61634] = {
					"Commander Vo'jak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[166620] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[119157] = {
					"Felguard", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[13397] = {
					"Irondeep Peon", -- [1]
					"Alterac Valley", -- [2]
				},
				[91004] = {
					"Ularogg Cragshaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
				},
				[22887] = {
					"High Warlord Naj'entus", -- [1]
					"Black Temple", -- [2]
				},
				[22951] = {
					"Lady Malande", -- [1]
					"Black Temple", -- [2]
				},
				[42695] = {
					"Stonecore Sentry", -- [1]
					"The Stonecore", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[84350] = {
					"Podling Poker", -- [1]
					"Ashran", -- [2]
				},
				[80511] = {
					"Power Geode", -- [1]
					"Ashran", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178394] = {
					"Cartel Lackey", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[91005] = {
					"Naraxas", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[4860] = {
					"Stone Steward", -- [1]
					"Uldaman", -- [2]
				},
				[59459] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[87520] = {
					"Animated Slag", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[173276] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[35273] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				[115831] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[14763] = {
					"Dun Baldar South Marshal", -- [1]
					"Alterac Valley", -- [2]
				},
				[178079] = {
					"The Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[173261] = {
					"Inert Butcher", -- [1]
					"Alterac Valley", -- [2]
				},
				[172142] = {
					"Baroness Ninadar", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[177372] = {
					"Mawsworn Realmbinder", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[33354] = {
					"Corrupted Servitor", -- [1]
					"Ulduar", -- [2]
				},
				[42696] = {
					"Stonecore Warbringer", -- [1]
					"The Stonecore", -- [2]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
				},
				[44999] = {
					"Shen'dralar Watcher", -- [1]
					"Dire Maul", -- [2]
				},
				[16425] = {
					"Phantom Guardsman", -- [1]
					"Karazhan", -- [2]
				},
				[16489] = {
					"Chaotic Sentience", -- [1]
					"Karazhan", -- [2]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[10390] = {
					"Skeletal Guardian", -- [1]
					"Stratholme", -- [2]
				},
				[10422] = {
					"Risen Sorcerer", -- [1]
					"Stratholme", -- [2]
				},
				[16809] = {
					"Warbringer O'mrogg", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[83840] = {
					"Sand Snapper", -- [1]
					"Ashran", -- [2]
				},
				[172255] = {
					"Gravestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[11030] = {
					"Mindless Undead", -- [1]
					"Stratholme", -- [2]
				},
				[74371] = {
					"Splinterbone Captain", -- [1]
					"Razorfen Downs", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[54853] = {
					"Queen Azshara", -- [1]
					"Well of Eternity", -- [2]
				},
				[14773] = {
					"Iceblood Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[17961] = {
					"Coilfang Enchantress", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59460] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173280] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[78978] = {
					"Darkshard Gnasher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[39625] = {
					"General Umbriss", -- [1]
					"Grim Batol", -- [2]
				},
				[88448] = {
					"Belloc Brightblade", -- [1]
					"Ashran", -- [2]
				},
				[54517] = {
					"Time-Twisted Shadowtalon", -- [1]
					"End Time", -- [2]
				},
				[84097] = {
					"Boneshallow Spider", -- [1]
					"Ashran", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76675] = {
					"Spirit Binder", -- [1]
					"Ashran", -- [2]
				},
				[126071] = {
					"Ancient Brood Mother", -- [1]
					"Alterac Valley", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[22952] = {
					"Veras Darkshadow", -- [1]
					"Black Temple", -- [2]
				},
				[102269] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[64068] = {
					"Mogu'shan Engine Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[33355] = {
					"Misguided Nymph", -- [1]
					"Ulduar", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[14465] = {
					"Alliance Battle Standard", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[131821] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				[165280] = {
					"Truthbringer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[119930] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[85122] = {
					"Malda Brewbelly", -- [1]
					"Ashran", -- [2]
				},
				[23400] = {
					"Illidari Archon", -- [1]
					"Black Temple", -- [2]
				},
				[39626] = {
					"Crimsonborne Warlord", -- [1]
					"Grim Batol", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[59461] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[90498] = {
					"Warspear Engineer", -- [1]
					"Ashran", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[16021] = {
					"Living Monstrosity", -- [1]
					"Naxxramas", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[45001] = {
					"Enslaved Bandit", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				[16149] = {
					"Spectral Horse", -- [1]
					"Naxxramas", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[92801] = {
					"Winged Nightmare", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[126073] = {
					"Felspawn Imp", -- [1]
					"Alterac Valley", -- [2]
				},
				[6220] = {
					"Irradiated Horror", -- [1]
					"Gnomeregan", -- [2]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24552] = {
					"Sliver", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[173469] = {
					"Kullan", -- [1]
					"Castle Nathria", -- [2]
				},
				[82308] = {
					"Shadowmoon Stalker", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[24744] = {
					"Vexallus", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[74886] = {
					"Ashmaul Bruiser", -- [1]
					"Ashran", -- [2]
				},
				[102271] = {
					"Spitting Scarab", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[36886] = {
					"Geist Ambusher", -- [1]
					"Pit of Saron", -- [2]
				},
				[163281] = {
					"Darkvowed Scryer", -- [1]
					"Theater of Pain", -- [2]
				},
				[50376] = {
					"Angered Earth", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				[102270] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[102272] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[179942] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
				},
				[90499] = {
					"Warspear Shredder", -- [1]
					"Ashran", -- [2]
				},
				[417] = {
					"Khiifenn", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[17962] = {
					"Coilfang Collaborator", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[26536] = {
					"Mindless Servant", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[9239] = {
					"Smolderthorn Mystic", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[40011] = {
					"Spot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[44234] = {
					"Vicious Leech", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[13142] = {
					"Deeprot Tangler", -- [1]
					"Maraudon", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
				},
				[154016] = {
					"Prisonbreak Soulmender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19306] = {
					"Mana Leech", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[57159] = {
					"Earthen Soldier", -- [1]
					"Dragon Soul", -- [2]
				},
				[102273] = {
					"Doomguard Infiltrator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[32845] = {
					"Hodir", -- [1]
					"Ulduar", -- [2]
				},
				[82310] = {
					"Stonehide Riverbeast", -- [1]
					"Ashran", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
				},
				[173802] = {
					"Carved Assistant", -- [1]
					"Castle Nathria", -- [2]
				},
				[23401] = {
					"Hungering Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[40268] = {
					"Twilight War-Mage", -- [1]
					"Grim Batol", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
				},
				[84102] = {
					"Cadaverous Vulture", -- [1]
					"Ashran", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Eye of the Storm", -- [2]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[176538] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[23337] = {
					"Illidari Centurion", -- [1]
					"Black Temple", -- [2]
				},
				[85382] = {
					"Wrynn's Vanguard Battle Standard", -- [1]
					"Ashran", -- [2]
				},
				[179434] = {
					"Mawsworn Doubtcaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156913] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[184043] = {
					"Excavation Leader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[22847] = {
					"Ashtongue Primalist", -- [1]
					"Black Temple", -- [2]
				},
				[151795] = {
					"Commander Zanneth", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[173466] = {
					"Fara", -- [1]
					"Castle Nathria", -- [2]
				},
				[59464] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[84359] = {
					"Grom'kar Shadowblade", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[173293] = {
					"Lady Audat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113536] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[126333] = {
					"Felseeker Ritualist", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[57160] = {
					"Ancient Water Lord", -- [1]
					"Dragon Soul", -- [2]
				},
				[24553] = {
					"Apoko", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16427] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Naxxramas", -- [2]
				},
				[45259] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[24745] = {
					"Pure Energy", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[7228] = {
					"Ironaya", -- [1]
					"Uldaman", -- [2]
				},
				[10391] = {
					"Skeletal Berserker", -- [1]
					"Stratholme", -- [2]
				},
				[10423] = {
					"Risen Priest", -- [1]
					"Stratholme", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[151796] = {
					"Knight Dameron", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[42188] = {
					"Ozruk", -- [1]
					"The Stonecore", -- [2]
				},
				[17067] = {
					"Phantom Hound", -- [1]
					"Karazhan", -- [2]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[40013] = {
					"Buster", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[73101] = {
					"Cursed Wolf", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151797] = {
					"Marshal Magruder", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[176879] = {
					"Hollowsoul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[177903] = {
					"Dominated Protector", -- [1]
					"Silvershard Mines", -- [2]
				},
				[18176] = {
					"Tainted Earthgrab Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17835] = {
					"Infinite Assassin", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[165275] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176880] = {
					"Soulscream Tormentor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[40269] = {
					"Enslaved Thunder Spirit", -- [1]
					"Grim Batol", -- [2]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
				},
				[17964] = {
					"Wastewalker Worker", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[171929] = {
					"Errant Stoneborn", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22954] = {
					"Illidari Fearbringer", -- [1]
					"Black Temple", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[19307] = {
					"Nexus Terror", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[30249] = {
					"Scion of Eternity", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[178071] = {
					"Maw Assassin", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[23018] = {
					"Shadowmoon Houndmaster", -- [1]
					"Black Temple", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[185584] = {
					"Blasphemy", -- [1]
					"Theater of Pain", -- [2]
				},
				[16022] = {
					"Surgical Assistant", -- [1]
					"Naxxramas", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[23402] = {
					"Illidari Battle-mage", -- [1]
					"Black Temple", -- [2]
				},
				[174325] = {
					"Ascended Lich", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[37711] = {
					"Hungering Ghoul", -- [1]
					"Pit of Saron", -- [2]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[86666] = {
					"Warspear Peon", -- [1]
					"Ashran", -- [2]
				},
				[15990] = {
					"Kel'Thuzad", -- [1]
					"Naxxramas", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[75149] = {
					"Aggem Thorncurse", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Eye of Azshara", -- [2]
				},
				[93834] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[16150] = {
					"Spectral Rider", -- [1]
					"Naxxramas", -- [2]
				},
				[40015] = {
					"Runty", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[84875] = {
					"Ancient Inferno", -- [1]
					"Ashran", -- [2]
				},
				[56906] = {
					"Saboteur Kip'tilak", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[13143] = {
					"Lieutenant Stronghoof", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[16428] = {
					"Unstoppable Abomination", -- [1]
					"Naxxramas", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[172282] = {
					"Web Wrap", -- [1]
					"Plaguefall", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[87515] = {
					"Iron Flame Binder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[16704] = {
					"Shattered Hand Sharpshooter", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
				},
				[108934] = {
					"Tainted Blood", -- [1]
					"The Nighthold", -- [2]
				},
				[125570] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[88971] = {
					"Magma Totem", -- [1]
					"Ashran", -- [2]
				},
				[78557] = {
					"Goren Hatchling", -- [1]
					"Ashran", -- [2]
				},
				[75152] = {
					"Death Speaker Jargba", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[179446] = {
					"Incinerator Arkolath", -- [1]
					"De Other Side", -- [2]
				},
				[114565] = {
					"Guardian of the Forgotten Queen", -- [1]
					"Alterac Valley", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[43214] = {
					"Slabhide", -- [1]
					"The Stonecore", -- [2]
				},
				[74383] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[177402] = {
					"Injured Hunter", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[23083] = {
					"Shadowmoon Riding Hound", -- [1]
					"Black Temple", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[56395] = {
					"Shado-Pan Novice", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[23403] = {
					"Illidari Assassin", -- [1]
					"Black Temple", -- [2]
				},
				[80526] = {
					"Stubborn Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[84877] = {
					"Ashmaul Stoneshaper", -- [1]
					"Ashran", -- [2]
				},
				[133379] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[102282] = {
					"Lord Malgath", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[76945] = {
					"Ironcrusher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[37713] = {
					"Deathwhisper Torturer", -- [1]
					"Pit of Saron", -- [2]
				},
				[9240] = {
					"Smolderthorn Shadow Priest", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[78735] = {
					"Zar'shuul", -- [1]
					"Auchindoun", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[22955] = {
					"Charming Courtesan", -- [1]
					"Black Temple", -- [2]
				},
				[79505] = {
					"Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[23147] = {
					"Shadowmoon Grunt", -- [1]
					"Black Temple", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[97163] = {
					"Cursed Falke", -- [1]
					"Maw of Souls", -- [2]
				},
				[23339] = {
					"Illidari Heartseeker", -- [1]
					"Black Temple", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[4861] = {
					"Shrike Bat", -- [1]
					"Uldaman", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77201] = {
					"Fireblade Invoker", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
				},
				[14327] = {
					"Lethtendris", -- [1]
					"Dire Maul", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[41040] = {
					"Twisted Visage", -- [1]
					"Grim Batol", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[140038] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				[40272] = {
					"Ascended Rockbreaker", -- [1]
					"Grim Batol", -- [2]
				},
				[176531] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[61131] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[114312] = {
					"Moroes", -- [1]
					"Return to Karazhan", -- [2]
				},
				[45007] = {
					"Enslaved Bandit", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[16429] = {
					"Soul Weaver", -- [1]
					"Naxxramas", -- [2]
				},
				[24683] = {
					"Sunblade Mage Guard", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[177405] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[77202] = {
					"Grom'kar Vanguard", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[10424] = {
					"Risen Gallant", -- [1]
					"Stratholme", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[143622] = {
					"Wild Imp", -- [1]
					"Twin Peaks", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[62795] = {
					"Sik'thik Warden", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[76946] = {
					"Faultline", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[40017] = {
					"Twilight Element Warden", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180990] = {
					"The Jailer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[74900] = {
					"Kraulshaper Tukaar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[40273] = {
					"Ascended Waterlasher", -- [1]
					"Grim Batol", -- [2]
				},
				[56781] = {
					"Goriona", -- [1]
					"Dragon Soul", -- [2]
				},
				[85137] = {
					"Mathias Zunn", -- [1]
					"Ashran", -- [2]
				},
				[77203] = {
					"Grom'kar Grimshot", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[179456] = {
					"Mawsworn Siphoner", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[11457] = {
					"Wildspawn Hellcaller", -- [1]
					"Dire Maul", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[33271] = {
					"General Vezax", -- [1]
					"Ulduar", -- [2]
				},
				[11480] = {
					"Arcane Aberration", -- [1]
					"Dire Maul", -- [2]
				},
				[77205] = {
					"Burning Blademaster", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16151] = {
					"Midnight", -- [1]
					"Karazhan", -- [2]
				},
				[18495] = {
					"Auchenai Vindicator", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[77204] = {
					"Grom'kar Shadowblade", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[166663] = {
					"Ilapos", -- [1]
					"Silvershard Mines", -- [2]
				},
				[24556] = {
					"Zelfan", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[99541] = {
					"Risen Skulker", -- [1]
					"Alterac Valley", -- [2]
				},
				[44404] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[182530] = {
					"Felsteel Interceptor", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[103822] = {
					"Treant", -- [1]
					"Eye of the Storm", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[39890] = {
					"Twilight Earthshaper", -- [1]
					"Grim Batol", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[16215] = {
					"Unholy Staff", -- [1]
					"Naxxramas", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[12216] = {
					"Poison Sprite", -- [1]
					"Maraudon", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[61389] = {
					"Kargesh Highguard", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[40019] = {
					"Twilight Obsidian Borer", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[24684] = {
					"Sunblade Blood Knight", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[9241] = {
					"Smolderthorn Headhunter", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[33236] = {
					"Steelforged Defender", -- [1]
					"Ulduar", -- [2]
				},
				[74902] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[3343] = {
					"Grelkor", -- [1]
					"Alterac Valley", -- [2]
				},
				[170385] = {
					"Writhing Misery", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[26796] = {
					"Commander Stoutbeard", -- [1]
					"The Nexus", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[166665] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[184069] = {
					"Dominated Excavator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84630] = {
					"Grom'kar Grenadier", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[80791] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[78233] = {
					"Darkshard Crystalback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75927] = {
					"Azzakel", -- [1]
					"Auchindoun", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[80534] = {
					"Ornery Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[13176] = {
					"Smith Regzar", -- [1]
					"Alterac Valley", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[77207] = {
					"Grom'kar Deadeye", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[114318] = {
					"Baron Rafe Dreuger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[123532] = {
					"Dark Keeper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[33237] = {
					"Ulduar Colossus", -- [1]
					"Ulduar", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[125837] = {
					"Torment of Aman'Thul", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176394] = {
					"P.O.S.T. Worker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[92564] = {
					"Mo'arg Painbringer", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[34133] = {
					"Champion of Hodir", -- [1]
					"Ulduar", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[58959] = {
					"Keprik", -- [1]
					"Isle of Conquest", -- [2]
				},
				[56912] = {
					"Krik'thik Engulfer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[23469] = {
					"Enslaved Soul", -- [1]
					"Black Temple", -- [2]
				},
				[100820] = {
					"Spirit Wolf", -- [1]
					"Eye of the Storm", -- [2]
				},
				[176395] = {
					"Overloaded Mailemental", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[123533] = {
					"Tarneth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[114320] = {
					"Lord Robin Daris", -- [1]
					"Return to Karazhan", -- [2]
				},
				[128140] = {
					"Lightspawn", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[156434] = {
					"Crippling Pride", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[39892] = {
					"Enslaved Burning Ember", -- [1]
					"Grim Batol", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[113552] = {
					"Overloaded Lens", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178956] = {
					"Terrified Veilwing", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[134423] = {
					"Abyss Dweller", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[24557] = {
					"Kagani Nightstrike", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24685] = {
					"Sunblade Magister", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[33110] = {
					"Dark Rune Acolyte", -- [1]
					"Ulduar", -- [2]
				},
				[178957] = {
					"Empowered Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[14776] = {
					"Tower Point Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[7309] = {
					"Earthen Custodian", -- [1]
					"Uldaman", -- [2]
				},
				[17007] = {
					"Lady Keira Berrybuck", -- [1]
					"Karazhan", -- [2]
				},
				[34134] = {
					"Winter Revenant", -- [1]
					"Ulduar", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[58960] = {
					"Daxiros", -- [1]
					"Isle of Conquest", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[114321] = {
					"Lord Crispin Ference", -- [1]
					"Return to Karazhan", -- [2]
				},
				[11477] = {
					"Rotting Highborne", -- [1]
					"Dire Maul", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[170257] = {
					"Broker Ve'nott", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[128142] = {
					"Voidling", -- [1]
					"Alterac Valley", -- [2]
				},
				[87448] = {
					"Ironworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[17839] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[40021] = {
					"Incendiary Spark", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[119952] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[49267] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[113554] = {
					"Astral Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[61392] = {
					"Harthak Flameseeker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[45268] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[165140] = {
					"Rotbriar Tormentor", -- [1]
					"Warsong Gulch", -- [2]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162953] = {
					"Sarah Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[74652] = {
					"Razorfen Thornbolt", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[34135] = {
					"Winter Rumbler", -- [1]
					"Ulduar", -- [2]
				},
				[113555] = {
					"Xalian Felblaze", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
				},
				[34775] = {
					"Demolisher", -- [1]
					"Isle of Conquest", -- [2]
				},
				[18331] = {
					"Ethereal Darkcaster", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[15928] = {
					"Thaddius", -- [1]
					"Naxxramas", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84878] = {
					"Ashmaul Pyromancer", -- [1]
					"Ashran", -- [2]
				},
				[16024] = {
					"Embalming Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[16056] = {
					"Diseased Maggot", -- [1]
					"Naxxramas", -- [2]
				},
				[76253] = {
					"Dread Raven Hatchling", -- [1]
					"Skyreach", -- [2]
				},
				[134060] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[16216] = {
					"Unholy Swords", -- [1]
					"Naxxramas", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56658] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[45269] = {
					"Servant of Siamat", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[130192] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[12217] = {
					"Corruptor", -- [1]
					"Maraudon", -- [2]
				},
				[100818] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[24558] = {
					"Ellrys Duskhallow", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[69791] = {
					"Xemise", -- [1]
					"Alterac Valley", -- [2]
				},
				[24686] = {
					"Sunblade Warlock", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169751] = {
					"Ashen Wasp", -- [1]
					"Theater of Pain", -- [2]
				},
				[105169] = {
					"Mephistroth", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[50417] = {
					"Bound Flames", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[173613] = {
					"Nathrian Registrar", -- [1]
					"Castle Nathria", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[40023] = {
					"Defiled Earth Rager", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[166169] = {
					"Adonias", -- [1]
					"Bastion Scenario", -- [2]
				},
				[33113] = {
					"Flame Leviathan", -- [1]
					"Ulduar", -- [2]
				},
				[22845] = {
					"Ashtongue Mystic", -- [1]
					"Black Temple", -- [2]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[166170] = {
					"Phaedra", -- [1]
					"Bastion Scenario", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[13081] = {
					"Irondeep Raider", -- [1]
					"Alterac Valley", -- [2]
				},
				[176920] = {
					"Domination Arrow", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13145] = {
					"Lieutenant Grummus", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[84893] = {
					"Goregore", -- [1]
					"Ashran", -- [2]
				},
				[56915] = {
					"Sun", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
				},
				[26798] = {
					"Commander Kolurg", -- [1]
					"The Nexus", -- [2]
				},
				[32857] = {
					"Stormcaller Brundir", -- [1]
					"Ulduar", -- [2]
				},
				[135971] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[179080] = {
					"Empowered Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13216] = {
					"Gaelden Hammersmith", -- [1]
					"Alterac Valley", -- [2]
				},
				[166684] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[22959] = {
					"Spellbound Attendant", -- [1]
					"Black Temple", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[54612] = {
					"Eternal Champion", -- [1]
					"Well of Eternity", -- [2]
				},
				[23215] = {
					"Ashtongue Sorcerer", -- [1]
					"Black Temple", -- [2]
				},
				[34137] = {
					"Winter Jormungar", -- [1]
					"Ulduar", -- [2]
				},
				[43438] = {
					"Corborus", -- [1]
					"The Stonecore", -- [2]
				},
				[13088] = {
					"Masha Swiftcut", -- [1]
					"Alterac Valley", -- [2]
				},
				[22949] = {
					"Gathios the Shatterer", -- [1]
					"Black Temple", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122773] = {
					"Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[13197] = {
					"Fel Lash", -- [1]
					"Dire Maul", -- [2]
				},
				[90525] = {
					"Eredar Chaos Guard", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[10425] = {
					"Risen Battle Mage", -- [1]
					"Stratholme", -- [2]
				},
				[166174] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[162591] = {
					"Ben Howell", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[67235] = {
					"Shadowfiend", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114328] = {
					"Coggleston", -- [1]
					"Return to Karazhan", -- [2]
				},
				[74146] = {
					"Podling Nibbler", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
				},
				[20208] = {
					"Mennu's Healing Ward", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[24815] = {
					"Sunblade Imp", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[61139] = {
					"Shan-xi Watershaper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[24559] = {
					"Warlord Salaris", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[5134] = {
					"Jonivera Farmountain", -- [1]
					"Alterac Valley", -- [2]
				},
				[24687] = {
					"Sunblade Physician", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[165664] = {
					"Befouler Ahnqat", -- [1]
					"Isle of Conquest", -- [2]
				},
				[10394] = {
					"Black Guard Sentry", -- [1]
					"Stratholme", -- [2]
				},
				[10426] = {
					"Risen Inquisitor", -- [1]
					"Stratholme", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[33754] = {
					"Dark Rune Thunderer", -- [1]
					"Ulduar", -- [2]
				},
				[166177] = {
					"Reinforced Pouncer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[21104] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[125590] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[177950] = {
					"Soul Prison", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[58964] = {
					"Kergok", -- [1]
					"Eye of the Storm", -- [2]
				},
				[14777] = {
					"West Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[114329] = {
					"Luminore", -- [1]
					"Return to Karazhan", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118303] = {
					"Charred Skeleton", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[18558] = {
					"Phasing Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[98973] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
				},
				[166178] = {
					"Forsworn Doubtguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[54511] = {
					"Time-Twisted Geist", -- [1]
					"End Time", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[88224] = {
					"Rylai Crestfall", -- [1]
					"Ashran", -- [2]
				},
				[22960] = {
					"Dragonmaw Wyrmcaller", -- [1]
					"Black Temple", -- [2]
				},
				[120779] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[153382] = {
					"Maw of the Maw", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33755] = {
					"Dark Rune Ravager", -- [1]
					"Ulduar", -- [2]
				},
				[158501] = {
					"Warmaster Laggrond", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[114330] = {
					"Babblet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[55510] = {
					"Abyssal Doombringer", -- [1]
					"Well of Eternity", -- [2]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26799] = {
					"Horde Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[102302] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[28859] = {
					"Malygos", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[45912] = {
					"Wild Vortex", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[15929] = {
					"Stalagg", -- [1]
					"Naxxramas", -- [2]
				},
				[153897] = {
					"Blingtron 7000", -- [1]
					"Alterac Valley", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[34267] = {
					"Parts Recovery Technician", -- [1]
					"Ulduar", -- [2]
				},
				[58965] = {
					"Dag-amal", -- [1]
					"Ashran", -- [2]
				},
				[81315] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77476] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[59605] = {
					"Sodden Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[163208] = {
					"Redelav Servant", -- [1]
					"Warsong Gulch", -- [2]
				},
				[155945] = {
					"Gherus the Chained", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16025] = {
					"Stitched Giant", -- [1]
					"Naxxramas", -- [2]
				},
				[79268] = {
					"Stormshield Footman", -- [1]
					"Ashran", -- [2]
				},
				[75429] = {
					"Quilboar Mealtender", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[88226] = {
					"Volcanic Fallout", -- [1]
					"Ashran", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[12122] = {
					"Duros", -- [1]
					"Alterac Valley", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[105630] = {
					"Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[12218] = {
					"Vile Larva", -- [1]
					"Maraudon", -- [2]
				},
				[77477] = {
					"Marak the Blooded", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[94113] = {
					"Rukmaz", -- [1]
					"Ashran", -- [2]
				},
				[182147] = {
					"Vicious Dreadstalker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[24688] = {
					"Wretched Skulker", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[6206] = {
					"Caverndeep Burrower", -- [1]
					"Gnomeregan", -- [2]
				},
				[6222] = {
					"Leprous Technician", -- [1]
					"Gnomeregan", -- [2]
				},
				[79269] = {
					"Warspear Grunt", -- [1]
					"Ashran", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[40306] = {
					"Twilight Armsmaster", -- [1]
					"Grim Batol", -- [2]
				},
				[108702] = {
					"Crimson Rockshell", -- [1]
					"Shield's Rest", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[84644] = {
					"Vilewing Rylak", -- [1]
					"Ashran", -- [2]
				},
				[97185] = {
					"The Grimewalker", -- [1]
					"Maw of Souls", -- [2]
				},
				[72871] = {
					"All-Seeing Eye", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[24560] = {
					"Priestess Delrissa", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[6017] = {
					"Lava Spout Totem", -- [1]
					"Uldaman", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[58198] = {
					"Shado-Pan Disciple", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[122778] = {
					"Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[12922] = {
					"Imp Minion", -- [1]
					"Ashran", -- [2]
				},
				[99233] = {
					"Ember", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[61398] = {
					"Xin the Weaponmaster", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[18994] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[30319] = {
					"Twilight Darkcaster", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13146] = {
					"Lieutenant Murp", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[34269] = {
					"XR-949 Salvagebot", -- [1]
					"Ulduar", -- [2]
				},
				[24561] = {
					"Yazzai", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[81318] = {
					"Iron Gunnery Sergeant", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[26800] = {
					"Alliance Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[22897] = {
					"Summoned Windfury Totem", -- [1]
					"Black Temple", -- [2]
				},
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[9499] = {
					"Plugger Spazzring", -- [1]
					"Blackrock Depths", -- [2]
				},
				[125340] = {
					"Shadewing", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[84646] = {
					"Ilya Plagueheart", -- [1]
					"Ashran", -- [2]
				},
				[165677] = {
					"Brittlebark Manifestation", -- [1]
					"Eye of the Storm", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Alterac Valley", -- [2]
				},
				[23420] = {
					"Essence of Anger", -- [1]
					"Black Temple", -- [2]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
				},
				[6910] = {
					"Revelosh", -- [1]
					"Uldaman", -- [2]
				},
				[59479] = {
					"Yan-Zhu the Uncasked", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[111008] = {
					"Hatespawn Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
				},
				[74411] = {
					"Death's Head Necrolyte", -- [1]
					"Razorfen Downs", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[117194] = {
					"Thrashbite the Scornful", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[60375] = {
					"Zandalari Skullcharger", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[160048] = {
					"Plaguedoused Remnant", -- [1]
					"Warsong Gulch", -- [2]
				},
				[176940] = {
					"Soulember", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[162096] = {
					"Adept Necromancer", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[11488] = {
					"Illyanna Ravenoak", -- [1]
					"Dire Maul", -- [2]
				},
				[61399] = {
					"Glintrok Scout", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[86183] = {
					"Beast", -- [1]
					"Ashran", -- [2]
				},
				[24689] = {
					"Wretched Bruiser", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[33118] = {
					"Ignis the Furnace Master", -- [1]
					"Ulduar", -- [2]
				},
				[11456] = {
					"Wildspawn Shadowstalker", -- [1]
					"Dire Maul", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133944] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[87719] = {
					"Ogron Hauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[22844] = {
					"Ashtongue Battlelord", -- [1]
					"Black Temple", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[34014] = {
					"Sanctum Sentry", -- [1]
					"Ulduar", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[84904] = {
					"Oraggro", -- [1]
					"Ashran", -- [2]
				},
				[81065] = {
					"Risen Brute", -- [1]
					"Ashran", -- [2]
				},
				[158515] = {
					"Lieutenant Haggerdin", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[17395] = {
					"Shadowmoon Summoner", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[1860] = {
					"Kal'vhug", -- [1]
					"Eye of the Storm", -- [2]
				},
				[10811] = {
					"Instructor Galford", -- [1]
					"Stratholme", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[18493] = {
					"Auchenai Soulpriest", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[40817] = {
					"Shadow of Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[173361] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[105636] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[11483] = {
					"Mana Remnant", -- [1]
					"Dire Maul", -- [2]
				},
				[114338] = {
					"Mana Confluence", -- [1]
					"Return to Karazhan", -- [2]
				},
				[36830] = {
					"Wrathbone Laborer", -- [1]
					"Pit of Saron", -- [2]
				},
				[105164] = {
					"Felgard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
				},
				[26801] = {
					"Horde Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[57817] = {
					"Stormborn Myrmidon", -- [1]
					"Dragon Soul", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[22898] = {
					"Supremus", -- [1]
					"Black Temple", -- [2]
				},
				[22962] = {
					"Priestess of Delight", -- [1]
					"Black Temple", -- [2]
				},
				[31216] = {
					"Sleepytu", -- [1]
					"Eye of the Storm", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[117193] = {
					"Agronox", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[42333] = {
					"High Priestess Azil", -- [1]
					"The Stonecore", -- [2]
				},
				[34271] = {
					"XD-175 Compactobot", -- [1]
					"Ulduar", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[74669] = {
					"Crystalfire Totem", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[118690] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[15930] = {
					"Feugen", -- [1]
					"Naxxramas", -- [2]
				},
				[16154] = {
					"Risen Squire", -- [1]
					"Naxxramas", -- [2]
				},
				[39390] = {
					"Twilight Drake", -- [1]
					"Grim Batol", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[76973] = {
					"Hans'gar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75437] = {
					"Quilboar Broodmentor", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[39665] = {
					"Rom'ogg Bonecrusher", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[76205] = {
					"Blooded Bladefeather", -- [1]
					"Skyreach", -- [2]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[125857] = {
					"Lashing Voidling", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[56922] = {
					"Twilight Infiltrator", -- [1]
					"Dragon Soul", -- [2]
				},
				[12219] = {
					"Barbed Lasher", -- [1]
					"Maraudon", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184109] = {
					"Remnant of Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24690] = {
					"Wretched Husk", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[44922] = {
					"Oathsworn Axemaster", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[34802] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[4255] = {
					"Brogus Thunderbrew", -- [1]
					"Alterac Valley", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[54747] = {
					"Eye of the Legion", -- [1]
					"Well of Eternity", -- [2]
				},
				[76974] = {
					"Franzok", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
				},
				[45097] = {
					"Oathsworn Tamer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[45935] = {
					"Temple Adept", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[43614] = {
					"Lockmaw", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[54691] = {
					"Time-Twisted Sorceress", -- [1]
					"End Time", -- [2]
				},
				[75439] = {
					"Novice Quilboar", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[125547] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[22963] = {
					"Bonechewer Worker", -- [1]
					"Black Temple", -- [2]
				},
				[176953] = {
					"Mawsworn Flamehand", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[30385] = {
					"Twilight Volunteer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13179] = {
					"Wing Commander Guse", -- [1]
					"Alterac Valley", -- [2]
				},
				[56923] = {
					"Twilight Sapper", -- [1]
					"Dragon Soul", -- [2]
				},
				[77231] = {
					"Enforcer Sorka", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77487] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75440] = {
					"Quilboar Pebble-Watcher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[32865] = {
					"Thorim", -- [1]
					"Ulduar", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[26802] = {
					"Alliance Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[57819] = {
					"Corrupted Fragment", -- [1]
					"Dragon Soul", -- [2]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[85711] = {
					"Aquatic Technician", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[37728] = {
					"Wrathbone Sorcerer", -- [1]
					"Pit of Saron", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[90686] = {
					"Felstalker Dreadhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[173949] = {
					"Nathrian Soldier", -- [1]
					"Castle Nathria", -- [2]
				},
				[165181] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[125860] = {
					"Rift Warden", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[179133] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[9692] = {
					"Bloodaxe Raider", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[42975] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[122783] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[17621] = {
					"Heathen Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[39392] = {
					"Faceless Corruptor", -- [1]
					"Grim Batol", -- [2]
				},
				[162111] = {
					"Crumbling Skeleton", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[110615] = {
					"Argent Dawnbringer", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[176956] = {
					"Shadowsteel Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[88238] = {
					"Alliance Spirit Guide", -- [1]
					"Rated Eye of the Storm", -- [2]
				},
				[84399] = {
					"Vicious Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[161088] = {
					"Bubblz", -- [1]
					"Eye of the Storm", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[56924] = {
					"Inflamed Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[4863] = {
					"Jadespine Basilisk", -- [1]
					"Uldaman", -- [2]
				},
				[44895] = {
					"Augh", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[10268] = {
					"Gizrul the Slavener", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[10364] = {
					"Yaelika Farclaw", -- [1]
					"Alterac Valley", -- [2]
				},
				[177159] = {
					"Soulburner Fraxin", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[4849] = {
					"Shadowforge Archaeologist", -- [1]
					"Uldaman", -- [2]
				},
				[37729] = {
					"Wrathbone Reaver", -- [1]
					"Pit of Saron", -- [2]
				},
				[76466] = {
					"Psyfiend", -- [1]
					"Auchindoun", -- [2]
				},
				[33890] = {
					"Brain of Yogg-Saron", -- [1]
					"Ulduar", -- [2]
				},
				[84400] = {
					"Gnarled Ancient", -- [1]
					"The Everbloom", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[84906] = {
					"Ashmaul Magma Caster", -- [1]
					"Ashran", -- [2]
				},
				[118437] = {
					"Decrepit Ghoul", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[17397] = {
					"Shadowmoon Adept", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[114650] = {
					"Phantom Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178072] = {
					"Anduin Wrynn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[170279] = {
					"Fanatical Machinist", -- [1]
					"Bastion Scenario", -- [2]
				},
				[56541] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[178041] = {
					"Mawsworn Shackler", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80818] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[22964] = {
					"Sister of Pleasure", -- [1]
					"Black Temple", -- [2]
				},
				[44896] = {
					"Pygmy Brute", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[18556] = {
					"Phasing Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[32867] = {
					"Steelbreaker", -- [1]
					"Ulduar", -- [2]
				},
				[82354] = {
					"Seacliff Kaliri", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[26803] = {
					"Horde Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[127911] = {
					"Void-Blade Zedaat", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[119977] = {
					"Stranglevine Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[11452] = {
					"Wildspawn Rogue", -- [1]
					"Dire Maul", -- [2]
				},
				[11484] = {
					"Residual Monstrosity", -- [1]
					"Dire Maul", -- [2]
				},
				[23028] = {
					"Bonechewer Taskmaster", -- [1]
					"Black Temple", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[57382] = {
					"Dark Globule", -- [1]
					"Dragon Soul", -- [2]
				},
				[165189] = {
					"Stitch", -- [1]
					"Eye of the Storm", -- [2]
				},
				[93104] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[45096] = {
					"Tamed Tol'vir Prowler", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[15547] = {
					"Spectral Charger", -- [1]
					"Karazhan", -- [2]
				},
				[115115] = {
					"Coldmist Stalker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[15931] = {
					"Grobbulus", -- [1]
					"Naxxramas", -- [2]
				},
				[119466] = {
					"Dread Captor", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[9537] = {
					"Hurley Blackbreath", -- [1]
					"Blackrock Depths", -- [2]
				},
				[95408] = {
					"Anetheron", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[60381] = {
					"Zandalari Infiltrator", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[40290] = {
					"Crimsonborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[90544] = {
					"Krosus", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[18429] = {
					"Arcane Fiend", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[44897] = {
					"Pygmy Scout", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[134991] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[83636] = {
					"Burning Blademaster", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[30643] = {
					"Lava Blaze", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[119467] = {
					"Grand Inquisitor", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[6207] = {
					"Caverndeep Ambusher", -- [1]
					"Gnomeregan", -- [2]
				},
				[6223] = {
					"Leprous Defender", -- [1]
					"Gnomeregan", -- [2]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[163145] = {
					"Necromancer Ritualist", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
				},
				[8477] = {
					"Skeletal Servant", -- [1]
					"Stratholme", -- [2]
				},
				[13276] = {
					"Wildspawn Imp", -- [1]
					"Dire Maul", -- [2]
				},
				[177478] = {
					"Marastar", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[13180] = {
					"Wing Commander Jeztor", -- [1]
					"Alterac Valley", -- [2]
				},
				[114350] = {
					"Shade of Medivh", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179526] = {
					"Troz'igal the Oppressor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17398] = {
					"Nascent Fel Orc", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17462] = {
					"Shattered Hand Zealot", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[111022] = {
					"The Demon Within", -- [1]
					"The Nighthold", -- [2]
				},
				[177479] = {
					"Seaharper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[178503] = {
					"Lady Jaina Proudmoore", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83637] = {
					"Grom'kar Vanguard", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
				},
				[75959] = {
					"Durotan", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[13116] = {
					"Alliance Spirit Guide", -- [1]
					"Isle of Conquest", -- [2]
				},
				[177480] = {
					"Khennennthilee", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[56927] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[118724] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[44898] = {
					"Pygmy Firebreather", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[45922] = {
					"Empyrean Assassin", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[177481] = {
					"Je'ni", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[57823] = {
					"Stormbinder Adept", -- [1]
					"Dragon Soul", -- [2]
				},
				[22965] = {
					"Enslaved Servant", -- [1]
					"Black Temple", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171339] = {
					"Imprisoned Soulflayer", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
				},
				[54507] = {
					"Time-Twisted Scourge Beast", -- [1]
					"End Time", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[125612] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[50284] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[43875] = {
					"Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[54123] = {
					"Echo of Sylvanas", -- [1]
					"End Time", -- [2]
				},
				[9693] = {
					"Bloodaxe Evoker", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[167246] = {
					"Unleashed Trauma", -- [1]
					"Bastion Scenario", -- [2]
				},
				[59487] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[16700] = {
					"Shattered Hand Legionnaire", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[177483] = {
					"Aldas", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[33136] = {
					"Guardian of Yogg-Saron", -- [1]
					"Ulduar", -- [2]
				},
				[170317] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83639] = {
					"Grom'kar Shadowblade", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[83895] = {
					"Wolf Rider", -- [1]
					"Ashran", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[24762] = {
					"Sunblade Keeper", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[177484] = {
					"Angelia", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
				},
				[3560] = {
					"Healing Ward", -- [1]
					"Uldaman", -- [2]
				},
				[57962] = {
					"Deathwing", -- [1]
					"Dragon Soul", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[118703] = {
					"Felborne Botanist", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[114628] = {
					"Skeletal Waiter", -- [1]
					"Return to Karazhan", -- [2]
				},
				[14396] = {
					"Eye of Immol'thar", -- [1]
					"Dire Maul", -- [2]
				},
				[177485] = {
					"Evarius", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[42845] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[75194] = {
					"Gnasher", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[7343] = {
					"Splinterbone Skeleton", -- [1]
					"Razorfen Downs", -- [2]
				},
				[109586] = {
					"Fel Lord Rakkan", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[166225] = {
					"Beckoned Doubt", -- [1]
					"Bastion Scenario", -- [2]
				},
				[88778] = {
					"Genevere Hymnsorrow", -- [1]
					"Ashran", -- [2]
				},
				[60384] = {
					"Zandalari Pterror Wing", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17399] = {
					"Seductress", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[34918] = {
					"Kor'kron Guard", -- [1]
					"Isle of Conquest", -- [2]
				},
				[10813] = {
					"Balnazzar", -- [1]
					"Stratholme", -- [2]
				},
				[177487] = {
					"Gormsmith Cavina", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[120770] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[139097] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[56161] = {
					"Corruption", -- [1]
					"Dragon Soul", -- [2]
				},
				[39909] = {
					"Azureborne Warlord", -- [1]
					"Grim Batol", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[156501] = {
					"Ravnyr", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[177488] = {
					"San'inal", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[60009] = {
					"Feng the Accursed", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[45412] = {
					"Lord Aurius Rivendare", -- [1]
					"Stratholme", -- [2]
				},
				[94920] = {
					"Warspear Grunt", -- [1]
					"Ashran", -- [2]
				},
				[177490] = {
					"Willowisp", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[118705] = {
					"Nal'asha", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[32871] = {
					"Algalon the Observer", -- [1]
					"Ulduar", -- [2]
				},
				[23030] = {
					"Dragonmaw Sky Stalker", -- [1]
					"Black Temple", -- [2]
				},
				[26805] = {
					"Alliance Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[23222] = {
					"Bonechewer Brawler", -- [1]
					"Black Temple", -- [2]
				},
				[103605] = {
					"Shroudseeker", -- [1]
					"Maw of Souls", -- [2]
				},
				[15548] = {
					"Spectral Stallion", -- [1]
					"Karazhan", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[87993] = {
					"Living Flames", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75964] = {
					"Ranjit", -- [1]
					"Skyreach", -- [2]
				},
				[76220] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[56162] = {
					"Corruption", -- [1]
					"Dragon Soul", -- [2]
				},
				[54882] = {
					"Enchanted Magus", -- [1]
					"Well of Eternity", -- [2]
				},
				[84155] = {
					"Risen Mage", -- [1]
					"Ashran", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[118706] = {
					"Necrotic Spiderling", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[34919] = {
					"7th Legion Infantry", -- [1]
					"Isle of Conquest", -- [2]
				},
				[15932] = {
					"Gluth", -- [1]
					"Naxxramas", -- [2]
				},
				[27829] = {
					"Ebon Gargoyle", -- [1]
					"Silvershard Mines", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[16028] = {
					"Patchwerk", -- [1]
					"Naxxramas", -- [2]
				},
				[16060] = {
					"Gothik the Harvester", -- [1]
					"Naxxramas", -- [2]
				},
				[75453] = {
					"Geomancer Acolyte", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[16124] = {
					"Unrelenting Trainee", -- [1]
					"Naxxramas", -- [2]
				},
				[16156] = {
					"Dark Touched Warrior", -- [1]
					"Naxxramas", -- [2]
				},
				[40166] = {
					"Enslaved Gronn Brute", -- [1]
					"Grim Batol", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93113] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[32872] = {
					"Runic Colossus", -- [1]
					"Ulduar", -- [2]
				},
				[16504] = {
					"Arcane Protector", -- [1]
					"Karazhan", -- [2]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[54512] = {
					"Time-Twisted Sentinel", -- [1]
					"End Time", -- [2]
				},
				[166262] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[179029] = {
					"Tormented Demolisher", -- [1]
					"Eye of the Storm", -- [2]
				},
				[13601] = {
					"Tinkerer Gizlock", -- [1]
					"Maraudon", -- [2]
				},
				[33768] = {
					"Rubble", -- [1]
					"Ulduar", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[177489] = {
					"Timaeron", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[167284] = {
					"Madison", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[54883] = {
					"Enchanted Magus", -- [1]
					"Well of Eternity", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[61928] = {
					"Sik'thik Guardian", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[43878] = {
					"Grand Vizier Ertan", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[17464] = {
					"Shattered Hand Gladiator", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[165211] = {
					"Kel'Thuzad", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[30453] = {
					"Onyx Sanctum Guardian", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[13021] = {
					"Warpwood Crusher", -- [1]
					"Dire Maul", -- [2]
				},
				[60386] = {
					"Zandalari Terror Rider", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[180567] = {
					"Frenzied Nightclaw", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[40167] = {
					"Twilight Beguiler", -- [1]
					"Grim Batol", -- [2]
				},
				[177496] = {
					"Lady of the Falls", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[118197] = {
					"Rotmouth", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[36840] = {
					"Ymirjar Wrathbringer", -- [1]
					"Pit of Saron", -- [2]
				},
				[32873] = {
					"Ancient Rune Giant", -- [1]
					"Ulduar", -- [2]
				},
				[55265] = {
					"Morchok", -- [1]
					"Dragon Soul", -- [2]
				},
				[177497] = {
					"Sorcha", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[13437] = {
					"Wing Commander Ichman", -- [1]
					"Alterac Valley", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[45926] = {
					"Servant of Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[11487] = {
					"Magister Kalendris", -- [1]
					"Dire Maul", -- [2]
				},
				[170844] = {
					"Ratharae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[54500] = {
					"Legion Demon", -- [1]
					"Well of Eternity", -- [2]
				},
				[23223] = {
					"Bonechewer Spectator", -- [1]
					"Black Temple", -- [2]
				},
				[77504] = {
					"Slag Behemoth", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[54884] = {
					"Enchanted Magus", -- [1]
					"Well of Eternity", -- [2]
				},
				[118198] = {
					"Osseine", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[4848] = {
					"Shadowforge Darkcaster", -- [1]
					"Uldaman", -- [2]
				},
				[34793] = {
					"Catapult", -- [1]
					"Isle of Conquest", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[177499] = {
					"Grove Defender", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[120778] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[75467] = {
					"Cave Bat", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[170845] = {
					"Hezket", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[36841] = {
					"Fallen Warrior", -- [1]
					"Pit of Saron", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[115905] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				[177500] = {
					"Corsair Brute", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[39405] = {
					"Crimsonborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[16441] = {
					"Guardian of Icecrown", -- [1]
					"Naxxramas", -- [2]
				},
				[118199] = {
					"Pestulon", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[16505] = {
					"Naxxramas Follower", -- [1]
					"Naxxramas", -- [2]
				},
				[139110] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[32874] = {
					"Iron Ring Guard", -- [1]
					"Ulduar", -- [2]
				},
				[14397] = {
					"Mana Burst", -- [1]
					"Dire Maul", -- [2]
				},
				[173406] = {
					"Renegade Abomination", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169823] = {
					"Gorm Behemoth", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[10398] = {
					"Thuzadin Shadowcaster", -- [1]
					"Stratholme", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[163681] = {
					"Brewmaster Roland", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[92350] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[173407] = {
					"Lord of Anguish", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[43286] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[178526] = {
					"Shardhide Cub", -- [1]
					"Warsong Gulch", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[118712] = {
					"Felstrider Enforcer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[34922] = {
					"Overlord Agmar", -- [1]
					"Isle of Conquest", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[74435] = {
					"Mushlump", -- [1]
					"Razorfen Downs", -- [2]
				},
				[11453] = {
					"Wildspawn Trickster", -- [1]
					"Dire Maul", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[178528] = {
					"Fierce Gromit", -- [1]
					"Eye of the Storm", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[139626] = {
					"Dredged Sailor", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[36842] = {
					"Wrathbone Coldwraith", -- [1]
					"Pit of Saron", -- [2]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[118713] = {
					"Felstrider Orbcaster", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[32875] = {
					"Iron Honor Guard", -- [1]
					"Ulduar", -- [2]
				},
				[33515] = {
					"Auriaya", -- [1]
					"Ulduar", -- [2]
				},
				[10463] = {
					"Shrieking Banshee", -- [1]
					"Stratholme", -- [2]
				},
				[10367] = {
					"Shrye Ragefist", -- [1]
					"Alterac Valley", -- [2]
				},
				[45672] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
				},
				[11454] = {
					"Wildspawn Betrayer", -- [1]
					"Dire Maul", -- [2]
				},
				[45928] = {
					"Executor of the Caliph", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[16699] = {
					"Shattered Hand Reaver", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[178029] = {
					"Mawsworn Wingsoldier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[172899] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[24761] = {
					"Brightscale Wyrm", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24697] = {
					"Sister of Torment", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[11678] = {
					"Snowblind Ambusher", -- [1]
					"Alterac Valley", -- [2]
				},
				[118975] = {
					"Xeritas", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[118714] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[118719] = {
					"Wyrmtongue Scavenger", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[55654] = {
					"Corrupted Arcanist", -- [1]
					"Well of Eternity", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[47720] = {
					"Camel", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[16029] = {
					"Sludge Belcher", -- [1]
					"Naxxramas", -- [2]
				},
				[16061] = {
					"Instructor Razuvious", -- [1]
					"Naxxramas", -- [2]
				},
				[16125] = {
					"Unrelenting Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[6016] = {
					"Elemental Protection Totem", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[75466] = {
					"Vile Bat", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[16506] = {
					"Naxxramas Worshipper", -- [1]
					"Naxxramas", -- [2]
				},
				[56678] = {
					"Jade Staff", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[74950] = {
					"Gelatanized Plague Gunk", -- [1]
					"Razorfen Downs", -- [2]
				},
				[61029] = {
					"Primal Fire Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[114364] = {
					"Mana-Gorged Wyrm", -- [1]
					"Return to Karazhan", -- [2]
				},
				[102335] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[32876] = {
					"Dark Rune Champion", -- [1]
					"Ulduar", -- [2]
				},
				[24696] = {
					"Coilskar Witch", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[153451] = {
					"Kosarus the Fallen", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33388] = {
					"Dark Rune Guardian", -- [1]
					"Ulduar", -- [2]
				},
				[14398] = {
					"Eldreth Darter", -- [1]
					"Dire Maul", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[33772] = {
					"Faceless Horror", -- [1]
					"Ulduar", -- [2]
				},
				[95940] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[81349] = {
					"Risen Ally", -- [1]
					"Ashran", -- [2]
				},
				[178539] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[118716] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[154476] = {
					"Archdruid Renferal", -- [1]
					"Alterac Valley", -- [2]
				},
				[55656] = {
					"Dreadlord Defender", -- [1]
					"Well of Eternity", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[34924] = {
					"High Commander Halford Wyrmbane", -- [1]
					"Isle of Conquest", -- [2]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[91331] = {
					"Archimonde", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[30071] = {
					"Stitched Colossus", -- [1]
					"Naxxramas", -- [2]
				},
				[13022] = {
					"Whip Lasher", -- [1]
					"Dire Maul", -- [2]
				},
				[74948] = {
					"Roogug", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[75975] = {
					"Skyreach Overlord", -- [1]
					"Skyreach", -- [2]
				},
				[43873] = {
					"Altairus", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[91588] = {
					"Fel Lord Kurduz", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[154478] = {
					"Prospector Stonehewer", -- [1]
					"Alterac Valley", -- [2]
				},
				[179560] = {
					"Fragment of Troz'igal", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118717] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[32877] = {
					"Dark Rune Warbringer", -- [1]
					"Ulduar", -- [2]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[13438] = {
					"Wing Commander Slidore", -- [1]
					"Alterac Valley", -- [2]
				},
				[22841] = {
					"Shade of Akama", -- [1]
					"Black Temple", -- [2]
				},
				[79303] = {
					"Adorned Bladetalon", -- [1]
					"Skyreach", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[13598] = {
					"Stormpike Explosives Expert", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[75976] = {
					"Low-Born Arakkoa", -- [1]
					"Skyreach", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[45930] = {
					"Minister of Air", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[102337] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[56167] = {
					"Arm Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[77256] = {
					"Blackhand", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[173405] = {
					"Deathspeaker Yutla", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[17465] = {
					"Shattered Hand Centurion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[45924] = {
					"Turbulent Squall", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[59751] = {
					"Shado-Pan Warden", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[102336] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[74953] = {
					"Congealed Droplet", -- [1]
					"Razorfen Downs", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[56168] = {
					"Wing Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[163695] = {
					"Swift Gray Wolf", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177004] = {
					"Tortured Amalgamation", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[58605] = {
					"Scarlet Judicator", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[77257] = {
					"Orgrim Doomhammer", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[167279] = {
					"Rachel", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
				},
				[32878] = {
					"Dark Rune Evoker", -- [1]
					"Ulduar", -- [2]
				},
				[16507] = {
					"Shattered Hand Sentry", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[33134] = {
					"Sara", -- [1]
					"Ulduar", -- [2]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[10399] = {
					"Thuzadin Acolyte", -- [1]
					"Stratholme", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[167280] = {
					"Nathan", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
				},
				[17083] = {
					"Fel Orc Convert", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[58856] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[4847] = {
					"Shadowforge Relic Hunter", -- [1]
					"Uldaman", -- [2]
				},
				[158579] = {
					"Corporal Teeka Bloodsnarl", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[167281] = {
					"Jamin", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[114625] = {
					"Phantom Guest", -- [1]
					"Return to Karazhan", -- [2]
				},
				[74551] = {
					"Razorfen Beast Stalker", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[74434] = {
					"Amnennar the Coldbringer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[59752] = {
					"Shado-Pan Ambusher", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[111554] = {
					"Felblaze Trickster", -- [1]
					"The Nighthold", -- [2]
				},
				[21818] = {
					"Infinite Whelp", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[167282] = {
					"Roger", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[83638] = {
					"Grom'kar Grimshot", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[180058] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81087] = {
					"Gor'vosh Necromancer", -- [1]
					"Ashran", -- [2]
				},
				[157557] = {
					"Forsworn Recruit", -- [1]
					"Isle of Conquest", -- [2]
				},
				[13533] = {
					"Spewed Larva", -- [1]
					"Maraudon", -- [2]
				},
				[10435] = {
					"Magistrate Barthilas", -- [1]
					"Stratholme", -- [2]
				},
				[122560] = {
					"Shadow Stalker", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[13181] = {
					"Wing Commander Mulverick", -- [1]
					"Alterac Valley", -- [2]
				},
				[82378] = {
					"Moonbark Ancient", -- [1]
					"SMV Alliance Garrison Level 1", -- [2]
				},
				[13117] = {
					"Horde Spirit Guide", -- [1]
					"Eye of the Storm", -- [2]
				},
				[157558] = {
					"Rising Torment", -- [1]
					"Isle of Conquest", -- [2]
				},
				[177495] = {
					"Shelynn", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[11455] = {
					"Wildspawn Felsworn", -- [1]
					"Dire Maul", -- [2]
				},
				[45932] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[156023] = {
					"Miniature Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[44260] = {
					"Venomfang Crocolisk", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[44261] = {
					"Sharptalon Eagle", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[23418] = {
					"Essence of Suffering", -- [1]
					"Black Temple", -- [2]
				},
				[157016] = {
					"Imperial Archivist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114883] = {
					"Grand Magister Rommath", -- [1]
					"The Nighthold", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157560] = {
					"Congealed Doubt", -- [1]
					"Isle of Conquest", -- [2]
				},
				[178547] = {
					"Shardhide Growler", -- [1]
					"Warsong Gulch", -- [2]
				},
				[60397] = {
					"Emperor's Strength", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Isle of Conquest", -- [2]
				},
				[16126] = {
					"Unrelenting Rider", -- [1]
					"Naxxramas", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[118704] = {
					"Dul'zak", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[12127] = {
					"Stormpike Guardsman", -- [1]
					"Alterac Valley", -- [2]
				},
				[12159] = {
					"Korrak the Bloodrager", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[7023] = {
					"Obsidian Sentinel", -- [1]
					"Uldaman", -- [2]
				},
				[40291] = {
					"Azureborne Seer", -- [1]
					"Grim Batol", -- [2]
				},
				[87989] = {
					"Forgemistress Flamehand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[118723] = {
					"Gazerax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[24698] = {
					"Ethereum Smuggler", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[94921] = {
					"Stormshield Footman", -- [1]
					"Ashran", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[20923] = {
					"Blood Guard Porung", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[55519] = {
					"Doomguard Annihilator", -- [1]
					"Well of Eternity", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[4257] = {
					"Lana Thunderbrew", -- [1]
					"Alterac Valley", -- [2]
				},
				[177482] = {
					"Marisae", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[34288] = {
					"Salvagebot Sawblade", -- [1]
					"Ulduar", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[133384] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[56799] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Ashran", -- [2]
				},
				[118700] = {
					"Felblight Stalker", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[2225] = {
					"Zora Guthrek", -- [1]
					"Alterac Valley", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177477] = {
					"Dwyl'ir", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[56427] = {
					"Warmaster Blackhorn", -- [1]
					"Dragon Soul", -- [2]
				},
				[30329] = {
					"Savage Cave Beast", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[119978] = {
					"Fulminating Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[32883] = {
					"Captured Mercenary Soldier", -- [1]
					"Ulduar", -- [2]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[9216] = {
					"Spirestone Warlord", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[11675] = {
					"Snowblind Windcaller", -- [1]
					"Alterac Valley", -- [2]
				},
				[111047] = {
					"Parasitic Shadow Demon", -- [1]
					"The Nighthold", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[13439] = {
					"Wing Commander Vipore", -- [1]
					"Alterac Valley", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[112732] = {
					"Brood of Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[13599] = {
					"Stolid Snapjaw", -- [1]
					"Maraudon", -- [2]
				},
				[17461] = {
					"Shattered Hand Blood Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[9568] = {
					"Overlord Wyrmthalak", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[59808] = {
					"Shado-Pan Stormbringer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[119453] = {
					"Felweaver Axtris", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[23419] = {
					"Essence of Desire", -- [1]
					"Black Temple", -- [2]
				},
				[9696] = {
					"Bloodaxe Worg", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[45919] = {
					"Young Storm Dragon", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[5135] = {
					"Svalbrad Farmountain", -- [1]
					"Alterac Valley", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[178043] = {
					"Mawsworn Lancer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[163199] = {
					"Fel'endae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[110618] = {
					"Anchoring Crystal", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[61453] = {
					"Mu'Shiba", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[34273] = {
					"XB-488 Disposalbot", -- [1]
					"Ulduar", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[14303] = {
					"Petrified Guardian", -- [1]
					"Dire Maul", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[32882] = {
					"Jormungar Behemoth", -- [1]
					"Ulduar", -- [2]
				},
				[14399] = {
					"Arcane Torrent", -- [1]
					"Dire Maul", -- [2]
				},
				[16573] = {
					"Crypt Guard", -- [1]
					"Naxxramas", -- [2]
				},
				[78801] = {
					"Darkshard Acidback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[10400] = {
					"Thuzadin Necromancer", -- [1]
					"Stratholme", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[10464] = {
					"Wailing Banshee", -- [1]
					"Stratholme", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				[11451] = {
					"Wildspawn Satyr", -- [1]
					"Dire Maul", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[78583] = {
					"Dominator Turret", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[105419] = {
					"Dire Basilisk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[14751] = {
					"Frostwolf Battle Standard", -- [1]
					"Alterac Valley", -- [2]
				},
				[43612] = {
					"High Prophet Barim", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[45917] = {
					"Cloud Prince", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173445] = {
					"Sindrel", -- [1]
					"Castle Nathria", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[115401] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[158084] = {
					"Contemplative Student", -- [1]
					"Plaguefall", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[56173] = {
					"Deathwing", -- [1]
					"Dragon Soul", -- [2]
				},
				[60396] = {
					"Emperor's Rage", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[135562] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[40177] = {
					"Forgemaster Throngus", -- [1]
					"Grim Batol", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[173953] = {
					"Loyal Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[122056] = {
					"Viceroy Nezhar", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[41073] = {
					"Twilight Armsmaster", -- [1]
					"Grim Batol", -- [2]
				},
				[74412] = {
					"Aarux", -- [1]
					"Razorfen Downs", -- [2]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[15551] = {
					"Spectral Stable Hand", -- [1]
					"Karazhan", -- [2]
				},
				[33651] = {
					"VX-001", -- [1]
					"Ulduar", -- [2]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75436] = {
					"Quilboar Swinewatcher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[105165] = {
					"Felgard Legionnaire", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[182145] = {
					"Blazing Infernal", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[45915] = {
					"Armored Mistral", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[122313] = {
					"Zuraal the Ascended", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[39900] = {
					"Enslaved Rock Elemental", -- [1]
					"Grim Batol", -- [2]
				},
				[7022] = {
					"Venomlash Scorpid", -- [1]
					"Uldaman", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[173444] = {
					"Caramain", -- [1]
					"Castle Nathria", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[16063] = {
					"Sir Zeliek", -- [1]
					"Naxxramas", -- [2]
				},
				[55308] = {
					"Warlord Zon'ozz", -- [1]
					"Dragon Soul", -- [2]
				},
				[16127] = {
					"Spectral Trainee", -- [1]
					"Naxxramas", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[12096] = {
					"Stormpike Quartermaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[84691] = {
					"Warspear Mine Guard", -- [1]
					"Ashran", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[118475] = {
					"Rotting Geist", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[114636] = {
					"Phantom Guardsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[16057] = {
					"Rotting Maggot", -- [1]
					"Naxxramas", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[182148] = {
					"Brutal Wrathguard", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[6225] = {
					"Mechano-Tank", -- [1]
					"Gnomeregan", -- [2]
				},
				[85410] = {
					"Disturbed Podling", -- [1]
					"Ashran", -- [2]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[23216] = {
					"Ashtongue Defender", -- [1]
					"Black Temple", -- [2]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
				},
				[105167] = {
					"Imp Mother Fecunda", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[182149] = {
					"Commander Borramus", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[152594] = {
					"Broker Ve'ken", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[122571] = {
					"Rift Warden", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[114637] = {
					"Spectral Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[111054] = {
					"Nightorb", -- [1]
					"The Nighthold", -- [2]
				},
				[173448] = {
					"Dragost", -- [1]
					"Castle Nathria", -- [2]
				},
				[182150] = {
					"Observer Ongrax", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[9045] = {
					"Scarshield Acolyte", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[151329] = {
					"Warden Skoldus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[60398] = {
					"Emperor's Courage", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[176520] = {
					"Ocular Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[13152] = {
					"Commander Malgor", -- [1]
					"Alterac Valley", -- [2]
				},
				[173339] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[122316] = {
					"Saprish", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[13280] = {
					"Hydrospawn", -- [1]
					"Dire Maul", -- [2]
				},
				[18430] = {
					"Ethereal Apprentice", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[32885] = {
					"Captured Mercenary Soldier", -- [1]
					"Ulduar", -- [2]
				},
				[136083] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[182152] = {
					"Infiltrator Deraxis", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[158094] = {
					"Diligent Attendant", -- [1]
					"Plaguefall", -- [2]
				},
				[33525] = {
					"Mangrove Ent", -- [1]
					"Ulduar", -- [2]
				},
				[163213] = {
					"Maw Infernous", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[69792] = {
					"Xemise", -- [1]
					"Alterac Valley", -- [2]
				},
				[38487] = {
					"Fallen Warrior", -- [1]
					"Pit of Saron", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[182665] = {
					"Acidic Ravener", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[23421] = {
					"Ashtongue Channeler", -- [1]
					"Black Temple", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
				},
				[12121] = {
					"Drakan", -- [1]
					"Alterac Valley", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[82903] = {
					"Speedy Horde Racer", -- [1]
					"Ashran", -- [2]
				},
				[182666] = {
					"Hungering Widow", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[60143] = {
					"Gara'jal the Spiritbinder", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[120526] = {
					"Catttai", -- [1]
					"Isle of Conquest", -- [2]
				},
				[60399] = {
					"Qin-xi", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[22877] = {
					"Coilskar Wrangler", -- [1]
					"Black Temple", -- [2]
				},
				[136407] = {
					"Wrathguard", -- [1]
					"Isle of Conquest", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[10177] = {
					"Spire Scarab", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[55312] = {
					"Yor'sahj the Unsleeping", -- [1]
					"Dragon Soul", -- [2]
				},
				[39381] = {
					"Crimsonborne Guardian", -- [1]
					"Grim Batol", -- [2]
				},
				[32886] = {
					"Dark Rune Acolyte", -- [1]
					"Ulduar", -- [2]
				},
				[14400] = {
					"Arcane Feedback", -- [1]
					"Dire Maul", -- [2]
				},
				[28860] = {
					"Sartharion", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[7405] = {
					"Deadly Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
				},
				[3625] = {
					"Rarck", -- [1]
					"Alterac Valley", -- [2]
				},
				[33526] = {
					"Ironroot Lasher", -- [1]
					"Ulduar", -- [2]
				},
				[120527] = {
					"Nimneth", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[171919] = {
					"Ayeleth's Torturer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[116944] = {
					"Mephistroth", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[29308] = {
					"Prince Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[166159] = {
					"Rotbriar Manifestation", -- [1]
					"Warsong Gulch", -- [2]
				},
				[105427] = {
					"Skyfury Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[14752] = {
					"Stormpike Battle Standard", -- [1]
					"Alterac Valley", -- [2]
				},
				[122319] = {
					"Darkfang", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
				},
				[22957] = {
					"Priestess of Dementia", -- [1]
					"Black Temple", -- [2]
				},
				[57807] = {
					"Twilight Frost Evoker", -- [1]
					"Dragon Soul", -- [2]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[118224] = {
					"Raemien the Soultaker", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[60400] = {
					"Jan-xi", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[172433] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[55503] = {
					"Legion Demon", -- [1]
					"Well of Eternity", -- [2]
				},
				[105172] = {
					"Winged Nightmare", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[80858] = {
					"Kor'lok", -- [1]
					"Ashran", -- [2]
				},
				[81114] = {
					"Gronnling Laborer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[18431] = {
					"Ethereal Beacon", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[172434] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[18559] = {
					"Phasing Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[22846] = {
					"Ashtongue Stormcaller", -- [1]
					"Black Temple", -- [2]
				},
				[33527] = {
					"Nature's Blade", -- [1]
					"Ulduar", -- [2]
				},
				[11489] = {
					"Tendris Warpwood", -- [1]
					"Dire Maul", -- [2]
				},
				[180113] = {
					"Rattling Mage", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[172435] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
				},
				[22956] = {
					"Sister of Pain", -- [1]
					"Black Temple", -- [2]
				},
				[11032] = {
					"Commander Malor", -- [1]
					"Stratholme", -- [2]
				},
				[174336] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[10808] = {
					"Timmy the Cruel", -- [1]
					"Stratholme", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				[172436] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[15936] = {
					"Heigan the Unclean", -- [1]
					"Naxxramas", -- [2]
				},
				[14775] = {
					"Stonehearth Warmaster", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[39414] = {
					"Ascended Windwalker", -- [1]
					"Grim Batol", -- [2]
				},
				[24555] = {
					"Garaxxas", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16064] = {
					"Thane Korth'azz", -- [1]
					"Naxxramas", -- [2]
				},
				[182523] = {
					"Helblaze Flamecaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[172437] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[12097] = {
					"Frostwolf Quartermaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[61387] = {
					"Quilen Guardian", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[173973] = {
					"Nathrian Tracker", -- [1]
					"Castle Nathria", -- [2]
				},
				[48756] = {
					"Hooked Net", -- [1]
					"Grim Batol", -- [2]
				},
				[122322] = {
					"Famished Broken", -- [1]
					"Seat of the Triumvirate", -- [2]
				},
				[122578] = {
					"Kin'garoth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[125828] = {
					"Drunkwitch", -- [1]
					"Atal'Dazar", -- [2]
				},
				[172438] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[84110] = {
					"Korthall Soulgorger", -- [1]
					"Ashran", -- [2]
				},
				[74462] = {
					"Warlord Ramtusk", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[24830] = {
					"Stonevault Pillager", -- [1]
					"Uldaman", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[33528] = {
					"Guardian of Life", -- [1]
					"Ulduar", -- [2]
				},
				[87771] = {
					"Slagshop Worker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[85133] = {
					"Mor'riz", -- [1]
					"Ashran", -- [2]
				},
				[29309] = {
					"Elder Nadox", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84876] = {
					"Ashmaul Destroyer", -- [1]
					"Ashran", -- [2]
				},
				[81117] = {
					"Karnor the Cruel", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[16492] = {
					"Syphoner", -- [1]
					"Karazhan", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[40270] = {
					"Twilight Thundercaller", -- [1]
					"Grim Batol", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13079] = {
					"Keetar", -- [1]
					"Alterac Valley", -- [2]
				},
				[173464] = {
					"Deplina", -- [1]
					"Castle Nathria", -- [2]
				},
				[39415] = {
					"Ascended Flameseeker", -- [1]
					"Grim Batol", -- [2]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[99801] = {
					"Destructor Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[125569] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[60402] = {
					"Zandalari Fire-Dancer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[13089] = {
					"Coldmine Guard", -- [1]
					"Alterac Valley", -- [2]
				},
				[90500] = {
					"Warspear Peon", -- [1]
					"Ashran", -- [2]
				},
				[13153] = {
					"Commander Mulfort", -- [1]
					"Alterac Valley", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[17963] = {
					"Wastewalker Slave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[74379] = {
					"Splinterbone Frostweaver", -- [1]
					"Razorfen Downs", -- [2]
				},
				[176537] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[13377] = {
					"Master Engineer Zinfizzlex", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[165276] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[88967] = {
					"Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[154015] = {
					"Escaped Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16491] = {
					"Mana Feeder", -- [1]
					"Karazhan", -- [2]
				},
				[13537] = {
					"Seasoned Coldmine Surveyor", -- [1]
					"Alterac Valley", -- [2]
				},
				[85383] = {
					"Vol'jin's Spear Battle Standard", -- [1]
					"Ashran", -- [2]
				},
				[84190] = {
					"Boneshallow Spider", -- [1]
					"Ashran", -- [2]
				},
				[109016] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[157599] = {
					"Forsworn Acolyte", -- [1]
					"Isle of Conquest", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[22953] = {
					"Wrathbone Flayer", -- [1]
					"Black Temple", -- [2]
				},
				[4850] = {
					"Stonevault Cave Lurker", -- [1]
					"Uldaman", -- [2]
				},
				[416] = {
					"Piznik", -- [1]
					"Warsong Gulch", -- [2]
				},
				[176539] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[86494] = {
					"Frostwolf Outrider", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[177895] = {
					"Trained Flayedwing", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[158624] = {
					"Void Lasher", -- [1]
					"Plaguefall", -- [2]
				},
				[104154] = {
					"Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[163508] = {
					"Tina Wang", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[109017] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[165279] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57158] = {
					"Earthen Destroyer", -- [1]
					"Dragon Soul", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[65522] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[160161] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[86495] = {
					"Frostwolf", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[152995] = {
					"Warden of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[126072] = {
					"Felspawn Soulstalker", -- [1]
					"Alterac Valley", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[172447] = {
					"Sinfall Recruit", -- [1]
					"Sinfall Scenario", -- [2]
				},
				[29310] = {
					"Jedoga Shadowseeker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[54645] = {
					"Royal Handmaiden", -- [1]
					"Well of Eternity", -- [2]
				},
				[165793] = {
					"Fel'endae", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[29822] = {
					"Drakkari Fire Weaver", -- [1]
					"Gundrak", -- [2]
				},
				[115417] = {
					"Rat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[59892] = {
					"Krik'thik Invader", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[83681] = {
					"Buzzing Venomfly", -- [1]
					"Ashran", -- [2]
				},
				[23399] = {
					"Suffering Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[76259] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[18344] = {
					"Nexus-Prince Shaffar", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[18177] = {
					"Tainted Stoneskin Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[154022] = {
					"Prisonbreak Packleader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[40953] = {
					"Khaaphom", -- [1]
					"Grim Batol", -- [2]
				},
				[18497] = {
					"Auchenai Monk", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[106972] = {
					"Beast", -- [1]
					"Alterac Valley", -- [2]
				},
				[157094] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[22848] = {
					"Storm Fury", -- [1]
					"Black Temple", -- [2]
				},
				[11458] = {
					"Petrified Treant", -- [1]
					"Dire Maul", -- [2]
				},
				[11490] = {
					"Zevrim Thornhoof", -- [1]
					"Dire Maul", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[76260] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[23232] = {
					"Mutant War Hound", -- [1]
					"Black Temple", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118642] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[18983] = {
					"Blackfang Tarantula", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[111068] = {
					"Archmage Galeorn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[115419] = {
					"Ancient Tome", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[17959] = {
					"Coilfang Slavehandler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16065] = {
					"Lady Blaumeux", -- [1]
					"Naxxramas", -- [2]
				},
				[14772] = {
					"East Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[16193] = {
					"Skeletal Smith", -- [1]
					"Naxxramas", -- [2]
				},
				[105182] = {
					"Gravax the Desecrator", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[57280] = {
					"Twilight Siege Captain", -- [1]
					"Dragon Soul", -- [2]
				},
				[61247] = {
					"Glintrok Greenhorn", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[134063] = {
					"Brother Ironhull", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[12258] = {
					"Razorlash", -- [1]
					"Maraudon", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[122477] = {
					"F'harg", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[75384] = {
					"Kraulshaped Monstrosity", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[153003] = {
					"Soul Fragment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171431] = {
					"Suppressor Vellon", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[84196] = {
					"Web-wrapped Soldier", -- [1]
					"Ashran", -- [2]
				},
				[29311] = {
					"Herald Volazj", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[105695] = {
					"Yrgrim the Truthseeker", -- [1]
					"Shield's Rest", -- [2]
				},
				[33988] = {
					"Immortal Guardian", -- [1]
					"Ulduar", -- [2]
				},
				[171432] = {
					"Suppressor Hersi", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102368] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[111070] = {
					"Soul Fragment of Azzinoth", -- [1]
					"The Nighthold", -- [2]
				},
				[119516] = {
					"Frenzied Dedicant", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[136399] = {
					"Vicious Hellhound", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[183206] = {
					"Winged Soul Eater", -- [1]
					"Path of the Primus", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[12052] = {
					"Frostwolf Warrior", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[13154] = {
					"Commander Louis Philips", -- [1]
					"Alterac Valley", -- [2]
				},
				[48633] = {
					"Guild Battle Standard", -- [1]
					"Alterac Valley", -- [2]
				},
				[36476] = {
					"Ick", -- [1]
					"Pit of Saron", -- [2]
				},
				[11604] = {
					"Whitewhisker Geomancer", -- [1]
					"Alterac Valley", -- [2]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102369] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[18498] = {
					"Unliving Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[119517] = {
					"Frenzied Dedicant", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[13442] = {
					"Archdruid Renferal", -- [1]
					"Alterac Valley", -- [2]
				},
				[178601] = {
					"Kevin's Oozeling", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[56765] = {
					"Destroying Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56637] = {
					"Ook-Ook", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[180415] = {
					"Mawsworn Axeguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[39873] = {
					"Twilight Wyrmcaller", -- [1]
					"Grim Batol", -- [2]
				},
				[156591] = {
					"Steelskin Brutalizer", -- [1]
					"Plaguefall", -- [2]
				},
				[106347] = {
					"Spectral Champion", -- [1]
					"Shield's Rest", -- [2]
				},
				[30178] = {
					"Ahn'kahar Swarmer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[101995] = {
					"Festerface", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[134069] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[102370] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[35069] = {
					"Siege Engine", -- [1]
					"Isle of Conquest", -- [2]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[175803] = {
					"Grove Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[179115] = {
					"Lord Herne", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[83687] = {
					"Ogron Destructor", -- [1]
					"Ashran", -- [2]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
				},
				[176556] = {
					"Alcruux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[122468] = {
					"Noura, Mother of Flames", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[48634] = {
					"Guild Battle Standard", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[100713] = {
					"Rockbait Fisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[14370] = {
					"Cadaverous Worm", -- [1]
					"Dire Maul", -- [2]
				},
				[183988] = {
					"Empowered Attendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[153011] = {
					"Binder Baritas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14466] = {
					"Horde Battle Standard", -- [1]
					"Eye of the Storm", -- [2]
				},
				[178605] = {
					"Maldraxxi Lineguard", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[179117] = {
					"Niya", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[10467] = {
					"Mana Tide Totem", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[39870] = {
					"Twilight Firecatcher", -- [1]
					"Grim Batol", -- [2]
				},
				[98919] = {
					"Seacursed Swiftblade", -- [1]
					"Maw of Souls", -- [2]
				},
				[152500] = {
					"Deadsoul Amalgam", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177582] = {
					"Nimble Scavenger", -- [1]
					"Twin Peaks", -- [2]
				},
				[76778] = {
					"Life-Pact Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[112739] = {
					"Shadowy Overfiend", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102372] = {
					"Felhound Mage Slayer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[63607] = {
					"Squirrel", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[111074] = {
					"Grinning Shadowstalker", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[170417] = {
					"Animated Stygia", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[79466] = {
					"Initiate of the Rising Sun", -- [1]
					"Skyreach", -- [2]
				},
				[83689] = {
					"Sharpclaw Hunter", -- [1]
					"Ashran", -- [2]
				},
				[168113] = {
					"General Grashaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[104676] = {
					"Waning Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[157109] = {
					"Vampire Bat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18179] = {
					"Corrupted Nova Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[170418] = {
					"Goxul the Devourer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
				},
				[44924] = {
					"Oathsworn Myrmidon", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[102373] = {
					"Corrosive Felhound", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[18499] = {
					"Unliving Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[153015] = {
					"Bound Soul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111587] = {
					"Nether Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[11459] = {
					"Ironbark Protector", -- [1]
					"Dire Maul", -- [2]
				},
				[79595] = {
					"Fluttering Teromoth", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[56631] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[176562] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[76814] = {
					"Flamebender Ka'graz", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[178610] = {
					"Maldraxxi Gladiator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[6234] = {
					"Mechanized Guardian", -- [1]
					"Gnomeregan", -- [2]
				},
				[13359] = {
					"Frostwolf Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				[18500] = {
					"Unliving Cleric", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[23682] = {
					"Headless Horseman", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[107237] = {
					"Icy Enchantment", -- [1]
					"The Nighthold", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[16034] = {
					"Plague Beast", -- [1]
					"Naxxramas", -- [2]
				},
				[39994] = {
					"Conflagration", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[83691] = {
					"Panthora", -- [1]
					"Ashran", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[107100] = {
					"Observer", -- [1]
					"Ashran", -- [2]
				},
				[48636] = {
					"Guild Battle Standard", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[130272] = {
					"Constrictor Vine", -- [1]
					"Maraudon", -- [2]
				},
				[179124] = {
					"Shade of Destiny", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[64947] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[74478] = {
					"Death's Head Shadowmender", -- [1]
					"Razorfen Downs", -- [2]
				},
				[165816] = {
					"Margrave Sin'dane", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[19668] = {
					"Shadowfiend", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[83692] = {
					"Panthran Pride", -- [1]
					"Ashran", -- [2]
				},
				[16406] = {
					"Phantom Attendant", -- [1]
					"Karazhan", -- [2]
				},
				[114264] = {
					"Midnight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44566] = {
					"Ozumat", -- [1]
					"Throne of the Tides", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[130273] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
				},
				[158651] = {
					"Agthia", -- [1]
					"Plaguefall", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[102376] = {
					"Wrathguard Bladeweaver", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[34944] = {
					"Keep Cannon", -- [1]
					"Isle of Conquest", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[119524] = {
					"Shrieking Hellbat", -- [1]
					"Legion Ship - Horizontal - Azsuna", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[75247] = {
					"Groyat, the Blind Hunter", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[14284] = {
					"Stormpike Battleguard", -- [1]
					"Alterac Valley", -- [2]
				},
				[60410] = {
					"Elegon", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[166496] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[7800] = {
					"Mekgineer Thermaplugg", -- [1]
					"Gnomeregan", -- [2]
				},
				[40319] = {
					"Drahga Shadowburner", -- [1]
					"Grim Batol", -- [2]
				},
				[165819] = {
					"Kel'Thuzad", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[130274] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
				},
				[122450] = {
					"Garothi Worldbreaker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[44926] = {
					"Oathsworn Wanderer", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[61434] = {
					"Sik'thik Vanguard", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13443] = {
					"Druid of the Grove", -- [1]
					"Alterac Valley", -- [2]
				},
				[162237] = {
					"Plagueroc", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[83803] = {
					"Ashmaul Forager", -- [1]
					"Ashran", -- [2]
				},
				[83694] = {
					"Sharpclaw Poison-Shaper", -- [1]
					"Ashran", -- [2]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180665] = {
					"Gibbering Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173191] = {
					"Soulstalker V'lara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177594] = {
					"Mawsworn Agonizer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[30287] = {
					"Plundering Geist", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[130275] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
				},
				[60047] = {
					"Amethyst Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[57751] = {
					"Ruin Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[106246] = {
					"Shae", -- [1]
					"Shield's Rest", -- [2]
				},
				[176571] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[11054] = {
					"Risen Rifleman", -- [1]
					"Stratholme", -- [2]
				},
				[43391] = {
					"Millhouse Manastorm", -- [1]
					"The Stonecore", -- [2]
				},
				[99307] = {
					"Skjal", -- [1]
					"Maw of Souls", -- [2]
				},
				[66652] = {
					"Lesser Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[7209] = {
					"Obsidian Shard", -- [1]
					"Uldaman", -- [2]
				},
				[56188] = {
					"Blistering Tentacle", -- [1]
					"Dragon Soul", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[40320] = {
					"Valiona", -- [1]
					"Grim Batol", -- [2]
				},
				[48638] = {
					"Guild Battle Standard", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[32641] = {
					"Drix Blackwrench", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[16389] = {
					"Spectral Apprentice", -- [1]
					"Karazhan", -- [2]
				},
				[152003] = {
					"Tactical Officer Ahbramis", -- [1]
					"Battle for Wintergrasp", -- [2]
				},
				[185275] = {
					"Kelmortos", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[157122] = {
					"Patrician Cromwell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[10436] = {
					"Baroness Anastari", -- [1]
					"Stratholme", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176574] = {
					"Mawsworn Soulkeeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[10596] = {
					"Mother Smolderweb", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[105451] = {
					"Counterstrike Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[77042] = {
					"Sargerei Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[168074] = {
					"Fallen Monk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[168073] = {
					"Fallen Monk", -- [1]
					"Isle of Conquest", -- [2]
				},
				[102380] = {
					"Shadow Council Warlock", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152517] = {
					"Deadsoul Lifetaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74483] = {
					"Death's Head Arachnomancer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[17669] = {
					"Rabid Warhound", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[178623] = {
					"Mawsworn Guard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179135] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[180159] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176576] = {
					"Mawsworn Pyremancer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113130] = {
					"Burning Sentry", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[177600] = {
					"Mawsworn Realmbreaker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
				},
				[179136] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[18373] = {
					"Exarch Maladaar", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[61436] = {
					"Sik'thik Bladedancer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[177601] = {
					"Mawsworn Invoker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178625] = {
					"Mawsworn Archer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				[11492] = {
					"Alzzin the Wildshaper", -- [1]
					"Dire Maul", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[11472] = {
					"Eldreth Spirit", -- [1]
					"Dire Maul", -- [2]
				},
				[23172] = {
					"Hand of Gorefiend", -- [1]
					"Black Temple", -- [2]
				},
				[23236] = {
					"Bonechewer Shield Disciple", -- [1]
					"Black Temple", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[178626] = {
					"Mawrat", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177280] = {
					"Winter Queen", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[55294] = {
					"Ultraxion", -- [1]
					"Dragon Soul", -- [2]
				},
				[176579] = {
					"Keeper Hazaduum", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[177790] = {
					"Desperate Shade", -- [1]
					"Twin Peaks", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[10384] = {
					"Spectral Citizen", -- [1]
					"Stratholme", -- [2]
				},
				[16067] = {
					"Deathcharger Steed", -- [1]
					"Naxxramas", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[176577] = {
					"Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16163] = {
					"Death Knight Cavalier", -- [1]
					"Naxxramas", -- [2]
				},
				[113132] = {
					"Burning Terrorhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[88818] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[32642] = {
					"Mojodishu", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[77557] = {
					"Admiral Gar'an", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111085] = {
					"Geth'xun", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[74486] = {
					"Freezing Spirit", -- [1]
					"Razorfen Downs", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[6227] = {
					"Mechano-Frostwalker", -- [1]
					"Gnomeregan", -- [2]
				},
				[62205] = {
					"Wing Leader Ner'onok", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[171463] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[99657] = {
					"Deranged Mindflayer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[84468] = {
					"Zaram Sunraiser", -- [1]
					"Ashran", -- [2]
				},
				[105199] = {
					"Felstalker Dreadhound", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[127045] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[105967] = {
					"Restless Tombguard", -- [1]
					"Shield's Rest", -- [2]
				},
				[85748] = {
					"Iron Mauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[17414] = {
					"Shadowmoon Technician", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[59518] = {
					"Bloated Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[177095] = {
					"Kyra", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[17670] = {
					"Shattered Hand Houndmaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[30083] = {
					"Marauding Geist", -- [1]
					"Naxxramas", -- [2]
				},
				[120556] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[116550] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[96754] = {
					"Harbaron", -- [1]
					"Maw of Souls", -- [2]
				},
				[88820] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[36356] = {
					"Flame Turret", -- [1]
					"Isle of Conquest", -- [2]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[105968] = {
					"Spectral Windshaper", -- [1]
					"Shield's Rest", -- [2]
				},
				[13284] = {
					"Frostwolf Shaman", -- [1]
					"Alterac Valley", -- [2]
				},
				[13316] = {
					"Coldmine Peon", -- [1]
					"Alterac Valley", -- [2]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[74488] = {
					"Frozen Soul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[22853] = {
					"Illidari Defiler", -- [1]
					"Black Temple", -- [2]
				},
				[22917] = {
					"Illidan Stormrage", -- [1]
					"Black Temple", -- [2]
				},
				[163277] = {
					"Forsworn Invader", -- [1]
					"Theater of Pain", -- [2]
				},
				[17371] = {
					"Shadowmoon Warlock", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[9541] = {
					"Blackbreath Crony", -- [1]
					"Blackrock Depths", -- [2]
				},
				[88821] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[16411] = {
					"Spectral Chef", -- [1]
					"Karazhan", -- [2]
				},
				[9701] = {
					"Spire Scorpid", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[114671] = {
					"Fragmented Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[59519] = {
					"Stout Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[94708] = {
					"Storm Hawk", -- [1]
					"Shield's Rest", -- [2]
				},
				[127724] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[13956] = {
					"Winterax Mystic", -- [1]
					"Korrak's Revenge", -- [2]
				},
				[75001] = {
					"Hunter Bonetusk", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[7011] = {
					"Earthen Rocksmasher", -- [1]
					"Uldaman", -- [2]
				},
				[22873] = {
					"Coilskar General", -- [1]
					"Black Temple", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[84983] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[183399] = {
					"Suppression Conduit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166863] = {
					"Forsworn Investigator", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[14308] = {
					"Ferra", -- [1]
					"Dire Maul", -- [2]
				},
				[102387] = {
					"Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[61567] = {
					"Vizier Jin'bak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[160721] = {
					"Fallen Acolyte Erisne", -- [1]
					"Isle of Conquest", -- [2]
				},
				[127725] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[16410] = {
					"Spectral Retainer", -- [1]
					"Karazhan", -- [2]
				},
				[53889] = {
					"Corrupted Blood", -- [1]
					"Dragon Soul", -- [2]
				},
				[10437] = {
					"Nerub'enkan", -- [1]
					"Stratholme", -- [2]
				},
				[134616] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[16173] = {
					"Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[21126] = {
					"Coilfang Scale-Healer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[85750] = {
					"Sharptalon Outcast", -- [1]
					"Ashran", -- [2]
				},
				[84984] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[134617] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[98293] = {
					"Saltsea Globule", -- [1]
					"Eye of Azshara", -- [2]
				},
				[10990] = {
					"Alterac Ram", -- [1]
					"Alterac Valley", -- [2]
				},
				[94710] = {
					"Storm Drake Hunter", -- [1]
					"Shield's Rest", -- [2]
				},
				[75331] = {
					"Death's Head Ghoul Wrangler", -- [1]
					"Razorfen Downs", -- [2]
				},
				[17671] = {
					"Shattered Hand Champion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[170449] = {
					"Lurking Lasher", -- [1]
					"Eye of the Storm", -- [2]
				},
				[166866] = {
					"Misled Steward", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[10981] = {
					"Frost Wolf", -- [1]
					"Alterac Valley", -- [2]
				},
				[169055] = {
					"Marrow Scraper", -- [1]
					"Theater of Pain", -- [2]
				},
				[17991] = {
					"Rokmar the Crackler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16473] = {
					"Spectral Performer", -- [1]
					"Karazhan", -- [2]
				},
				[7603] = {
					"Leprous Assistant", -- [1]
					"Gnomeregan", -- [2]
				},
				[84985] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[61056] = {
					"Primal Earth Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[18311] = {
					"Ethereal Crypt Raider", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[36907] = {
					"Wrathbone Siegesmith", -- [1]
					"Pit of Saron", -- [2]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[98363] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[74492] = {
					"Bubonic Geist", -- [1]
					"Razorfen Downs", -- [2]
				},
				[45572] = {
					"Howling Gale", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[170451] = {
					"Mature Stellarwasp", -- [1]
					"Eye of the Storm", -- [2]
				},
				[11461] = {
					"Warpwood Guardian", -- [1]
					"Dire Maul", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[9262] = {
					"Firebrand Invoker", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[96759] = {
					"Helya", -- [1]
					"Maw of Souls", -- [2]
				},
				[105205] = {
					"Mo'arg Spinebreaker", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[76796] = {
					"Heavy Spear", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[170452] = {
					"Essence Orb", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93688] = {
					"Forsaken Deathstalker", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[163286] = {
					"Forsworn Darkblade", -- [1]
					"Theater of Pain", -- [2]
				},
				[170071] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59521] = {
					"Bubbling Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[155226] = {
					"Verdant Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118834] = {
					"Fel Portal Guardian", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[14349] = {
					"Pimgib", -- [1]
					"Dire Maul", -- [2]
				},
				[16036] = {
					"Frenzied Bat", -- [1]
					"Naxxramas", -- [2]
				},
				[8035] = {
					"Dark Iron Land Mine", -- [1]
					"Gnomeregan", -- [2]
				},
				[60576] = {
					"Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16164] = {
					"Shade of Naxxramas", -- [1]
					"Naxxramas", -- [2]
				},
				[74555] = {
					"Razorfen Hidecrusher", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[105206] = {
					"Wrathguard Dreadblade", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[32934] = {
					"Right Arm", -- [1]
					"Ulduar", -- [2]
				},
				[16407] = {
					"Spectral Servant", -- [1]
					"Karazhan", -- [2]
				},
				[76089] = {
					"Razorfen Beast Stalker", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[17624] = {
					"Laughing Skull Warden", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[102647] = {
					"Ooker Dooker", -- [1]
					"Dire Maul", -- [2]
				},
				[102706] = {
					"Grinning Shadowstalker", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178133] = {
					"Murkbrine Wavejumper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[53891] = {
					"Corruption", -- [1]
					"Dragon Soul", -- [2]
				},
				[166872] = {
					"Umbral Phalynx", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[16409] = {
					"Phantom Guest", -- [1]
					"Karazhan", -- [2]
				},
				[9261] = {
					"Firebrand Darkweaver", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[21127] = {
					"Coilfang Tempest", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[34184] = {
					"Clockwork Mechanic", -- [1]
					"Ulduar", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[166873] = {
					"Forsworn Researcher", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[85756] = {
					"Onyx Ravager", -- [1]
					"Ashran", -- [2]
				},
				[43014] = {
					"Imp", -- [1]
					"The Stonecore", -- [2]
				},
				[59522] = {
					"Sudsy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[59778] = {
					"Krik'thik Striker", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[157660] = {
					"Forsworn Ascended", -- [1]
					"Isle of Conquest", -- [2]
				},
				[56862] = {
					"Drunken Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[30085] = {
					"Vigilant Shade", -- [1]
					"Naxxramas", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[30277] = {
					"Ahn'kahar Slasher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[56579] = {
					"Enchanted Highmistress", -- [1]
					"Well of Eternity", -- [2]
				},
				[165339] = {
					"Empowered Baroness Ninadar", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
				},
				[105720] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[166875] = {
					"Dark Vault-Seeker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[13285] = {
					"Death Lash", -- [1]
					"Dire Maul", -- [2]
				},
				[61442] = {
					"Kuai the Brute", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[103673] = {
					"Darkglare", -- [1]
					"Eye of the Storm", -- [2]
				},
				[167999] = {
					"Echo of Sin", -- [1]
					"Castle Nathria", -- [2]
				},
				[61339] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[23047] = {
					"Shadowmoon Soldier", -- [1]
					"Black Temple", -- [2]
				},
				[19016] = {
					"Hellfire Familiar", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[34057] = {
					"Assault Bot", -- [1]
					"Ulduar", -- [2]
				},
				[23239] = {
					"Bonechewer Combatant", -- [1]
					"Black Temple", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[63106] = {
					"Sik'thik Swarmer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[171587] = {
					"Reanimated Shambling Horror", -- [1]
					"Ashran", -- [2]
				},
				[175579] = {
					"Fae Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[167485] = {
					"Starving Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[47238] = {
					"Whipping Wind", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[127732] = {
					"Clobex", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[10220] = {
					"Halycon", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[178743] = {
					"Terrified Glitterfeather", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
				},
				[184882] = {
					"Mawsworn Warden", -- [1]
					"Path of the Primus", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[17940] = {
					"Coilfang Technician", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[40584] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[168502] = {
					"Riverfall Snapper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[175581] = {
					"Fleeting Memory", -- [1]
					"Eye of the Storm", -- [2]
				},
				[102395] = {
					"Infiltrator Assassin", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[32906] = {
					"Freya", -- [1]
					"Ulduar", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[172596] = {
					"Necrotic Acolyte", -- [1]
					"Isle of Conquest", -- [2]
				},
				[10374] = {
					"Spire Spider", -- [1]
					"Lower Blackrock Spire", -- [2]
				},
				[10406] = {
					"Ghoul Ravener", -- [1]
					"Stratholme", -- [2]
				},
				[10438] = {
					"Maleki the Pallid", -- [1]
					"Stratholme", -- [2]
				},
				[16457] = {
					"Maiden of Virtue", -- [1]
					"Karazhan", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[45467] = {
					"Trogg Dweller", -- [1]
					"Grim Batol", -- [2]
				},
				[21128] = {
					"Coilfang Ray", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[177630] = {
					"Forest Guardian", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[149555] = {
					"Abomination", -- [1]
					"Alterac Valley", -- [2]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16595] = {
					"Fleshbeast", -- [1]
					"Karazhan", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
				},
				[79910] = {
					"Shimmerwing Moth", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[56341] = {
					"Burning Tendons", -- [1]
					"Dragon Soul", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[10982] = {
					"Whitewhisker Vermin", -- [1]
					"Alterac Valley", -- [2]
				},
				[124166] = {
					"Torment of Khaz'goroth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[127233] = {
					"Flameweaver", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[164345] = {
					"Scavenging Soul Eater", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[157669] = {
					"Steelskin Vanguard", -- [1]
					"Plaguefall", -- [2]
				},
				[122104] = {
					"Portal Keeper Hasabel", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[18313] = {
					"Ethereal Sorcerer", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[16594] = {
					"Shadowmoon Acolyte", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[61444] = {
					"Ming the Cunning", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[36891] = {
					"Iceborn Proto-Drake", -- [1]
					"Pit of Saron", -- [2]
				},
				[165348] = {
					"Ritual Bone Pile", -- [1]
					"Maldraxxus Covenant Finale Scenario", -- [2]
				},
				[39962] = {
					"Twilight Stormbreaker", -- [1]
					"Grim Batol", -- [2]
				},
				[45704] = {
					"Lurking Tempest", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[11462] = {
					"Warpwood Treant", -- [1]
					"Dire Maul", -- [2]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[76292] = {
					"Skyreach Shield Construct", -- [1]
					"Skyreach", -- [2]
				},
				[57877] = {
					"Flail of Go'rath", -- [1]
					"Dragon Soul", -- [2]
				},
				[157671] = {
					"Prime Bladeguard", -- [1]
					"Plaguefall", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[164348] = {
					"Wandering Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[102398] = {
					"Blazing Infernal", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[34191] = {
					"Trash", -- [1]
					"Ulduar", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[156158] = {
					"Adjutant Felipos", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16037] = {
					"Plagued Bat", -- [1]
					"Naxxramas", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[83715] = {
					"Risen Ancient", -- [1]
					"Ashran", -- [2]
				},
				[172005] = {
					"Furrowed Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[16165] = {
					"Necro Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[43927] = {
					"Harbinger of Darkness", -- [1]
					"Lost City of the Tol'vir", -- [2]
				},
				[113148] = {
					"Fel Hound", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
				},
				[110616] = {
					"Dark Worshipper", -- [1]
					"Broken Shore Scenario", -- [2]
				},
				[75808] = {
					"Draka", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[61445] = {
					"Haiyan the Unstoppable", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[32908] = {
					"Captured Mercenary Captain", -- [1]
					"Ulduar", -- [2]
				},
				[61701] = {
					"Sik'thik Warrior", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[6212] = {
					"Dark Iron Agent", -- [1]
					"Gnomeregan", -- [2]
				},
				[174566] = {
					"Dungeoneer's Tanking Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[175616] = {
					"Zo'phex", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[13448] = {
					"Sergeant Yazra Bloodsnarl", -- [1]
					"Alterac Valley", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[76806] = {
					"Heart of the Mountain", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[174567] = {
					"Raider's Training Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[883] = {
					"Deer", -- [1]
					"Dire Maul", -- [2]
				},
				[16168] = {
					"Stoneskin Gargoyle", -- [1]
					"Naxxramas", -- [2]
				},
				[102400] = {
					"Eredar Shadow Mender", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[76821] = {
					"Firecaller", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11657] = {
					"Morloch", -- [1]
					"Alterac Valley", -- [2]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[174568] = {
					"Dungeoneer's Training Dummy", -- [1]
					"Grim Batol", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[30279] = {
					"Deep Crawler", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[80646] = {
					"Fiery Siegemaker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[18314] = {
					"Nexus Stalker", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[85765] = {
					"Cursed Kaliri", -- [1]
					"Ashran", -- [2]
				},
				[13318] = {
					"Commander Mortimer", -- [1]
					"Alterac Valley", -- [2]
				},
				[156142] = {
					"Seeker of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82438] = {
					"Warspear Shaman", -- [1]
					"Ashran", -- [2]
				},
				[10409] = {
					"Rockwing Screecher", -- [1]
					"Stratholme", -- [2]
				},
				[165868] = {
					"Minor Hex", -- [1]
					"Warsong Gulch", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[15974] = {
					"Dread Creeper", -- [1]
					"Naxxramas", -- [2]
				},
				[100354] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[11783] = {
					"Theradrim Shardling", -- [1]
					"Maraudon", -- [2]
				},
				[76296] = {
					"Twisted Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[137204] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[54920] = {
					"Infinite Suppressor", -- [1]
					"End Time", -- [2]
				},
				[13447] = {
					"Corporal Noreg Stormpike", -- [1]
					"Alterac Valley", -- [2]
				},
				[85766] = {
					"Cursed Sharptalon", -- [1]
					"Ashran", -- [2]
				},
				[23561] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Naxxramas", -- [2]
				},
				[76307] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[18317] = {
					"Ethereal Priest", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[34192] = {
					"Boomer XP-500", -- [1]
					"Ulduar", -- [2]
				},
				[11784] = {
					"Theradrim Guardian", -- [1]
					"Maraudon", -- [2]
				},
				[76310] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[7012] = {
					"Earthen Sculptor", -- [1]
					"Uldaman", -- [2]
				},
				[83719] = {
					"Wild Goreger", -- [1]
					"Ashran", -- [2]
				},
				[76309] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[179692] = {
					"Elysian Bulwark", -- [1]
					"Twin Peaks", -- [2]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[76809] = {
					"Foreman Feldspar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[65414] = {
					"Ethereal Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[122366] = {
					"Varimathras", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[15687] = {
					"Moroes", -- [1]
					"Karazhan", -- [2]
				},
			},
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["aura_frame2_anchor"] = {
				["y"] = 40,
			},
			["target_shady_enabled"] = false,
			["aura_stack_anchor"] = {
				["y"] = -5,
				["x"] = 1,
				["side"] = 11,
			},
			["cast_statusbar_texture"] = "ElvUI Blank",
			["use_ui_parent"] = true,
			["auto_toggle_stacking"] = {
				["cities"] = true,
			},
			["range_check_alpha_friendlies"] = 1,
			["first_run3"] = true,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
		},
	},
	["profileKeys"] = {
		["Senvorath - Gundrak"] = "Default",
		["Sencha - Gundrak"] = "Default",
		["Senogaar - Frostmourne"] = "Default",
		["Senjitsu - Caelestrasz"] = "Default",
		["Mahlou - Jubei'Thos"] = "Default",
		["Senzuke - Caelestrasz"] = "Default",
		["Rahruken - Suramar"] = "Default",
		["Hailatmog - Caelestrasz"] = "Default",
		["Lothran - Gundrak"] = "Default",
		["Feihai - Jubei'Thos"] = "Default",
		["Brewjitsu - Frostmourne"] = "Default",
		["Hailatmats - Saurfang"] = "Default",
		["Dalthrath - Frostmourne"] = "Default",
		["Senmu - Gundrak"] = "Default",
		["Hailat - Caelestrasz"] = "Default",
		["Senjitsu - Frostmourne"] = "Default",
		["Xiñ - Frostmourne"] = "Default",
		["Senjutsu - Gundrak"] = "Default",
		["Hailatmats - Caelestrasz"] = "Default",
		["Hahalulu - Caelestrasz"] = "Default",
		["Senshinzo - Frostmourne"] = "Default",
		["Hailat - Nagrand"] = "Default",
		["Pepsikilla - Suramar"] = "Default",
		["Senjichan - Frostmourne"] = "Default",
		["Senjuken - Gundrak"] = "Default",
		["Senshikari - Frostmourne"] = "Default",
		["Senmura - Saurfang"] = "Default",
		["Senreithis - Frostmourne"] = "Default",
		["Senviction - Frostmourne"] = "Default",
		["Sensujin - Gundrak"] = "Default",
		["Sèn - Frostmourne"] = "Default",
		["Senjítsu - Frostmourne"] = "Default",
		["Senshigeru - Caelestrasz"] = "Default",
		["Vandrill - Gundrak"] = "Default",
		["Senjíchan - Frostmourne"] = "Default",
		["Senjitsu - Bloodhoof"] = "Default",
		["Minyak - Jubei'Thos"] = "Default",
		["Senzuke - Gundrak"] = "Default",
		["Senshinzo - Gundrak"] = "Default",
		["Senshimusu - Gundrak"] = "Default",
		["Senzx - Frostmourne"] = "Default",
		["Senjitsu - Jubei'Thos"] = "Default",
		["Senshinzo - Caelestrasz"] = "Default",
		["Najib - Jubei'Thos"] = "Default",
		["Leonaldon - Frostmourne"] = "Default",
		["Frostsync - Frostmourne"] = "Default",
		["Rathang - Frostmourne"] = "Default",
		["Senjitsu - Saurfang"] = "Default",
		["Senjichan - Caelestrasz"] = "Default",
		["Vandrill - Saurfang"] = "Default",
		["Senruz - Barthilas"] = "Default",
		["Senorlax - Frostmourne"] = "Default",
		["Xeen - Frostmourne"] = "Default",
		["Senrogate - Frostmourne"] = "Default",
		["Sensujin - Frostmourne"] = "Default",
		["Senobibi - Frostmourne"] = "Default",
		["Senvo - Frostmourne"] = "Default",
		["Hailat - Saurfang"] = "Default",
		["Sendørei - Frostmourne"] = "Default",
		["Senshizo - Frostmourne"] = "Default",
		["Tailukyeh - Caelestrasz"] = "Default",
		["Hailatmog - Saurfang"] = "Default",
		["Xin - Caelestrasz"] = "Default",
		["Lemak - Jubei'Thos"] = "Default",
		["Senjitsu - Gundrak"] = "Default",
		["Senjìtsu - Barthilas"] = "Default",
		["Xïn - Saurfang"] = "Default",
		["Senobie - Emerald Dream"] = "Default",
		["Ngonghai - Jubei'Thos"] = "Default",
		["Sensitiv - Frostmourne"] = "Default",
		["Testxext - Frostmourne"] = "Default",
	},
	["captured_casts"] = {
		[36807] = {
			["npcID"] = 17771,
		},
		[345554] = {
			["npcID"] = 168585,
		},
		[124800] = {
			["npcID"] = 61502,
		},
		[294362] = {
			["npcID"] = 151127,
		},
		[168699] = {
			["npcID"] = 73459,
		},
		[331223] = {
			["npcID"] = 162763,
		},
		[195320] = {
			["npcID"] = 95866,
		},
		[122753] = {
			["npcID"] = 62677,
		},
		[156413] = {
			["npcID"] = 77504,
		},
		[339415] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[316890] = {
			["npcID"] = 153239,
		},
		[169724] = {
			["npcID"] = 84906,
		},
		[327130] = {
			["npcID"] = 165872,
		},
		[271841] = {
			["npcID"] = 157002,
		},
		[347609] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[228086] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 114584,
		},
		[171773] = {
			["npcID"] = 110627,
		},
		[320989] = {
			["npcID"] = 156561,
		},
		[347610] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[329181] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
		},
		[320991] = {
			["npcID"] = 162038,
		},
		[300514] = {
			["npcID"] = 150146,
		},
		[170751] = {
			["npcID"] = 156158,
		},
		[355806] = {
			["npcID"] = 179891,
		},
		[349663] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[34761] = {
			["encounterName"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["encounterID"] = 1926,
		},
		[172800] = {
			["npcID"] = 167301,
		},
		[339425] = {
			["npcID"] = 173447,
		},
		[339426] = {
			["npcID"] = 166521,
		},
		[122244] = {
			["npcID"] = 62632,
		},
		[318949] = {
			["npcID"] = 163894,
		},
		[331236] = {
			["npcID"] = 171092,
		},
		[331237] = {
			["npcID"] = 162763,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["npcID"] = 17882,
			["encounterID"] = 1948,
		},
		[353763] = {
			["npcID"] = 179135,
		},
		[355811] = {
			["npcID"] = 177291,
		},
		[167683] = {
			["npcID"] = 83687,
		},
		[321000] = {
			["npcID"] = 170992,
		},
		[323048] = {
			["npcID"] = 160345,
		},
		[347623] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[357862] = {
			["npcID"] = 177903,
		},
		[212735] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[310765] = {
			["npcID"] = 158897,
		},
		[353769] = {
			["npcID"] = 179135,
		},
		[13748] = {
			["npcID"] = 10422,
		},
		[164615] = {
			["npcID"] = 81767,
		},
		[333294] = {
			["npcID"] = 169893,
		},
		[154377] = {
			["npcID"] = 76440,
		},
		[321009] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[331248] = {
			["npcID"] = 171745,
		},
		[167688] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 82721,
			["encounterID"] = 1732,
		},
		[323058] = {
			["npcID"] = 165609,
		},
		[29670] = {
			["npcID"] = 16471,
		},
		[164617] = {
			["npcID"] = 81767,
		},
		[198405] = {
			["npcID"] = 97097,
		},
		[357871] = {
			["npcID"] = 177903,
		},
		[265723] = {
			["npcID"] = 147222,
		},
		[333299] = {
			["npcID"] = 169893,
		},
		[46026] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24553,
		},
		[108938] = {
			["npcID"] = 54611,
		},
		[265725] = {
			["npcID"] = 147222,
		},
		[172810] = {
			["npcID"] = 81603,
		},
		[198407] = {
			["npcID"] = 114289,
		},
		[323064] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[188169] = {
			["encounterName"] = "Rokmora",
			["encounterID"] = 1790,
			["npcID"] = 91003,
		},
		[353782] = {
			["npcID"] = 179136,
		},
		[355830] = {
			["npcID"] = 179893,
		},
		[59081] = {
			["npcID"] = 26554,
		},
		[353783] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[296447] = {
			["npcID"] = 152644,
		},
		[154383] = {
			["npcID"] = 76441,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["npcID"] = 59051,
			["encounterID"] = 1417,
		},
		[294401] = {
			["npcID"] = 151815,
		},
		[316927] = {
			["npcID"] = 160394,
		},
		[325119] = {
			["npcID"] = 162613,
		},
		[347645] = {
			["npcID"] = 164905,
		},
		[219913] = {
			["npcID"] = 95916,
		},
		[321025] = {
			["npcID"] = 157754,
		},
		[214794] = {
			["npcID"] = 135886,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74571,
			["encounterID"] = 1655,
		},
		[169744] = {
			["npcID"] = 84878,
		},
		[366077] = {
			["npcID"] = 183291,
		},
		[296454] = {
			["npcID"] = 152656,
		},
		[29927] = {
			["npcID"] = 16525,
		},
		[265741] = {
			["npcID"] = 135329,
		},
		[343556] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[189200] = {
			["npcID"] = 156244,
		},
		[31975] = {
			["npcID"] = 18501,
		},
		[32103] = {
			["npcID"] = 27540,
		},
		[167699] = {
			["npcID"] = 83803,
		},
		[259848] = {
			["npcID"] = 131617,
		},
		[195344] = {
			["npcID"] = 95866,
		},
		[329224] = {
			["npcID"] = 168022,
		},
		[275983] = {
			["npcID"] = 157820,
		},
		[201488] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99657,
			["encounterID"] = 1850,
		},
		[34254] = {
			["npcID"] = 18422,
		},
		[275984] = {
			["npcID"] = 166936,
		},
		[331274] = {
			["npcID"] = 167923,
		},
		[200465] = {
			["npcID"] = 90705,
		},
		[331275] = {
			["npcID"] = 167533,
		},
		[269843] = {
			["encounterName"] = "Unbound Abomination",
			["encounterID"] = 2123,
			["npcID"] = 133007,
		},
		[300560] = {
			["npcID"] = 150142,
		},
		[46029] = {
			["npcID"] = 24684,
		},
		[321038] = {
			["npcID"] = 162039,
		},
		[64971] = {
			["npcID"] = 34198,
		},
		[171799] = {
			["npcID"] = 85896,
		},
		[157465] = {
			["encounterName"] = "Vigilant Kaathar",
			["npcID"] = 75839,
			["encounterID"] = 1686,
		},
		[217874] = {
			["npcID"] = 109331,
		},
		[341520] = {
			["npcID"] = 173973,
		},
		[318995] = {
			["npcID"] = 155945,
		},
		[345616] = {
			["npcID"] = 172207,
		},
		[29928] = {
			["npcID"] = 114625,
		},
		[22121] = {
			["npcID"] = 13359,
		},
		[351762] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[154396] = {
			["encounterName"] = "High Sage Viryx",
			["npcID"] = 76266,
			["encounterID"] = 1701,
		},
		[69527] = {
			["npcID"] = 36891,
		},
		[47310] = {
			["npcID"] = 23872,
		},
		[347668] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[325143] = {
			["npcID"] = 162613,
		},
		[329239] = {
			["npcID"] = 163882,
		},
		[265759] = {
			["npcID"] = 135329,
		},
		[245522] = {
			["npcID"] = 122404,
		},
		[265760] = {
			["npcID"] = 135329,
		},
		[316954] = {
			["npcID"] = 165831,
		},
		[345623] = {
			["npcID"] = 165824,
		},
		[69528] = {
			["npcID"] = 36892,
		},
		[159518] = {
			["npcID"] = 78978,
		},
		[80279] = {
			["npcID"] = 42691,
		},
		[225047] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112603,
		},
		[345627] = {
			["npcID"] = 159174,
		},
		[357915] = {
			["npcID"] = 177903,
		},
		[122259] = {
			["npcID"] = 62632,
		},
		[188189] = {
			["encounterName"] = "Gruul",
			["encounterID"] = 1691,
			["npcID"] = 81117,
		},
		[198428] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[319010] = {
			["npcID"] = 161530,
		},
		[68506] = {
			["npcID"] = 34924,
		},
		[265770] = {
			["npcID"] = 135054,
		},
		[357920] = {
			["npcID"] = 179684,
		},
		[321061] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[265772] = {
			["npcID"] = 135054,
		},
		[158499] = {
			["npcID"] = 73805,
		},
		[265773] = {
			["encounterName"] = "The Golden Serpent",
			["npcID"] = 135322,
			["encounterID"] = 2139,
		},
		[204574] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[39121] = {
			["npcID"] = 18419,
		},
		[335398] = {
			["npcID"] = 161246,
		},
		[220957] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 111022,
		},
		[41169] = {
			["npcID"] = 23339,
		},
		[267824] = {
			["npcID"] = 135240,
		},
		[331305] = {
			["npcID"] = 161599,
		},
		[341544] = {
			["npcID"] = 166146,
		},
		[325163] = {
			["npcID"] = 171772,
		},
		[368166] = {
			["npcID"] = 183814,
		},
		[173861] = {
			["npcID"] = 84373,
		},
		[316974] = {
			["npcID"] = 161133,
		},
		[319022] = {
			["npcID"] = 158259,
		},
		[265781] = {
			["encounterName"] = "The Golden Serpent",
			["npcID"] = 135322,
			["encounterID"] = 2139,
		},
		[351787] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 177594,
		},
		[353835] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[39378] = {
			["npcID"] = 21126,
		},
		[353836] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[357932] = {
			["npcID"] = 178810,
		},
		[362028] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[161577] = {
			["npcID"] = 85693,
		},
		[355887] = {
			["npcID"] = 177293,
		},
		[325171] = {
			["npcID"] = 170037,
		},
		[355888] = {
			["npcID"] = 177807,
		},
		[284217] = {
			["npcID"] = 144564,
		},
		[205605] = {
			["npcID"] = 166137,
		},
		[331316] = {
			["npcID"] = 167538,
		},
		[284218] = {
			["npcID"] = 144564,
		},
		[335412] = {
			["npcID"] = 178660,
		},
		[226083] = {
			["npcID"] = 161528,
		},
		[314935] = {
			["npcID"] = 160409,
		},
		[357938] = {
			["npcID"] = 177336,
		},
		[158508] = {
			["npcID"] = 85753,
		},
		[49106] = {
			["npcID"] = 26696,
		},
		[108955] = {
			["npcID"] = 54611,
		},
		[284223] = {
			["npcID"] = 144564,
		},
		[357943] = {
			["npcID"] = 180013,
		},
		[327227] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[357944] = {
			["npcID"] = 179768,
		},
		[197418] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["encounterID"] = 1833,
			["npcID"] = 98696,
		},
		[314942] = {
			["npcID"] = 166869,
		},
		[46035] = {
			["npcID"] = 24685,
		},
		[325183] = {
			["npcID"] = 164626,
		},
		[216873] = {
			["npcID"] = 109017,
		},
		[355900] = {
			["npcID"] = 177807,
		},
		[316993] = {
			["npcID"] = 167443,
		},
		[323137] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164804,
		},
		[308803] = {
			["npcID"] = 158259,
		},
		[327233] = {
			["npcID"] = 168393,
		},
		[323138] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[154418] = {
			["npcID"] = 76502,
		},
		[59346] = {
			["npcID"] = 28922,
		},
		[351808] = {
			["npcID"] = 176577,
		},
		[153395] = {
			["npcID"] = 76057,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[357953] = {
			["npcID"] = 180013,
		},
		[269900] = {
			["npcID"] = 171141,
		},
		[331333] = {
			["npcID"] = 168659,
		},
		[347716] = {
			["npcID"] = 176394,
		},
		[174898] = {
			["npcID"] = 85294,
		},
		[296523] = {
			["npcID"] = 152708,
		},
		[298571] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153756,
		},
		[327240] = {
			["npcID"] = 165911,
		},
		[339527] = {
			["npcID"] = 173469,
		},
		[12471] = {
			["npcID"] = 17694,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["npcID"] = 40586,
		},
		[355910] = {
			["npcID"] = 178666,
		},
		[69028] = {
			["encounterName"] = "Krick",
			["npcID"] = 36477,
			["encounterID"] = 2001,
		},
		[59347] = {
			["npcID"] = 29051,
		},
		[59603] = {
			["npcID"] = 24071,
		},
		[165685] = {
			["npcID"] = 79585,
		},
		[347721] = {
			["npcID"] = 176396,
		},
		[195378] = {
			["npcID"] = 95869,
		},
		[212784] = {
			["npcID"] = 105715,
		},
		[37078] = {
			["npcID"] = 16529,
		},
		[323149] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[323150] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[260907] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131824,
		},
		[327246] = {
			["npcID"] = 167524,
		},
		[39126] = {
			["npcID"] = 18422,
		},
		[355915] = {
			["npcID"] = 177816,
		},
		[159544] = {
			["npcID"] = 82220,
		},
		[194356] = {
			["npcID"] = 94152,
		},
		[212786] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[321105] = {
			["npcID"] = 168591,
		},
		[347726] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[93091] = {
			["npcID"] = 951,
		},
		[162617] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77816,
			["encounterID"] = 1715,
		},
		[357967] = {
			["npcID"] = 178897,
		},
		[325205] = {
			["npcID"] = 166936,
		},
		[83877] = {
			["npcID"] = 44926,
		},
		[335445] = {
			["npcID"] = 180032,
		},
		[39127] = {
			["npcID"] = 19486,
		},
		[290395] = {
			["npcID"] = 144536,
		},
		[302682] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[32364] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18344,
		},
		[16247] = {
			["encounterName"] = "Lethtendris",
			["encounterID"] = 345,
			["npcID"] = 14327,
		},
		[76711] = {
			["npcID"] = 40167,
		},
		[162621] = {
			["npcID"] = 80488,
		},
		[172860] = {
			["npcID"] = 83025,
		},
		[191290] = {
			["npcID"] = 76642,
		},
		[121762] = {
			["npcID"] = 62633,
		},
		[162622] = {
			["npcID"] = 80488,
		},
		[355929] = {
			["npcID"] = 177803,
		},
		[319070] = {
			["npcID"] = 163891,
		},
		[168766] = {
			["npcID"] = 77256,
		},
		[355930] = {
			["npcID"] = 177816,
		},
		[351835] = {
			["npcID"] = 179894,
		},
		[329310] = {
			["npcID"] = 156909,
		},
		[357979] = {
			["npcID"] = 178897,
		},
		[347741] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[57046] = {
			["npcID"] = 26737,
		},
		[357981] = {
			["npcID"] = 177562,
		},
		[355934] = {
			["npcID"] = 177817,
		},
		[223034] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109040,
		},
		[321124] = {
			["npcID"] = 171009,
		},
		[44504] = {
			["npcID"] = 24690,
		},
		[269931] = {
			["npcID"] = 134157,
		},
		[185152] = {
			["npcID"] = 157820,
		},
		[290411] = {
			["npcID"] = 144536,
		},
		[325223] = {
			["npcID"] = 166304,
		},
		[349797] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[188225] = {
			["npcID"] = 94916,
		},
		[362084] = {
			["npcID"] = 181324,
		},
		[82858] = {
			["npcID"] = 42333,
		},
		[76715] = {
			["npcID"] = 40167,
		},
		[327274] = {
			["npcID"] = 167524,
		},
		[337513] = {
			["npcID"] = 158259,
		},
		[170821] = {
			["npcID"] = 85026,
		},
		[106920] = {
			["npcID"] = 56763,
		},
		[355945] = {
			["npcID"] = 179940,
		},
		[174917] = {
			["npcID"] = 82841,
		},
		[329325] = {
			["npcID"] = 155831,
		},
		[38618] = {
			["encounterName"] = "Frozen Commander",
			["encounterID"] = 519,
			["npcID"] = 26798,
		},
		[329326] = {
			["npcID"] = 155831,
		},
		[355947] = {
			["npcID"] = 177805,
		},
		[166727] = {
			["npcID"] = 77066,
		},
		[349805] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176973,
		},
		[327280] = {
			["npcID"] = 167524,
		},
		[294517] = {
			["npcID"] = 151816,
		},
		[337520] = {
			["npcID"] = 159412,
		},
		[355950] = {
			["npcID"] = 178029,
		},
		[284279] = {
			["npcID"] = 144565,
		},
		[343664] = {
			["npcID"] = 162452,
		},
		[290423] = {
			["npcID"] = 144536,
		},
		[183111] = {
			["npcID"] = 165793,
		},
		[335474] = {
			["npcID"] = 169502,
		},
		[22127] = {
			["npcID"] = 13443,
		},
		[331379] = {
			["npcID"] = 167965,
		},
		[333427] = {
			["npcID"] = 165175,
		},
		[36827] = {
			["npcID"] = 20901,
		},
		[321141] = {
			["npcID"] = 160357,
		},
		[74670] = {
			["encounterName"] = "General Umbriss",
			["encounterID"] = 1051,
			["npcID"] = 39625,
		},
		[46042] = {
			["npcID"] = 24686,
		},
		[323190] = {
			["npcID"] = 163121,
		},
		[179017] = {
			["npcID"] = 88084,
		},
		[339573] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[341621] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[228164] = {
			["npcID"] = 114584,
		},
		[106923] = {
			["encounterName"] = "Gu Cloudstrike",
			["npcID"] = 56754,
			["encounterID"] = 1303,
		},
		[341623] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[76719] = {
			["npcID"] = 40021,
		},
		[358006] = {
			["npcID"] = 178789,
		},
		[294526] = {
			["npcID"] = 151817,
		},
		[128937] = {
			["npcID"] = 63624,
		},
		[337530] = {
			["npcID"] = 158259,
		},
		[162638] = {
			["npcID"] = 80499,
		},
		[329340] = {
			["npcID"] = 165410,
		},
		[174925] = {
			["npcID"] = 81617,
		},
		[46043] = {
			["npcID"] = 24686,
		},
		[76720] = {
			["npcID"] = 39962,
		},
		[335485] = {
			["npcID"] = 166415,
		},
		[355963] = {
			["npcID"] = 152594,
		},
		[358011] = {
			["npcID"] = 178789,
		},
		[327296] = {
			["npcID"] = 156561,
		},
		[294533] = {
			["npcID"] = 151817,
		},
		[347775] = {
			["npcID"] = 176395,
		},
		[154450] = {
			["npcID"] = 75071,
		},
		[163665] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80805,
		},
		[29935] = {
			["npcID"] = 16596,
		},
		[158546] = {
			["npcID"] = 84872,
		},
		[360064] = {
			["npcID"] = 184216,
		},
		[197454] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 100351,
			["encounterID"] = 1818,
		},
		[46044] = {
			["npcID"] = 24815,
		},
		[355970] = {
			["npcID"] = 152594,
		},
		[325254] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[171858] = {
			["npcID"] = 177877,
		},
		[189264] = {
			["npcID"] = 91921,
		},
		[331398] = {
			["npcID"] = 170147,
		},
		[225100] = {
			["npcID"] = 104270,
		},
		[325256] = {
			["npcID"] = 161447,
		},
		[335495] = {
			["npcID"] = 180032,
		},
		[174931] = {
			["npcID"] = 81631,
		},
		[272016] = {
			["npcID"] = 154014,
		},
		[325258] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[331402] = {
			["npcID"] = 157754,
		},
		[358023] = {
			["npcID"] = 180474,
		},
		[300687] = {
			["npcID"] = 150168,
		},
		[265876] = {
			["npcID"] = 135365,
		},
		[151384] = {
			["npcID"] = 83998,
		},
		[163671] = {
			["npcID"] = 88782,
		},
		[111024] = {
			["npcID"] = 58592,
		},
		[355979] = {
			["npcID"] = 177804,
		},
		[174934] = {
			["npcID"] = 81631,
		},
		[360075] = {
			["npcID"] = 182210,
		},
		[121263] = {
			["npcID"] = 62589,
		},
		[237391] = {
			["npcID"] = 120366,
		},
		[265880] = {
			["npcID"] = 135365,
		},
		[225105] = {
			["npcID"] = 112595,
		},
		[337552] = {
			["npcID"] = 162853,
		},
		[265881] = {
			["npcID"] = 135365,
		},
		[335505] = {
			["npcID"] = 166415,
		},
		[353935] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[199509] = {
			["npcID"] = 90714,
		},
		[257870] = {
			["npcID"] = 130011,
		},
		[317077] = {
			["npcID"] = 155192,
		},
		[329364] = {
			["npcID"] = 158025,
		},
		[331412] = {
			["npcID"] = 169825,
		},
		[46046] = {
			["npcID"] = 24687,
		},
		[337556] = {
			["npcID"] = 162853,
		},
		[15801] = {
			["npcID"] = 11600,
		},
		[319127] = {
			["npcID"] = 159298,
		},
		[331414] = {
			["npcID"] = 157754,
		},
		[39647] = {
			["npcID"] = 30453,
		},
		[345749] = {
			["npcID"] = 158259,
		},
		[298651] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153756,
		},
		[182106] = {
			["npcID"] = 90186,
		},
		[278175] = {
			["npcID"] = 155226,
		},
		[321178] = {
			["npcID"] = 162047,
		},
		[358038] = {
			["npcID"] = 179802,
		},
		[278176] = {
			["npcID"] = 155226,
		},
		[157534] = {
			["npcID"] = 88087,
		},
		[337562] = {
			["npcID"] = 162875,
		},
		[36832] = {
			["npcID"] = 20902,
		},
		[323229] = {
			["npcID"] = 172067,
		},
		[358041] = {
			["npcID"] = 180160,
		},
		[345755] = {
			["npcID"] = 165663,
		},
		[337566] = {
			["npcID"] = 172797,
		},
		[169823] = {
			["npcID"] = 84983,
		},
		[278182] = {
			["npcID"] = 155226,
		},
		[329376] = {
			["npcID"] = 179913,
		},
		[169824] = {
			["npcID"] = 84984,
		},
		[59102] = {
			["npcID"] = 30278,
		},
		[34785] = {
			["npcID"] = 18405,
		},
		[205660] = {
			["npcID"] = 126284,
		},
		[339617] = {
			["npcID"] = 166679,
		},
		[358047] = {
			["npcID"] = 179931,
		},
		[321188] = {
			["npcID"] = 150238,
		},
		[169825] = {
			["npcID"] = 84990,
		},
		[327332] = {
			["npcID"] = 163459,
		},
		[156515] = {
			["npcID"] = 79469,
		},
		[356001] = {
			["npcID"] = 177808,
		},
		[193375] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[333477] = {
			["npcID"] = 163621,
		},
		[213853] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[329383] = {
			["npcID"] = 167331,
		},
		[356004] = {
			["npcID"] = 177514,
		},
		[333479] = {
			["npcID"] = 163620,
		},
		[82362] = {
			["npcID"] = 39987,
		},
		[198496] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[358053] = {
			["npcID"] = 180160,
		},
		[335528] = {
			["npcID"] = 159755,
		},
		[298669] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[59359] = {
			["encounterName"] = "Anub'arak",
			["encounterID"] = 1973,
			["npcID"] = 29217,
		},
		[358055] = {
			["npcID"] = 179254,
		},
		[351912] = {
			["npcID"] = 178366,
		},
		[362151] = {
			["npcID"] = 182745,
		},
		[368295] = {
			["npcID"] = 183953,
		},
		[288433] = {
			["npcID"] = 145287,
		},
		[124854] = {
			["npcID"] = 50769,
		},
		[356010] = {
			["npcID"] = 178041,
		},
		[27634] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[345772] = {
			["npcID"] = 175579,
		},
		[265910] = {
			["encounterName"] = "The Golden Serpent",
			["npcID"] = 135322,
			["encounterID"] = 2139,
		},
		[329392] = {
			["npcID"] = 157576,
		},
		[333488] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[362157] = {
			["npcID"] = 182879,
		},
		[356014] = {
			["npcID"] = 177356,
		},
		[228193] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114329,
		},
		[163689] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80816,
		},
		[59616] = {
			["npcID"] = 23960,
		},
		[329395] = {
			["npcID"] = 170044,
		},
		[353969] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[15802] = {
			["npcID"] = 12157,
		},
		[204646] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[353971] = {
			["npcID"] = 178949,
		},
		[356019] = {
			["npcID"] = 177537,
		},
		[358067] = {
			["npcID"] = 178877,
		},
		[200551] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[32370] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18430,
		},
		[162668] = {
			["npcID"] = 75943,
		},
		[165740] = {
			["npcID"] = 82010,
		},
		[256865] = {
			["npcID"] = 169175,
		},
		[329401] = {
			["npcID"] = 167464,
		},
		[17140] = {
			["npcID"] = 82009,
		},
		[267969] = {
			["npcID"] = 134137,
		},
		[171884] = {
			["npcID"] = 108757,
		},
		[329402] = {
			["npcID"] = 161620,
		},
		[165741] = {
			["npcID"] = 82005,
		},
		[128953] = {
			["npcID"] = 64474,
		},
		[106428] = {
			["npcID"] = 56395,
		},
		[329404] = {
			["npcID"] = 159407,
		},
		[190315] = {
			["npcID"] = 95852,
		},
		[116155] = {
			["npcID"] = 59521,
		},
		[267973] = {
			["npcID"] = 134137,
		},
		[351931] = {
			["npcID"] = 176598,
		},
		[270022] = {
			["npcID"] = 151634,
		},
		[321216] = {
			["npcID"] = 164886,
		},
		[169839] = {
			["npcID"] = 84957,
		},
		[325312] = {
			["npcID"] = 170663,
		},
		[41188] = {
			["npcID"] = 22847,
		},
		[169840] = {
			["npcID"] = 84989,
		},
		[267977] = {
			["npcID"] = 134139,
		},
		[69570] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 37576,
			["encounterID"] = 2000,
		},
		[189294] = {
			["npcID"] = 91917,
		},
		[356031] = {
			["npcID"] = 177816,
		},
		[135029] = {
			["npcID"] = 78116,
		},
		[169841] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 84990,
			["encounterID"] = 1751,
		},
		[180080] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90485,
			["encounterID"] = 1778,
		},
		[189295] = {
			["npcID"] = 91917,
		},
		[256871] = {
			["npcID"] = 169175,
		},
		[315079] = {
			["npcID"] = 161388,
		},
		[358082] = {
			["npcID"] = 179608,
		},
		[351939] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177891,
			["encounterID"] = 2435,
		},
		[329414] = {
			["npcID"] = 158928,
		},
		[356035] = {
			["npcID"] = 178757,
		},
		[329415] = {
			["npcID"] = 159657,
		},
		[169843] = {
			["npcID"] = 84957,
		},
		[341702] = {
			["npcID"] = 162657,
		},
		[122813] = {
			["npcID"] = 62379,
		},
		[315082] = {
			["npcID"] = 158259,
		},
		[358085] = {
			["npcID"] = 179859,
		},
		[217966] = {
			["npcID"] = 109331,
		},
		[17141] = {
			["npcID"] = 10423,
		},
		[171892] = {
			["npcID"] = 85900,
		},
		[174964] = {
			["npcID"] = 84775,
		},
		[263891] = {
			["npcID"] = 131670,
		},
		[61923] = {
			["encounterName"] = "Hodir",
			["encounterID"] = 1135,
			["npcID"] = 32948,
		},
		[257899] = {
			["npcID"] = 130012,
		},
		[69573] = {
			["npcID"] = 36842,
		},
		[329422] = {
			["npcID"] = 157571,
		},
		[165751] = {
			["npcID"] = 82187,
		},
		[341709] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[169847] = {
			["npcID"] = 84989,
		},
		[347854] = {
			["npcID"] = 168134,
		},
		[150394] = {
			["npcID"] = 74721,
		},
		[337616] = {
			["npcID"] = 158989,
		},
		[59108] = {
			["npcID"] = 30279,
		},
		[69574] = {
			["npcID"] = 36842,
		},
		[165753] = {
			["npcID"] = 88777,
		},
		[154491] = {
			["npcID"] = 76442,
		},
		[212852] = {
			["npcID"] = 107023,
		},
		[347858] = {
			["npcID"] = 168134,
		},
		[15547] = {
			["npcID"] = 46250,
		},
		[267997] = {
			["npcID"] = 135816,
		},
		[321240] = {
			["encounterName"] = "Tunk",
			["npcID"] = 157300,
			["encounterID"] = 2325,
		},
		[331479] = {
			["npcID"] = 167923,
		},
		[329432] = {
			["npcID"] = 177861,
		},
		[115650] = {
			["npcID"] = 59522,
		},
		[116162] = {
			["npcID"] = 59520,
		},
		[263905] = {
			["npcID"] = 131677,
		},
		[153470] = {
			["encounterName"] = "Hans'gar & Franzok",
			["encounterID"] = 1693,
			["npcID"] = 76974,
		},
		[333531] = {
			["npcID"] = 172210,
		},
		[163710] = {
			["npcID"] = 79910,
		},
		[123330] = {
			["npcID"] = 62522,
		},
		[190331] = {
			["npcID"] = 167664,
		},
		[166782] = {
			["npcID"] = 83807,
		},
		[175997] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83894,
			["encounterID"] = 1757,
		},
		[9532] = {
			["npcID"] = 11675,
		},
		[366297] = {
			["npcID"] = 184911,
		},
		[204666] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[321247] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[204667] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[321249] = {
			["npcID"] = 162051,
		},
		[41448] = {
			["npcID"] = 177637,
		},
		[327393] = {
			["npcID"] = 163618,
		},
		[59366] = {
			["npcID"] = 28731,
		},
		[366303] = {
			["npcID"] = 183927,
		},
		[351969] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[181120] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90114,
			["encounterID"] = 1778,
		},
		[46568] = {
			["npcID"] = 25757,
		},
		[300777] = {
			["npcID"] = 150165,
		},
		[155524] = {
			["npcID"] = 77131,
		},
		[362210] = {
			["npcID"] = 181963,
		},
		[182145] = {
			["npcID"] = 112771,
		},
		[358115] = {
			["npcID"] = 178467,
		},
		[128964] = {
			["npcID"] = 65598,
		},
		[321256] = {
			["npcID"] = 156815,
		},
		[145286] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 71405,
			["encounterID"] = 1594,
		},
		[358116] = {
			["npcID"] = 180627,
		},
		[106439] = {
			["npcID"] = 56395,
		},
		[341735] = {
			["npcID"] = 174336,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 44715,
		},
		[366309] = {
			["npcID"] = 180917,
		},
		[351976] = {
			["npcID"] = 176598,
		},
		[356072] = {
			["npcID"] = 177394,
		},
		[323309] = {
			["npcID"] = 166932,
		},
		[284402] = {
			["npcID"] = 144566,
		},
		[83915] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 44715,
		},
		[167815] = {
			["npcID"] = 83390,
		},
		[329455] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[325360] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[339695] = {
			["npcID"] = 160821,
		},
		[349934] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[200580] = {
			["npcID"] = 95779,
		},
		[337648] = {
			["npcID"] = 158924,
		},
		[21367] = {
			["npcID"] = 13256,
		},
		[212867] = {
			["npcID"] = 107023,
		},
		[15228] = {
			["npcID"] = 11604,
		},
		[284409] = {
			["npcID"] = 144566,
		},
		[204677] = {
			["npcID"] = 114399,
		},
		[356081] = {
			["npcID"] = 177390,
		},
		[341747] = {
			["npcID"] = 174158,
		},
		[327413] = {
			["npcID"] = 168318,
		},
		[125384] = {
			["npcID"] = 61618,
		},
		[31478] = {
			["npcID"] = 17918,
		},
		[211845] = {
			["npcID"] = 150805,
		},
		[69583] = {
			["npcID"] = 36893,
		},
		[331510] = {
			["npcID"] = 170838,
		},
		[268030] = {
			["npcID"] = 136186,
		},
		[319224] = {
			["npcID"] = 157962,
		},
		[178059] = {
			["npcID"] = 80491,
		},
		[368373] = {
			["npcID"] = 183516,
		},
		[356088] = {
			["npcID"] = 177390,
		},
		[147344] = {
			["npcID"] = 72245,
		},
		[172941] = {
			["npcID"] = 80691,
		},
		[360185] = {
			["npcID"] = 183566,
		},
		[356090] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[147345] = {
			["npcID"] = 71908,
		},
		[351996] = {
			["npcID"] = 178384,
		},
		[263943] = {
			["npcID"] = 131677,
		},
		[368379] = {
			["npcID"] = 183516,
		},
		[172943] = {
			["npcID"] = 84520,
		},
		[347903] = {
			["npcID"] = 176395,
		},
		[339713] = {
			["npcID"] = 162586,
		},
		[30967] = {
			["npcID"] = 115038,
		},
		[349954] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[131991] = {
			["npcID"] = 63624,
		},
		[356099] = {
			["npcID"] = 177395,
		},
		[199567] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 101028,
		},
		[64746] = {
			["npcID"] = 34086,
		},
		[356100] = {
			["npcID"] = 177395,
		},
		[106447] = {
			["npcID"] = 56395,
		},
		[178067] = {
			["npcID"] = 88094,
		},
		[325386] = {
			["npcID"] = 166941,
		},
		[309005] = {
			["npcID"] = 158181,
		},
		[151447] = {
			["npcID"] = 84978,
		},
		[81363] = {
			["npcID"] = 168387,
		},
		[341771] = {
			["npcID"] = 170882,
		},
		[62443] = {
			["encounterName"] = "Thorim",
			["npcID"] = 33110,
			["encounterID"] = 1141,
		},
		[169878] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84399,
			["encounterID"] = 1756,
		},
		[162711] = {
			["npcID"] = 80576,
		},
		[300818] = {
			["npcID"] = 150195,
		},
		[263959] = {
			["npcID"] = 131812,
		},
		[154521] = {
			["npcID"] = 76438,
		},
		[341775] = {
			["npcID"] = 167528,
		},
		[100818] = {
			["npcID"] = 53364,
		},
		[178071] = {
			["npcID"] = 80486,
		},
		[21369] = {
			["npcID"] = 13256,
		},
		[171928] = {
			["npcID"] = 86076,
		},
		[172952] = {
			["npcID"] = 83026,
		},
		[323347] = {
			["npcID"] = 165137,
		},
		[325395] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 166813,
		},
		[178072] = {
			["npcID"] = 80486,
		},
		[170905] = {
			["npcID"] = 82201,
		},
		[176025] = {
			["npcID"] = 88163,
		},
		[69591] = {
			["npcID"] = 36925,
		},
		[325399] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[354068] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 175732,
		},
		[331543] = {
			["npcID"] = 170196,
		},
		[343830] = {
			["npcID"] = 157964,
		},
		[116178] = {
			["npcID"] = 59522,
		},
		[83926] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 44715,
		},
		[69080] = {
			["npcID"] = 36564,
		},
		[69592] = {
			["npcID"] = 6190,
		},
		[78807] = {
			["encounterName"] = "Ozruk",
			["npcID"] = 42188,
			["encounterID"] = 1058,
		},
		[176028] = {
			["npcID"] = 86410,
		},
		[337690] = {
			["npcID"] = 160392,
		},
		[178076] = {
			["npcID"] = 80486,
		},
		[154527] = {
			["npcID"] = 77812,
		},
		[331548] = {
			["npcID"] = 167964,
		},
		[62445] = {
			["npcID"] = 32878,
		},
		[288546] = {
			["npcID"] = 170495,
		},
		[221080] = {
			["npcID"] = 90544,
		},
		[356123] = {
			["npcID"] = 177395,
		},
		[358171] = {
			["npcID"] = 179070,
		},
		[80344] = {
			["npcID"] = 43014,
		},
		[186269] = {
			["npcID"] = 90998,
		},
		[341790] = {
			["npcID"] = 167528,
		},
		[196508] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99657,
			["encounterID"] = 1850,
		},
		[272167] = {
			["npcID"] = 136404,
		},
		[319266] = {
			["npcID"] = 167033,
		},
		[250774] = {
			["npcID"] = 126337,
		},
		[333602] = {
			["npcID"] = 163126,
		},
		[176032] = {
			["npcID"] = 88163,
		},
		[354080] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[290600] = {
			["npcID"] = 151684,
		},
		[37361] = {
			["npcID"] = 10390,
		},
		[333604] = {
			["npcID"] = 165664,
		},
		[327461] = {
			["npcID"] = 161105,
		},
		[329509] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[349987] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[31865] = {
			["npcID"] = 17399,
		},
		[120789] = {
			["encounterName"] = "Commander Vo'jak",
			["encounterID"] = 1502,
			["npcID"] = 61634,
		},
		[323368] = {
			["npcID"] = 159609,
		},
		[319273] = {
			["npcID"] = 151091,
		},
		[296748] = {
			["npcID"] = 152875,
		},
		[356133] = {
			["npcID"] = 180015,
		},
		[12542] = {
			["encounterName"] = "Postmaster Malown",
			["encounterID"] = 1885,
			["npcID"] = 11143,
		},
		[186274] = {
			["npcID"] = 90284,
		},
		[325418] = {
			["npcID"] = 167113,
		},
		[319275] = {
			["npcID"] = 165323,
		},
		[148391] = {
			["npcID"] = 73670,
		},
		[327467] = {
			["npcID"] = 153165,
		},
		[266035] = {
			["npcID"] = 135474,
		},
		[228254] = {
			["npcID"] = 114626,
		},
		[266036] = {
			["npcID"] = 135474,
		},
		[333612] = {
			["npcID"] = 156061,
		},
		[193443] = {
			["encounterName"] = "Glazer",
			["npcID"] = 95887,
			["encounterID"] = 1817,
		},
		[202658] = {
			["npcID"] = 102584,
		},
		[317231] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[196515] = {
			["npcID"] = 100250,
		},
		[356139] = {
			["npcID"] = 178043,
		},
		[304946] = {
			["npcID"] = 177071,
		},
		[202659] = {
			["encounterName"] = "Blood-Princess Thal'ena",
			["encounterID"] = 1855,
			["npcID"] = 102431,
		},
		[163752] = {
			["npcID"] = 78832,
		},
		[272183] = {
			["npcID"] = 134284,
		},
		[76765] = {
			["npcID"] = 39870,
		},
		[327474] = {
			["npcID"] = 163670,
		},
		[199589] = {
			["npcID"] = 99033,
		},
		[202661] = {
			["npcID"] = 102583,
		},
		[203685] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99676,
			["encounterID"] = 1850,
		},
		[362288] = {
			["npcID"] = 181968,
		},
		[350002] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[319286] = {
			["npcID"] = 164084,
		},
		[177065] = {
			["npcID"] = 79929,
		},
		[331573] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 170199,
		},
		[171946] = {
			["npcID"] = 86076,
		},
		[331574] = {
			["npcID"] = 170217,
		},
		[177066] = {
			["npcID"] = 79929,
		},
		[366387] = {
			["npcID"] = 180978,
		},
		[327481] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[178091] = {
			["npcID"] = 80491,
		},
		[362294] = {
			["npcID"] = 181968,
		},
		[319292] = {
			["npcID"] = 156676,
		},
		[339770] = {
			["npcID"] = 173568,
		},
		[197546] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["encounterID"] = 1833,
			["npcID"] = 98696,
		},
		[309055] = {
			["npcID"] = 156320,
		},
		[319294] = {
			["npcID"] = 162817,
		},
		[333629] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 168246,
		},
		[164783] = {
			["npcID"] = 138299,
		},
		[219049] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109041,
		},
		[325440] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165764,
		},
		[323393] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[358205] = {
			["npcID"] = 178862,
		},
		[319298] = {
			["npcID"] = 162817,
		},
		[339776] = {
			["npcID"] = 173568,
		},
		[154546] = {
			["npcID"] = 76438,
		},
		[150451] = {
			["npcID"] = 74719,
		},
		[217003] = {
			["npcID"] = 110614,
		},
		[44276] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[356160] = {
			["npcID"] = 177567,
		},
		[321349] = {
			["npcID"] = 164857,
		},
		[354114] = {
			["npcID"] = 179234,
		},
		[356162] = {
			["npcID"] = 179386,
		},
		[11839] = {
			["npcID"] = 52649,
		},
		[39413] = {
			["npcID"] = 17729,
		},
		[158644] = {
			["npcID"] = 77559,
		},
		[354117] = {
			["npcID"] = 179234,
		},
		[175027] = {
			["npcID"] = 79629,
		},
		[327497] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[333641] = {
			["npcID"] = 169905,
		},
		[17405] = {
			["encounterName"] = "Balnazzar",
			["encounterID"] = 478,
			["npcID"] = 10813,
		},
		[358215] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177787,
			["encounterID"] = 2435,
		},
		[168885] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 82682,
			["encounterID"] = 1751,
		},
		[356169] = {
			["npcID"] = 177567,
		},
		[343883] = {
			["npcID"] = 167664,
		},
		[366409] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 184908,
			["encounterID"] = 2381,
		},
		[147385] = {
			["npcID"] = 72844,
		},
		[172982] = {
			["npcID"] = 83026,
		},
		[339789] = {
			["npcID"] = 166046,
		},
		[358219] = {
			["npcID"] = 179070,
		},
		[335694] = {
			["npcID"] = 157810,
		},
		[337742] = {
			["npcID"] = 159151,
		},
		[264024] = {
			["npcID"] = 131812,
		},
		[366412] = {
			["npcID"] = 183746,
		},
		[202676] = {
			["encounterName"] = "Blood-Princess Thal'ena",
			["encounterID"] = 1855,
			["npcID"] = 102431,
		},
		[228273] = {
			["npcID"] = 114637,
		},
		[360270] = {
			["npcID"] = 181625,
		},
		[345936] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[354128] = {
			["npcID"] = 178949,
		},
		[284506] = {
			["npcID"] = 144566,
		},
		[200630] = {
			["npcID"] = 95769,
		},
		[38391] = {
			["npcID"] = 46260,
		},
		[358226] = {
			["npcID"] = 176949,
		},
		[368465] = {
			["npcID"] = 180746,
		},
		[321367] = {
			["npcID"] = 166721,
		},
		[39415] = {
			["encounterName"] = "Harbinger Skyriss",
			["npcID"] = 20912,
			["encounterID"] = 1914,
		},
		[358227] = {
			["npcID"] = 176959,
		},
		[343893] = {
			["npcID"] = 162829,
		},
		[114658] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[298844] = {
			["npcID"] = 168005,
		},
		[228277] = {
			["npcID"] = 114634,
		},
		[339801] = {
			["npcID"] = 166046,
		},
		[327515] = {
			["npcID"] = 168361,
		},
		[329563] = {
			["npcID"] = 152508,
		},
		[358232] = {
			["npcID"] = 180104,
		},
		[337755] = {
			["npcID"] = 163213,
		},
		[325469] = {
			["npcID"] = 166928,
		},
		[225207] = {
			["npcID"] = 100993,
		},
		[226231] = {
			["npcID"] = 111170,
		},
		[298849] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[228279] = {
			["npcID"] = 114632,
		},
		[264038] = {
			["npcID"] = 131666,
		},
		[341854] = {
			["npcID"] = 173832,
		},
		[354142] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[358238] = {
			["npcID"] = 178851,
		},
		[59638] = {
			["npcID"] = 31216,
		},
		[358239] = {
			["npcID"] = 178851,
		},
		[200637] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[162754] = {
			["npcID"] = 85122,
		},
		[37113] = {
			["npcID"] = 17771,
		},
		[319334] = {
			["npcID"] = 153583,
		},
		[354147] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[176066] = {
			["npcID"] = 88178,
		},
		[12160] = {
			["npcID"] = 81887,
		},
		[32637] = {
			["npcID"] = 167749,
		},
		[147398] = {
			["npcID"] = 73342,
		},
		[335720] = {
			["npcID"] = 155812,
		},
		[341864] = {
			["npcID"] = 174092,
		},
		[343912] = {
			["npcID"] = 169551,
		},
		[264050] = {
			["npcID"] = 131666,
		},
		[348008] = {
			["npcID"] = 176394,
		},
		[341865] = {
			["npcID"] = 174194,
		},
		[106984] = {
			["encounterName"] = "Gu Cloudstrike",
			["npcID"] = 56747,
			["encounterID"] = 1303,
		},
		[323437] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[341867] = {
			["npcID"] = 165469,
		},
		[200642] = {
			["npcID"] = 95771,
		},
		[323438] = {
			["npcID"] = 166073,
		},
		[162759] = {
			["npcID"] = 80494,
		},
		[343916] = {
			["npcID"] = 169102,
		},
		[241598] = {
			["npcID"] = 120374,
		},
		[64759] = {
			["encounterName"] = "Razorscale",
			["npcID"] = 33453,
			["encounterID"] = 1139,
		},
		[356204] = {
			["npcID"] = 177372,
		},
		[364396] = {
			["npcID"] = 184272,
		},
		[75245] = {
			["encounterName"] = "Drahga Shadowburner",
			["encounterID"] = 1048,
			["npcID"] = 40319,
		},
		[33787] = {
			["npcID"] = 17962,
		},
		[356206] = {
			["npcID"] = 177372,
		},
		[206788] = {
			["encounterName"] = "Trilliax",
			["encounterID"] = 1867,
			["npcID"] = 104288,
		},
		[352112] = {
			["npcID"] = 178372,
		},
		[169929] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84400,
			["encounterID"] = 1756,
		},
		[108010] = {
			["encounterName"] = "Warmaster Blackhorn",
			["encounterID"] = 1298,
			["npcID"] = 57260,
		},
		[162763] = {
			["npcID"] = 80492,
		},
		[321399] = {
			["npcID"] = 164879,
		},
		[16000] = {
			["npcID"] = 130273,
		},
		[317304] = {
			["npcID"] = 163084,
		},
		[79854] = {
			["npcID"] = 62295,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[302972] = {
			["npcID"] = 151623,
		},
		[178123] = {
			["npcID"] = 89019,
		},
		[325498] = {
			["npcID"] = 157212,
		},
		[337785] = {
			["npcID"] = 171160,
		},
		[348024] = {
			["npcID"] = 176520,
		},
		[368502] = {
			["npcID"] = 180924,
		},
		[321406] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 169498,
		},
		[102381] = {
			["encounterName"] = "Murozond",
			["npcID"] = 54432,
			["encounterID"] = 1271,
		},
		[239558] = {
			["npcID"] = 120405,
		},
		[79856] = {
			["npcID"] = 62295,
		},
		[327552] = {
			["npcID"] = 168573,
		},
		[176079] = {
			["npcID"] = 147061,
		},
		[156626] = {
			["encounterName"] = "The Iron Maidens",
			["encounterID"] = 1695,
			["npcID"] = 77557,
		},
		[51963] = {
			["npcID"] = 27829,
		},
		[79857] = {
			["npcID"] = 62295,
		},
		[296839] = {
			["npcID"] = 152898,
		},
		[360320] = {
			["npcID"] = 181942,
		},
		[214988] = {
			["npcID"] = 100364,
		},
		[222156] = {
			["npcID"] = 111554,
		},
		[214989] = {
			["npcID"] = 100364,
		},
		[11969] = {
			["npcID"] = 38896,
		},
		[79858] = {
			["npcID"] = 155283,
		},
		[339846] = {
			["npcID"] = 166052,
		},
		[180178] = {
			["npcID"] = 92038,
		},
		[329608] = {
			["npcID"] = 155828,
		},
		[341895] = {
			["npcID"] = 168647,
		},
		[75763] = {
			["encounterName"] = "Erudax",
			["encounterID"] = 1049,
			["npcID"] = 40600,
		},
		[329609] = {
			["npcID"] = 155828,
		},
		[319371] = {
			["npcID"] = 163512,
		},
		[272273] = {
			["npcID"] = 134625,
		},
		[149463] = {
			["npcID"] = 72895,
		},
		[147416] = {
			["npcID"] = 72875,
		},
		[200658] = {
			["npcID"] = 95771,
		},
		[298897] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[196563] = {
			["encounterName"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["npcID"] = 91784,
		},
		[364426] = {
			["npcID"] = 180088,
		},
		[175062] = {
			["npcID"] = 79629,
		},
		[79860] = {
			["npcID"] = 155283,
		},
		[250829] = {
			["npcID"] = 121250,
		},
		[341902] = {
			["npcID"] = 174197,
		},
		[352141] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176974,
		},
		[238543] = {
			["npcID"] = 119923,
		},
		[162777] = {
			["npcID"] = 80411,
		},
		[360334] = {
			["npcID"] = 183953,
		},
		[325523] = {
			["npcID"] = 165515,
		},
		[319380] = {
			["npcID"] = 160716,
		},
		[329619] = {
			["npcID"] = 159407,
		},
		[163802] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[83445] = {
			["encounterName"] = "General Husam",
			["encounterID"] = 1052,
			["npcID"] = 44577,
		},
		[368528] = {
			["npcID"] = 183764,
		},
		[76790] = {
			["npcID"] = 39616,
		},
		[319383] = {
			["npcID"] = 165706,
		},
		[255952] = {
			["encounterName"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["encounterID"] = 2093,
		},
		[350101] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176705,
		},
		[360340] = {
			["npcID"] = 182425,
		},
		[346006] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[354198] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[211927] = {
			["encounterName"] = "Chronomatic Anomaly",
			["npcID"] = 104415,
			["encounterID"] = 1865,
		},
		[270241] = {
			["npcID"] = 154129,
		},
		[213975] = {
			["npcID"] = 105884,
		},
		[79351] = {
			["encounterName"] = "High Priestess Azil",
			["npcID"] = 42333,
			["encounterID"] = 1057,
		},
		[170973] = {
			["npcID"] = 81553,
		},
		[256979] = {
			["encounterName"] = "Council o' Captains",
			["npcID"] = 126848,
			["encounterID"] = 2094,
		},
		[327581] = {
			["npcID"] = 168396,
		},
		[364442] = {
			["npcID"] = 180089,
		},
		[325535] = {
			["npcID"] = 164562,
		},
		[270246] = {
			["npcID"] = 157583,
		},
		[327584] = {
			["npcID"] = 168393,
		},
		[270248] = {
			["npcID"] = 154129,
		},
		[264105] = {
			["npcID"] = 131818,
		},
		[364445] = {
			["npcID"] = 180089,
		},
		[358302] = {
			["npcID"] = 179911,
		},
		[183263] = {
			["npcID"] = 155219,
		},
		[360351] = {
			["npcID"] = 179043,
		},
		[168929] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 83612,
		},
		[372638] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 189706,
		},
		[36609] = {
			["npcID"] = 20859,
		},
		[164834] = {
			["npcID"] = 81819,
		},
		[364449] = {
			["npcID"] = 179939,
		},
		[198623] = {
			["npcID"] = 108765,
		},
		[358307] = {
			["npcID"] = 179913,
		},
		[356260] = {
			["npcID"] = 179388,
		},
		[335783] = {
			["npcID"] = 155812,
		},
		[193505] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91000,
		},
		[348071] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[25602] = {
			["npcID"] = 81995,
		},
		[73212] = {
			["npcID"] = 54631,
		},
		[172005] = {
			["npcID"] = 86135,
		},
		[348074] = {
			["npcID"] = 178041,
		},
		[325549] = {
			["npcID"] = 172191,
		},
		[319406] = {
			["npcID"] = 159233,
		},
		[358314] = {
			["npcID"] = 180162,
		},
		[362410] = {
			["npcID"] = 181349,
		},
		[79868] = {
			["npcID"] = 80882,
		},
		[64767] = {
			["npcID"] = 32865,
		},
		[228320] = {
			["npcID"] = 114624,
		},
		[221153] = {
			["npcID"] = 111072,
		},
		[108537] = {
			["npcID"] = 56103,
		},
		[362413] = {
			["npcID"] = 179939,
		},
		[164841] = {
			["encounterName"] = "Teron'gor",
			["npcID"] = 77734,
			["encounterID"] = 1714,
		},
		[356271] = {
			["npcID"] = 180059,
		},
		[150507] = {
			["npcID"] = 74716,
		},
		[15234] = {
			["npcID"] = 17961,
		},
		[61184] = {
			["npcID"] = 58070,
		},
		[358323] = {
			["npcID"] = 180246,
		},
		[88061] = {
			["npcID"] = 45915,
		},
		[80382] = {
			["npcID"] = 42386,
		},
		[153581] = {
			["npcID"] = 76132,
		},
		[319417] = {
			["npcID"] = 165044,
		},
		[298940] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153755,
		},
		[224229] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112655,
		},
		[202728] = {
			["npcID"] = 99649,
		},
		[51202] = {
			["npcID"] = 26493,
		},
		[323515] = {
			["encounterName"] = "Gorechop",
			["encounterID"] = 2365,
			["npcID"] = 162317,
		},
		[358327] = {
			["npcID"] = 179760,
		},
		[44547] = {
			["npcID"] = 24697,
		},
		[358328] = {
			["npcID"] = 179760,
		},
		[36868] = {
			["npcID"] = 20883,
		},
		[83455] = {
			["encounterName"] = "Siamat",
			["encounterID"] = 1055,
			["npcID"] = 44704,
		},
		[266181] = {
			["encounterName"] = "Gorak Tul",
			["encounterID"] = 2117,
			["npcID"] = 131864,
		},
		[172014] = {
			["npcID"] = 86135,
		},
		[321471] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[298946] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153755,
		},
		[79872] = {
			["npcID"] = 177586,
		},
		[80384] = {
			["npcID"] = 42391,
		},
		[348094] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[288710] = {
			["npcID"] = 157683,
		},
		[339904] = {
			["npcID"] = 159153,
		},
		[337857] = {
			["npcID"] = 171160,
		},
		[339905] = {
			["npcID"] = 159153,
		},
		[30851] = {
			["npcID"] = 17395,
		},
		[216044] = {
			["npcID"] = 108678,
		},
		[344003] = {
			["npcID"] = 168580,
		},
		[354242] = {
			["npcID"] = 179434,
		},
		[317383] = {
			["npcID"] = 150237,
		},
		[196591] = {
			["npcID"] = 108185,
		},
		[331718] = {
			["npcID"] = 171772,
		},
		[199663] = {
			["npcID"] = 98370,
		},
		[65026] = {
			["encounterName"] = "Mimiron",
			["npcID"] = 34071,
			["encounterID"] = 1138,
		},
		[57091] = {
			["encounterName"] = "Keristrasza",
			["encounterID"] = 2011,
			["npcID"] = 26723,
		},
		[329672] = {
			["npcID"] = 170941,
		},
		[12675] = {
			["npcID"] = 17963,
		},
		[12739] = {
			["npcID"] = 17371,
		},
		[335817] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[356295] = {
			["npcID"] = 170257,
		},
		[358344] = {
			["npcID"] = 180015,
		},
		[164854] = {
			["npcID"] = 80858,
		},
		[354250] = {
			["npcID"] = 179434,
		},
		[228335] = {
			["encounterName"] = "Chronomatic Anomaly",
			["npcID"] = 114671,
			["encounterID"] = 1865,
		},
		[270293] = {
			["npcID"] = 134739,
		},
		[264150] = {
			["npcID"] = 131858,
		},
		[151545] = {
			["npcID"] = 75210,
		},
		[329679] = {
			["npcID"] = 158256,
		},
		[358348] = {
			["npcID"] = 179472,
		},
		[272343] = {
			["npcID"] = 136615,
		},
		[264153] = {
			["npcID"] = 134024,
		},
		[356302] = {
			["npcID"] = 178671,
		},
		[350159] = {
			["npcID"] = 177267,
		},
		[214003] = {
			["npcID"] = 102094,
		},
		[356303] = {
			["npcID"] = 180162,
		},
		[15043] = {
			["npcID"] = 10419,
		},
		[354256] = {
			["npcID"] = 177413,
		},
		[356304] = {
			["npcID"] = 170257,
		},
		[22661] = {
			["encounterName"] = "Alzzin the Wildshaper",
			["encounterID"] = 346,
			["npcID"] = 11492,
		},
		[358353] = {
			["npcID"] = 179760,
		},
		[151548] = {
			["npcID"] = 75272,
		},
		[337876] = {
			["npcID"] = 162874,
		},
		[356306] = {
			["npcID"] = 177165,
		},
		[63236] = {
			["encounterName"] = "Razorscale",
			["npcID"] = 33186,
			["encounterID"] = 1139,
		},
		[319447] = {
			["npcID"] = 157099,
		},
		[272349] = {
			["npcID"] = 136613,
		},
		[266206] = {
			["encounterName"] = "The Council of Tribes",
			["npcID"] = 135475,
			["encounterID"] = 2140,
		},
		[325591] = {
			["npcID"] = 166863,
		},
		[192504] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[323544] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 165905,
			["encounterID"] = 2395,
		},
		[156669] = {
			["encounterName"] = "The Iron Maidens",
			["encounterID"] = 1695,
			["npcID"] = 77557,
		},
		[339927] = {
			["npcID"] = 173553,
		},
		[175099] = {
			["npcID"] = 81553,
		},
		[125441] = {
			["npcID"] = 61377,
		},
		[274400] = {
			["npcID"] = 129559,
		},
		[352215] = {
			["npcID"] = 180246,
		},
		[173052] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 86547,
		},
		[247795] = {
			["encounterName"] = "L'ura",
			["encounterID"] = 2068,
			["npcID"] = 124729,
		},
		[341977] = {
			["npcID"] = 170690,
		},
		[176124] = {
			["npcID"] = 173114,
		},
		[333787] = {
			["npcID"] = 168934,
		},
		[354265] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[75272] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
			["encounterID"] = 1040,
		},
		[327646] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[142338] = {
			["npcID"] = 72451,
		},
		[226296] = {
			["npcID"] = 91000,
		},
		[323552] = {
			["encounterName"] = "High Adjudicator Aleez",
			["npcID"] = 165410,
			["encounterID"] = 2403,
		},
		[327648] = {
			["npcID"] = 168418,
		},
		[238583] = {
			["npcID"] = 118700,
		},
		[200700] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[119300] = {
			["encounterName"] = "Dark Shaman Koranthal",
			["encounterID"] = 1444,
			["npcID"] = 61412,
		},
		[348128] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[79881] = {
			["npcID"] = 38913,
		},
		[36617] = {
			["npcID"] = 20864,
		},
		[30853] = {
			["npcID"] = 17395,
		},
		[108038] = {
			["encounterName"] = "Warmaster Blackhorn",
			["encounterID"] = 1298,
			["npcID"] = 56681,
		},
		[178177] = {
			["npcID"] = 80676,
		},
		[69131] = {
			["npcID"] = 36516,
		},
		[350180] = {
			["npcID"] = 177286,
		},
		[327655] = {
			["npcID"] = 168420,
		},
		[329703] = {
			["npcID"] = 159106,
		},
		[319465] = {
			["npcID"] = 164184,
		},
		[151558] = {
			["npcID"] = 75272,
		},
		[266225] = {
			["encounterName"] = "Gorak Tul",
			["encounterID"] = 2117,
			["npcID"] = 131864,
		},
		[17287] = {
			["npcID"] = 19633,
		},
		[329706] = {
			["npcID"] = 167941,
		},
		[358375] = {
			["npcID"] = 179472,
		},
		[79883] = {
			["npcID"] = 84473,
		},
		[329707] = {
			["npcID"] = 158290,
		},
		[252923] = {
			["npcID"] = 122969,
		},
		[237565] = {
			["npcID"] = 118703,
		},
		[176133] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76829,
		},
		[305136] = {
			["npcID"] = 156212,
		},
		[268278] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["encounterID"] = 2116,
			["npcID"] = 131545,
		},
		[79884] = {
			["npcID"] = 82901,
		},
		[321520] = {
			["npcID"] = 166926,
		},
		[327664] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[337903] = {
			["npcID"] = 162874,
		},
		[76813] = {
			["npcID"] = 41096,
		},
		[313332] = {
			["npcID"] = 166046,
		},
		[201733] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[243712] = {
			["npcID"] = 121818,
		},
		[360432] = {
			["npcID"] = 185488,
		},
		[107018] = {
			["encounterName"] = "Madness of Deathwing",
			["encounterID"] = 1299,
			["npcID"] = 56173,
		},
		[15620] = {
			["npcID"] = 13597,
		},
		[243713] = {
			["npcID"] = 121818,
		},
		[212997] = {
			["encounterName"] = "Tichondrius",
			["encounterID"] = 1862,
			["npcID"] = 103685,
		},
		[166923] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["encounterID"] = 1749,
			["npcID"] = 81305,
		},
		[79886] = {
			["npcID"] = 82901,
		},
		[272382] = {
			["npcID"] = 155250,
		},
		[296956] = {
			["npcID"] = 152995,
		},
		[151566] = {
			["npcID"] = 74349,
		},
		[346103] = {
			["npcID"] = 168130,
		},
		[76815] = {
			["npcID"] = 41096,
		},
		[150543] = {
			["npcID"] = 74382,
		},
		[192522] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 95886,
			["encounterID"] = 1816,
		},
		[354297] = {
			["npcID"] = 180431,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["encounterID"] = 1869,
		},
		[272388] = {
			["npcID"] = 138489,
		},
		[131091] = {
			["npcID"] = 92950,
		},
		[329727] = {
			["npcID"] = 170079,
		},
		[339966] = {
			["npcID"] = 164861,
		},
		[358396] = {
			["npcID"] = 179460,
		},
		[337920] = {
			["npcID"] = 162874,
		},
		[348159] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 164967,
			["encounterID"] = 2384,
		},
		[59146] = {
			["encounterName"] = "Willey Hopebreaker",
			["encounterID"] = 475,
			["npcID"] = 10997,
		},
		[348160] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[88080] = {
			["npcID"] = 47238,
		},
		[333827] = {
			["npcID"] = 167533,
		},
		[270348] = {
			["npcID"] = 154131,
		},
		[331781] = {
			["npcID"] = 170164,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["encounterID"] = 1947,
		},
		[237578] = {
			["npcID"] = 119923,
		},
		[89105] = {
			["npcID"] = 45704,
		},
		[333831] = {
			["npcID"] = 171109,
		},
		[41229] = {
			["npcID"] = 23237,
		},
		[339975] = {
			["npcID"] = 173609,
		},
		[227341] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114251,
		},
		[59147] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 28580,
			["encounterID"] = 1987,
		},
		[111631] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[268306] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["encounterID"] = 2116,
			["npcID"] = 131545,
		},
		[159766] = {
			["npcID"] = 77790,
		},
		[272402] = {
			["npcID"] = 129599,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["encounterID"] = 1688,
			["npcID"] = 75829,
		},
		[329740] = {
			["npcID"] = 158290,
		},
		[143385] = {
			["encounterName"] = "Siegecrafter Blackfuse",
			["npcID"] = 71504,
			["encounterID"] = 1601,
		},
		[76820] = {
			["npcID"] = 41096,
		},
		[358410] = {
			["npcID"] = 178151,
		},
		[296978] = {
			["npcID"] = 153003,
		},
		[362507] = {
			["npcID"] = 182690,
		},
		[333839] = {
			["npcID"] = 167534,
		},
		[191509] = {
			["npcID"] = 102886,
		},
		[319506] = {
			["npcID"] = 164232,
		},
		[59148] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 28580,
			["encounterID"] = 1987,
		},
		[352271] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[266266] = {
			["encounterName"] = "Gorak Tul",
			["encounterID"] = 2117,
			["npcID"] = 131864,
		},
		[30600] = {
			["encounterName"] = "Warbringer O'mrogg",
			["encounterID"] = 1937,
			["npcID"] = 16809,
		},
		[36879] = {
			["npcID"] = 20977,
		},
		[61964] = {
			["npcID"] = 32886,
		},
		[333845] = {
			["npcID"] = 167534,
		},
		[151581] = {
			["npcID"] = 75426,
		},
		[323608] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[342038] = {
			["npcID"] = 159157,
		},
		[329753] = {
			["npcID"] = 156134,
		},
		[17162] = {
			["npcID"] = 10419,
		},
		[284703] = {
			["npcID"] = 150746,
		},
		[368661] = {
			["npcID"] = 179386,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 1985,
		},
		[321564] = {
			["npcID"] = 165829,
		},
		[360472] = {
			["npcID"] = 185488,
		},
		[321565] = {
			["npcID"] = 165829,
		},
		[61965] = {
			["npcID"] = 32886,
		},
		[301088] = {
			["npcID"] = 151657,
		},
		[167966] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83893,
			["encounterID"] = 1757,
		},
		[251924] = {
			["npcID"] = 120354,
		},
		[9734] = {
			["npcID"] = 82009,
		},
		[156704] = {
			["encounterName"] = "Kromog, Legend of the Mountain",
			["encounterID"] = 1713,
			["npcID"] = 77692,
		},
		[79896] = {
			["npcID"] = 83001,
		},
		[259092] = {
			["npcID"] = 126919,
		},
		[221209] = {
			["npcID"] = 111112,
		},
		[189469] = {
			["npcID"] = 100364,
		},
		[200732] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[292903] = {
			["npcID"] = 166714,
		},
		[208924] = {
			["encounterName"] = "Trilliax",
			["encounterID"] = 1867,
			["npcID"] = 104288,
		},
		[193566] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["npcID"] = 96756,
			["encounterID"] = 1822,
		},
		[356384] = {
			["npcID"] = 178907,
		},
		[147492] = {
			["npcID"] = 85461,
		},
		[331812] = {
			["npcID"] = 164388,
		},
		[329765] = {
			["npcID"] = 169473,
		},
		[356386] = {
			["npcID"] = 178907,
		},
		[333861] = {
			["npcID"] = 167533,
		},
		[188448] = {
			["npcID"] = 94995,
		},
		[63758] = {
			["npcID"] = 33819,
		},
		[266286] = {
			["npcID"] = 134896,
		},
		[159780] = {
			["npcID"] = 76189,
		},
		[352293] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[288813] = {
			["npcID"] = 157748,
		},
		[274480] = {
			["npcID"] = 139842,
		},
		[292910] = {
			["npcID"] = 167937,
		},
		[329770] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[147496] = {
			["npcID"] = 72908,
		},
		[340011] = {
			["npcID"] = 173613,
		},
		[176165] = {
			["npcID"] = 88224,
		},
		[101401] = {
			["encounterName"] = "Echo of Sylvanas",
			["npcID"] = 54123,
			["encounterID"] = 1882,
		},
		[329774] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[191524] = {
			["npcID"] = 96657,
		},
		[346157] = {
			["npcID"] = 180252,
		},
		[261148] = {
			["npcID"] = 150997,
		},
		[237599] = {
			["npcID"] = 118724,
		},
		[174119] = {
			["npcID"] = 85128,
		},
		[340016] = {
			["npcID"] = 171184,
		},
		[358446] = {
			["npcID"] = 179460,
		},
		[340018] = {
			["npcID"] = 172523,
		},
		[333875] = {
			["npcID"] = 168942,
		},
		[147500] = {
			["npcID"] = 72809,
		},
		[340019] = {
			["npcID"] = 173604,
		},
		[191527] = {
			["npcID"] = 96657,
		},
		[297017] = {
			["npcID"] = 152995,
		},
		[54801] = {
			["encounterName"] = "Drakkari Colossus",
			["encounterID"] = 1983,
			["npcID"] = 29573,
		},
		[118297] = {
			["npcID"] = 61029,
		},
		[253984] = {
			["npcID"] = 126860,
		},
		[205862] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[16006] = {
			["npcID"] = 78996,
		},
		[176170] = {
			["npcID"] = 84875,
		},
		[329783] = {
			["npcID"] = 156226,
		},
		[356404] = {
			["npcID"] = 180091,
		},
		[297020] = {
			["npcID"] = 153011,
		},
		[174123] = {
			["npcID"] = 85128,
		},
		[170028] = {
			["encounterName"] = "Yalnu",
			["encounterID"] = 1756,
			["npcID"] = 84358,
		},
		[292926] = {
			["npcID"] = 151127,
		},
		[319547] = {
			["npcID"] = 165706,
		},
		[156718] = {
			["npcID"] = 76104,
		},
		[356407] = {
			["npcID"] = 180091,
		},
		[358455] = {
			["npcID"] = 177972,
		},
		[79903] = {
			["npcID"] = 81996,
		},
		[356408] = {
			["npcID"] = 180091,
		},
		[81439] = {
			["npcID"] = 43391,
		},
		[315454] = {
			["npcID"] = 166873,
		},
		[325694] = {
			["npcID"] = 160359,
		},
		[64529] = {
			["encounterName"] = "Mimiron",
			["encounterID"] = 1138,
			["npcID"] = 34071,
		},
		[337982] = {
			["npcID"] = 162872,
		},
		[325696] = {
			["npcID"] = 176337,
		},
		[225321] = {
			["npcID"] = 126456,
		},
		[356414] = {
			["npcID"] = 179892,
		},
		[29579] = {
			["npcID"] = 114625,
		},
		[156722] = {
			["npcID"] = 77700,
		},
		[325700] = {
			["npcID"] = 165529,
		},
		[106526] = {
			["encounterName"] = "Wise Mari",
			["npcID"] = 56448,
			["encounterID"] = 1418,
		},
		[325701] = {
			["npcID"] = 165529,
		},
		[226347] = {
			["npcID"] = 102404,
		},
		[331845] = {
			["npcID"] = 165687,
		},
		[272461] = {
			["npcID"] = 122684,
		},
		[331846] = {
			["npcID"] = 167964,
		},
		[183345] = {
			["npcID"] = 110616,
		},
		[319560] = {
			["npcID"] = 158054,
		},
		[12167] = {
			["npcID"] = 46252,
		},
		[81442] = {
			["npcID"] = 43391,
		},
		[245802] = {
			["encounterName"] = "Saprish",
			["encounterID"] = 2066,
			["npcID"] = 122319,
		},
		[193585] = {
			["npcID"] = 102232,
		},
		[292942] = {
			["npcID"] = 166714,
		},
		[284752] = {
			["npcID"] = 150746,
		},
		[208944] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 106643,
		},
		[194610] = {
			["npcID"] = 97365,
		},
		[346186] = {
			["npcID"] = 167323,
		},
		[364616] = {
			["npcID"] = 183596,
		},
		[368712] = {
			["npcID"] = 184058,
		},
		[337996] = {
			["npcID"] = 170048,
		},
		[194611] = {
			["npcID"] = 98926,
		},
		[350283] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[156728] = {
			["encounterName"] = "Blackhand",
			["encounterID"] = 1704,
			["npcID"] = 77665,
		},
		[329808] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[75813] = {
			["npcID"] = 40634,
		},
		[209971] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 106643,
		},
		[356430] = {
			["npcID"] = 178958,
		},
		[29580] = {
			["npcID"] = 114625,
		},
		[173112] = {
			["npcID"] = 83762,
		},
		[356431] = {
			["npcID"] = 180113,
		},
		[166969] = {
			["npcID"] = 79315,
		},
		[338002] = {
			["npcID"] = 170079,
		},
		[147516] = {
			["npcID"] = 72809,
		},
		[338003] = {
			["npcID"] = 165414,
		},
		[15495] = {
			["npcID"] = 12047,
		},
		[342099] = {
			["npcID"] = 167726,
		},
		[295001] = {
			["npcID"] = 151128,
		},
		[101411] = {
			["encounterName"] = "Echo of Sylvanas",
			["npcID"] = 54123,
			["encounterID"] = 1882,
		},
		[338005] = {
			["npcID"] = 165415,
		},
		[194616] = {
			["npcID"] = 94984,
		},
		[364628] = {
			["npcID"] = 183596,
		},
		[176187] = {
			["npcID"] = 84876,
		},
		[338008] = {
			["npcID"] = 163213,
		},
		[244787] = {
			["npcID"] = 149654,
		},
		[229429] = {
			["npcID"] = 115388,
		},
		[173116] = {
			["npcID"] = 80700,
		},
		[340057] = {
			["npcID"] = 174336,
		},
		[352345] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 176178,
			["encounterID"] = 2419,
		},
		[338011] = {
			["npcID"] = 166318,
		},
		[325725] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[356442] = {
			["npcID"] = 180092,
		},
		[9672] = {
			["npcID"] = 10390,
		},
		[352347] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[346204] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[198715] = {
			["npcID"] = 100876,
		},
		[352348] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[346205] = {
			["npcID"] = 173717,
		},
		[65301] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33134,
			["encounterID"] = 1143,
		},
		[107045] = {
			["encounterName"] = "Liu Flameheart",
			["npcID"] = 56762,
			["encounterID"] = 1416,
		},
		[250934] = {
			["npcID"] = 124448,
		},
		[323682] = {
			["npcID"] = 163501,
		},
		[110117] = {
			["npcID"] = 65414,
		},
		[346208] = {
			["npcID"] = 167323,
		},
		[323683] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[166977] = {
			["npcID"] = 78694,
		},
		[79913] = {
			["npcID"] = 84660,
		},
		[358496] = {
			["npcID"] = 179805,
		},
		[166978] = {
			["npcID"] = 79537,
		},
		[270444] = {
			["npcID"] = 157145,
		},
		[125988] = {
			["encounterName"] = "Galakras",
			["npcID"] = 58771,
		},
		[352355] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[340070] = {
			["npcID"] = 166503,
		},
		[354405] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[323689] = {
			["npcID"] = 171381,
		},
		[200768] = {
			["npcID"] = 95766,
		},
		[169028] = {
			["npcID"] = 72647,
		},
		[333929] = {
			["npcID"] = 164847,
		},
		[329834] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169267,
			["encounterID"] = 2405,
		},
		[340073] = {
			["npcID"] = 168697,
		},
		[364647] = {
			["npcID"] = 181057,
		},
		[333931] = {
			["npcID"] = 164847,
		},
		[333932] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169813,
		},
		[356458] = {
			["npcID"] = 180095,
		},
		[270453] = {
			["npcID"] = 151091,
		},
		[329838] = {
			["npcID"] = 159027,
		},
		[198723] = {
			["npcID"] = 99358,
		},
		[342125] = {
			["npcID"] = 167538,
		},
		[64535] = {
			["encounterName"] = "Mimiron",
			["npcID"] = 33670,
			["encounterID"] = 1138,
		},
		[197700] = {
			["npcID"] = 100450,
		},
		[224321] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112664,
		},
		[59160] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 28582,
			["encounterID"] = 1987,
		},
		[188486] = {
			["npcID"] = 149783,
		},
		[249919] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[321652] = {
			["npcID"] = 168266,
		},
		[202821] = {
			["npcID"] = 110617,
		},
		[22415] = {
			["npcID"] = 11464,
		},
		[30990] = {
			["encounterName"] = "Blood Guard Porung",
			["encounterID"] = 1935,
			["npcID"] = 17427,
		},
		[317559] = {
			["npcID"] = 153964,
		},
		[360562] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[255041] = {
			["npcID"] = 128434,
		},
		[342135] = {
			["npcID"] = 167532,
		},
		[75823] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
			["encounterID"] = 1038,
		},
		[146511] = {
			["npcID"] = 72929,
		},
		[358519] = {
			["npcID"] = 179853,
		},
		[249923] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[250947] = {
			["npcID"] = 124430,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[206921] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[342139] = {
			["npcID"] = 167536,
		},
		[360569] = {
			["npcID"] = 182374,
		},
		[193611] = {
			["encounterName"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["npcID"] = 91789,
		},
		[352379] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[364666] = {
			["npcID"] = 178563,
		},
		[342141] = {
			["npcID"] = 170833,
		},
		[173135] = {
			["npcID"] = 83578,
		},
		[256069] = {
			["npcID"] = 127526,
		},
		[358525] = {
			["npcID"] = 178949,
		},
		[358526] = {
			["npcID"] = 179342,
		},
		[172112] = {
			["npcID"] = 78390,
		},
		[338049] = {
			["npcID"] = 163213,
		},
		[331906] = {
			["npcID"] = 157847,
		},
		[176208] = {
			["npcID"] = 78935,
		},
		[243784] = {
			["npcID"] = 121820,
		},
		[321669] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 165108,
		},
		[358529] = {
			["npcID"] = 179853,
		},
		[360577] = {
			["npcID"] = 182374,
		},
		[346243] = {
			["npcID"] = 168233,
		},
		[331909] = {
			["npcID"] = 165473,
		},
		[350339] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177407,
			["encounterID"] = 2429,
		},
		[329862] = {
			["npcID"] = 153885,
		},
		[79922] = {
			["npcID"] = 42808,
		},
		[144470] = {
			["npcID"] = 71952,
		},
		[323720] = {
			["npcID"] = 181203,
		},
		[350342] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[352390] = {
			["npcID"] = 179334,
		},
		[125997] = {
			["npcID"] = 63764,
		},
		[69172] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 36658,
			["encounterID"] = 2000,
		},
		[270481] = {
			["npcID"] = 135002,
		},
		[319628] = {
			["npcID"] = 160129,
		},
		[81459] = {
			["npcID"] = 43537,
		},
		[13321] = {
			["npcID"] = 17401,
		},
		[346251] = {
			["npcID"] = 168233,
		},
		[243789] = {
			["npcID"] = 121820,
		},
		[6917] = {
			["npcID"] = 48248,
		},
		[176214] = {
			["npcID"] = 84483,
		},
		[331919] = {
			["npcID"] = 168402,
		},
		[270487] = {
			["npcID"] = 135167,
		},
		[268440] = {
			["npcID"] = 126918,
		},
		[360589] = {
			["npcID"] = 182114,
		},
		[346255] = {
			["npcID"] = 173637,
		},
		[360590] = {
			["npcID"] = 182114,
		},
		[29840] = {
			["npcID"] = 16504,
		},
		[150619] = {
			["npcID"] = 74729,
		},
		[192598] = {
			["npcID"] = 120147,
		},
		[36127] = {
			["encounterName"] = "Zereketh the Unbound",
			["npcID"] = 20870,
			["encounterID"] = 1916,
		},
		[15241] = {
			["npcID"] = 10419,
		},
		[15305] = {
			["npcID"] = 78553,
		},
		[204885] = {
			["npcID"] = 114407,
		},
		[15497] = {
			["npcID"] = 17963,
		},
		[270492] = {
			["npcID"] = 135204,
		},
		[325782] = {
			["npcID"] = 169823,
		},
		[270493] = {
			["npcID"] = 135204,
		},
		[323735] = {
			["npcID"] = 179853,
		},
		[176218] = {
			["npcID"] = 81749,
		},
		[331927] = {
			["npcID"] = 167962,
		},
		[358548] = {
			["npcID"] = 180664,
		},
		[106547] = {
			["npcID"] = 56395,
		},
		[299164] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153756,
		},
		[176219] = {
			["npcID"] = 82295,
		},
		[342168] = {
			["npcID"] = 156331,
		},
		[173148] = {
			["npcID"] = 81279,
		},
		[78903] = {
			["encounterName"] = "Ozruk",
			["npcID"] = 42188,
			["encounterID"] = 1058,
		},
		[319644] = {
			["npcID"] = 160129,
		},
		[348313] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[238677] = {
			["npcID"] = 126457,
		},
		[37664] = {
			["npcID"] = 17961,
		},
		[325790] = {
			["npcID"] = 172909,
		},
		[119347] = {
			["npcID"] = 61434,
		},
		[111668] = {
			["encounterName"] = "Commander Ri'mok",
			["npcID"] = 56877,
			["encounterID"] = 1406,
		},
		[331935] = {
			["npcID"] = 170385,
		},
		[350365] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[338079] = {
			["npcID"] = 164737,
		},
		[206939] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[319650] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[213083] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 107237,
		},
		[157794] = {
			["npcID"] = 76263,
		},
		[284840] = {
			["npcID"] = 150746,
		},
		[270506] = {
			["npcID"] = 135235,
		},
		[323748] = {
			["npcID"] = 171381,
		},
		[317605] = {
			["npcID"] = 162744,
		},
		[270507] = {
			["npcID"] = 135235,
		},
		[297128] = {
			["npcID"] = 144298,
		},
		[124980] = {
			["npcID"] = 62530,
		},
		[154724] = {
			["npcID"] = 84110,
		},
		[336037] = {
			["npcID"] = 181186,
		},
		[111670] = {
			["npcID"] = 58590,
		},
		[183393] = {
			["npcID"] = 90544,
		},
		[79930] = {
			["npcID"] = 83997,
		},
		[340134] = {
			["npcID"] = 171009,
		},
		[344230] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[164964] = {
			["npcID"] = 75094,
		},
		[157797] = {
			["npcID"] = 77080,
		},
		[167012] = {
			["npcID"] = 79148,
		},
		[193633] = {
			["npcID"] = 98275,
		},
		[194657] = {
			["npcID"] = 99188,
		},
		[325802] = {
			["npcID"] = 166936,
		},
		[164965] = {
			["npcID"] = 81820,
		},
		[78907] = {
			["npcID"] = 100977,
		},
		[270514] = {
			["npcID"] = 135231,
		},
		[146536] = {
			["npcID"] = 72954,
		},
		[13322] = {
			["npcID"] = 474,
		},
		[189539] = {
			["npcID"] = 95638,
		},
		[159847] = {
			["npcID"] = 76556,
		},
		[63775] = {
			["npcID"] = 33820,
		},
		[342189] = {
			["npcID"] = 174175,
		},
		[79932] = {
			["npcID"] = 155282,
		},
		[272566] = {
			["npcID"] = 131731,
		},
		[147562] = {
			["npcID"] = 72877,
		},
		[346286] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[223329] = {
			["npcID"] = 108148,
		},
		[358573] = {
			["npcID"] = 177910,
		},
		[168040] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83893,
			["encounterID"] = 1757,
		},
		[329905] = {
			["npcID"] = 157118,
		},
		[162921] = {
			["npcID"] = 77430,
		},
		[180327] = {
			["npcID"] = 117172,
		},
		[238688] = {
			["npcID"] = 119977,
		},
		[334002] = {
			["npcID"] = 173943,
		},
		[168041] = {
			["encounterName"] = "Ancient Protectors",
			["encounterID"] = 1757,
			["npcID"] = 83893,
		},
		[340146] = {
			["npcID"] = 171009,
		},
		[350385] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[319669] = {
			["encounterName"] = "Kul'tharok",
			["npcID"] = 162309,
			["encounterID"] = 2364,
		},
		[329908] = {
			["npcID"] = 157017,
		},
		[15498] = {
			["npcID"] = 13097,
		},
		[329909] = {
			["npcID"] = 157017,
		},
		[197735] = {
			["npcID"] = 127584,
		},
		[210022] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 106643,
		},
		[264384] = {
			["npcID"] = 131819,
		},
		[293053] = {
			["npcID"] = 149791,
		},
		[192617] = {
			["encounterName"] = "Wrath of Azshara",
			["encounterID"] = 1814,
			["npcID"] = 96028,
		},
		[340152] = {
			["npcID"] = 158025,
		},
		[334009] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[164973] = {
			["npcID"] = 81985,
		},
		[293055] = {
			["npcID"] = 149788,
		},
		[226406] = {
			["npcID"] = 113537,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["npcID"] = 28546,
			["encounterID"] = 1984,
		},
		[204905] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99676,
			["encounterID"] = 1850,
		},
		[329916] = {
			["npcID"] = 171173,
		},
		[356537] = {
			["npcID"] = 179334,
		},
		[358585] = {
			["npcID"] = 176669,
		},
		[354490] = {
			["npcID"] = 179526,
		},
		[186476] = {
			["npcID"] = 111332,
		},
		[9739] = {
			["npcID"] = 82012,
		},
		[264390] = {
			["npcID"] = 131685,
		},
		[230504] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 115905,
		},
		[348350] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[207979] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104273,
			["encounterID"] = 1869,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 95886,
			["encounterID"] = 1816,
		},
		[340160] = {
			["npcID"] = 173655,
		},
		[334017] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 170199,
		},
		[262346] = {
			["npcID"] = 149368,
		},
		[293063] = {
			["npcID"] = 151331,
		},
		[336066] = {
			["npcID"] = 169551,
		},
		[201837] = {
			["npcID"] = 99366,
		},
		[319685] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[264396] = {
			["npcID"] = 131685,
		},
		[75330] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 37728,
			["encounterID"] = 2000,
		},
		[336068] = {
			["npcID"] = 182686,
		},
		[321734] = {
			["npcID"] = 156564,
		},
		[189552] = {
			["npcID"] = 95636,
		},
		[340165] = {
			["npcID"] = 161527,
		},
		[79938] = {
			["npcID"] = 81998,
		},
		[201839] = {
			["npcID"] = 99366,
		},
		[356548] = {
			["npcID"] = 178392,
		},
		[334023] = {
			["npcID"] = 167536,
		},
		[360644] = {
			["npcID"] = 184660,
		},
		[231532] = {
			["npcID"] = 114845,
		},
		[270544] = {
			["npcID"] = 144725,
		},
		[329929] = {
			["npcID"] = 157083,
		},
		[323786] = {
			["npcID"] = 163524,
		},
		[358598] = {
			["npcID"] = 178897,
		},
		[327882] = {
			["npcID"] = 168153,
		},
		[329930] = {
			["npcID"] = 157083,
		},
		[256106] = {
			["encounterName"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["encounterID"] = 2093,
		},
		[87618] = {
			["encounterName"] = "Asaad",
			["encounterID"] = 1042,
			["npcID"] = 43875,
		},
		[79939] = {
			["npcID"] = 84645,
		},
		[36646] = {
			["npcID"] = 21346,
		},
		[13323] = {
			["npcID"] = 10422,
		},
		[175221] = {
			["npcID"] = 93961,
		},
		[327885] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[194675] = {
			["npcID"] = 98963,
		},
		[350411] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 175728,
		},
		[358603] = {
			["npcID"] = 178937,
		},
		[241774] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 114636,
		},
		[156793] = {
			["encounterName"] = "Ranjit",
			["npcID"] = 75964,
			["encounterID"] = 1698,
		},
		[323793] = {
			["npcID"] = 170146,
		},
		[366797] = {
			["npcID"] = 183749,
		},
		[327891] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 169506,
			["encounterID"] = 2396,
		},
		[346321] = {
			["npcID"] = 166376,
		},
		[325844] = {
			["npcID"] = 163991,
		},
		[266460] = {
			["encounterName"] = "Gorak Tul",
			["encounterID"] = 2117,
			["npcID"] = 135552,
		},
		[192631] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 95886,
			["encounterID"] = 1816,
		},
		[55077] = {
			["npcID"] = 29735,
		},
		[39207] = {
			["npcID"] = 46953,
		},
		[358611] = {
			["npcID"] = 179760,
		},
		[329943] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168156,
		},
		[178298] = {
			["npcID"] = 83763,
		},
		[350421] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[106563] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["npcID"] = 59479,
			["encounterID"] = 1414,
		},
		[350422] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 175727,
		},
		[17174] = {
			["npcID"] = 88691,
		},
		[325850] = {
			["npcID"] = 166942,
		},
		[173180] = {
			["npcID"] = 85694,
		},
		[87622] = {
			["encounterName"] = "Asaad",
			["encounterID"] = 1042,
			["npcID"] = 43875,
		},
		[258162] = {
			["npcID"] = 128286,
		},
		[323804] = {
			["npcID"] = 163524,
		},
		[293088] = {
			["npcID"] = 149789,
		},
		[246900] = {
			["npcID"] = 122478,
		},
		[107588] = {
			["encounterName"] = "Warmaster Blackhorn",
			["encounterID"] = 1298,
			["npcID"] = 56781,
		},
		[227447] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114284,
		},
		[171134] = {
			["npcID"] = 85718,
		},
		[55334] = {
			["npcID"] = 16163,
		},
		[340189] = {
			["npcID"] = 173655,
		},
		[325855] = {
			["npcID"] = 163991,
		},
		[305378] = {
			["npcID"] = 177862,
		},
		[319713] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[42024] = {
			["encounterName"] = "Shade of Akama",
			["npcID"] = 23523,
			["encounterID"] = 603,
		},
		[323810] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 166085,
			["encounterID"] = 2363,
		},
		[59430] = {
			["encounterName"] = "Anub'arak",
			["encounterID"] = 1973,
			["npcID"] = 29120,
		},
		[332002] = {
			["npcID"] = 170417,
		},
		[358623] = {
			["npcID"] = 179552,
		},
		[241784] = {
			["npcID"] = 114629,
		},
		[321764] = {
			["npcID"] = 164861,
		},
		[358624] = {
			["npcID"] = 178997,
		},
		[30741] = {
			["npcID"] = 16807,
		},
		[338147] = {
			["npcID"] = 169885,
		},
		[83017] = {
			["npcID"] = 52903,
		},
		[150660] = {
			["npcID"] = 74747,
		},
		[364769] = {
			["npcID"] = 181360,
		},
		[334053] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[346340] = {
			["npcID"] = 175819,
		},
		[150661] = {
			["npcID"] = 76496,
		},
		[225404] = {
			["npcID"] = 112804,
		},
		[106055] = {
			["encounterName"] = "Wise Mari",
			["npcID"] = 56448,
			["encounterID"] = 1418,
		},
		[188545] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90409,
			["encounterID"] = 1778,
		},
		[12492] = {
			["npcID"] = 11600,
		},
		[42281] = {
			["npcID"] = 23694,
		},
		[325866] = {
			["npcID"] = 165979,
		},
		[163973] = {
			["npcID"] = 85429,
		},
		[158854] = {
			["npcID"] = 85771,
		},
		[241788] = {
			["npcID"] = 114632,
		},
		[293104] = {
			["npcID"] = 149796,
		},
		[346346] = {
			["npcID"] = 164713,
		},
		[323821] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 162099,
			["encounterID"] = 2363,
		},
		[225407] = {
			["npcID"] = 113128,
		},
		[201858] = {
			["npcID"] = 100539,
		},
		[162951] = {
			["npcID"] = 81561,
		},
		[319727] = {
			["npcID"] = 159612,
		},
		[346348] = {
			["npcID"] = 175821,
		},
		[346349] = {
			["npcID"] = 175821,
		},
		[340207] = {
			["npcID"] = 161528,
		},
		[209027] = {
			["npcID"] = 104246,
		},
		[340208] = {
			["npcID"] = 173655,
		},
		[358638] = {
			["npcID"] = 178997,
		},
		[225410] = {
			["npcID"] = 113128,
		},
		[30358] = {
			["npcID"] = 16460,
		},
		[145548] = {
			["npcID"] = 72562,
		},
		[325876] = {
			["npcID"] = 165414,
		},
		[319733] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[224387] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112718,
		},
		[63272] = {
			["encounterName"] = "Freya",
			["npcID"] = 33525,
			["encounterID"] = 1133,
		},
		[216197] = {
			["npcID"] = 99033,
		},
		[329975] = {
			["npcID"] = 157102,
		},
		[145550] = {
			["npcID"] = 72150,
		},
		[350453] = {
			["npcID"] = 179894,
		},
		[33324] = {
			["npcID"] = 18500,
		},
		[176267] = {
			["npcID"] = 88224,
		},
		[170124] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[59433] = {
			["encounterName"] = "Anub'arak",
			["encounterID"] = 1973,
			["npcID"] = 29120,
		},
		[329978] = {
			["npcID"] = 156142,
		},
		[224390] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112718,
		},
		[176268] = {
			["npcID"] = 88224,
		},
		[146576] = {
			["npcID"] = 72794,
		},
		[334076] = {
			["npcID"] = 168942,
		},
		[209033] = {
			["npcID"] = 104246,
		},
		[356602] = {
			["npcID"] = 180164,
		},
		[163983] = {
			["npcID"] = 81537,
		},
		[64041] = {
			["npcID"] = 33071,
		},
		[241798] = {
			["npcID"] = 114783,
		},
		[195724] = {
			["npcID"] = 96146,
		},
		[299268] = {
			["npcID"] = 144566,
		},
		[241799] = {
			["npcID"] = 114783,
		},
		[76369] = {
			["npcID"] = 39855,
		},
		[340224] = {
			["npcID"] = 161529,
		},
		[155794] = {
			["encounterName"] = "The Iron Maidens",
			["encounterID"] = 1695,
			["npcID"] = 77231,
		},
		[128075] = {
			["npcID"] = 81406,
		},
		[168082] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83892,
			["encounterID"] = 1757,
		},
		[329989] = {
			["npcID"] = 158978,
		},
		[350467] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[329990] = {
			["npcID"] = 158978,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[171155] = {
			["npcID"] = 85733,
		},
		[334089] = {
			["npcID"] = 155779,
		},
		[256138] = {
			["npcID"] = 127799,
		},
		[342281] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[352520] = {
			["npcID"] = 178601,
		},
		[193682] = {
			["encounterName"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["npcID"] = 91789,
		},
		[36398] = {
			["npcID"] = 72783,
		},
		[276754] = {
			["npcID"] = 156245,
		},
		[364808] = {
			["npcID"] = 181145,
		},
		[350475] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[270613] = {
			["npcID"] = 179079,
		},
		[321807] = {
			["npcID"] = 163619,
		},
		[348428] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176605,
		},
		[95826] = {
			["npcID"] = 68,
		},
		[354572] = {
			["npcID"] = 176561,
		},
		[364811] = {
			["npcID"] = 185037,
		},
		[171159] = {
			["npcID"] = 85725,
		},
		[204947] = {
			["npcID"] = 102336,
		},
		[368909] = {
			["npcID"] = 185861,
		},
		[217235] = {
			["npcID"] = 108829,
		},
		[313621] = {
			["npcID"] = 177637,
		},
		[15245] = {
			["encounterName"] = "Commander Malor",
			["encounterID"] = 476,
			["npcID"] = 11032,
		},
		[350482] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[241809] = {
			["npcID"] = 114792,
		},
		[190616] = {
			["npcID"] = 126111,
		},
		[145566] = {
			["encounterName"] = "General Nazgrim",
			["npcID"] = 71770,
			["encounterID"] = 1603,
		},
		[154781] = {
			["npcID"] = 76659,
		},
		[204951] = {
			["npcID"] = 102336,
		},
		[156829] = {
			["npcID"] = 78437,
		},
		[168092] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83892,
			["encounterID"] = 1757,
		},
		[227477] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114284,
		},
		[129617] = {
			["npcID"] = 65745,
		},
		[334107] = {
			["npcID"] = 174108,
		},
		[157855] = {
			["npcID"] = 80787,
		},
		[183452] = {
			["npcID"] = 93931,
		},
		[352538] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[354586] = {
			["npcID"] = 179526,
		},
		[145569] = {
			["npcID"] = 72194,
		},
		[154784] = {
			["npcID"] = 84110,
		},
		[319775] = {
			["npcID"] = 166872,
		},
		[63789] = {
			["npcID"] = 33820,
		},
		[79960] = {
			["npcID"] = 86202,
		},
		[170144] = {
			["npcID"] = 80493,
		},
		[59182] = {
			["npcID"] = 28584,
		},
		[297254] = {
			["encounterName"] = "King Gobbamak",
			["encounterID"] = 2290,
			["npcID"] = 150159,
		},
		[284968] = {
			["npcID"] = 150746,
		},
		[321828] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[301351] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[172193] = {
			["npcID"] = 172589,
		},
		[22938] = {
			["npcID"] = 85749,
		},
		[360737] = {
			["npcID"] = 181116,
		},
		[76378] = {
			["npcID"] = 39854,
		},
		[153764] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["npcID"] = 75927,
			["encounterID"] = 1678,
		},
		[188576] = {
			["npcID"] = 95056,
		},
		[368930] = {
			["npcID"] = 185838,
		},
		[342310] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[3108] = {
			["npcID"] = 43761,
		},
		[321834] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[59183] = {
			["npcID"] = 28584,
		},
		[358695] = {
			["npcID"] = 180426,
		},
		[80475] = {
			["npcID"] = 117,
		},
		[202913] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[325932] = {
			["npcID"] = 160476,
		},
		[3396] = {
			["npcID"] = 2350,
		},
		[110168] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 54336,
		},
		[14030] = {
			["npcID"] = 14423,
		},
		[79964] = {
			["npcID"] = 86202,
		},
		[358700] = {
			["npcID"] = 180417,
		},
		[204963] = {
			["npcID"] = 102282,
		},
		[198820] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 98970,
		},
		[342320] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[86620] = {
			["encounterName"] = "Hogger",
			["encounterID"] = 1144,
			["npcID"] = 46254,
		},
		[168105] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83892,
			["encounterID"] = 1757,
		},
		[169129] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 84464,
		},
		[162986] = {
			["npcID"] = 83448,
		},
		[36915] = {
			["npcID"] = 20908,
		},
		[115289] = {
			["encounterName"] = "Thalnos the Soulrender",
			["encounterID"] = 1423,
			["npcID"] = 59789,
		},
		[332084] = {
			["npcID"] = 167965,
		},
		[330037] = {
			["npcID"] = 168361,
		},
		[204966] = {
			["npcID"] = 102282,
		},
		[214181] = {
			["npcID"] = 112251,
		},
		[183465] = {
			["npcID"] = 91001,
		},
		[259232] = {
			["npcID"] = 125393,
		},
		[350517] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[340279] = {
			["npcID"] = 173714,
		},
		[33844] = {
			["npcID"] = 82013,
		},
		[34100] = {
			["npcID"] = 17670,
		},
		[227493] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114262,
			["encounterID"] = 1960,
		},
		[35124] = {
			["npcID"] = 18420,
		},
		[327995] = {
			["npcID"] = 168574,
		},
		[188587] = {
			["npcID"] = 102253,
		},
		[222375] = {
			["npcID"] = 111479,
		},
		[274755] = {
			["npcID"] = 179440,
		},
		[160943] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 77483,
			["encounterID"] = 1732,
		},
		[356666] = {
			["npcID"] = 179892,
		},
		[189612] = {
			["npcID"] = 92038,
		},
		[150705] = {
			["npcID"] = 85978,
		},
		[105565] = {
			["encounterName"] = "Madness of Deathwing",
			["encounterID"] = 1299,
			["npcID"] = 56099,
		},
		[162992] = {
			["npcID"] = 79926,
		},
		[229544] = {
			["npcID"] = 115401,
		},
		[313666] = {
			["npcID"] = 160922,
		},
		[346431] = {
			["npcID"] = 173637,
		},
		[328002] = {
			["npcID"] = 168574,
		},
		[340289] = {
			["npcID"] = 173714,
		},
		[360767] = {
			["npcID"] = 181115,
		},
		[217260] = {
			["npcID"] = 88087,
		},
		[201902] = {
			["npcID"] = 100539,
		},
		[221356] = {
			["npcID"] = 111164,
		},
		[193712] = {
			["encounterName"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["npcID"] = 91789,
		},
		[340294] = {
			["npcID"] = 162727,
		},
		[297292] = {
			["npcID"] = 153165,
		},
		[167092] = {
			["npcID"] = 79510,
		},
		[198833] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 98970,
		},
		[60211] = {
			["npcID"] = 24079,
		},
		[79971] = {
			["npcID"] = 155284,
		},
		[356680] = {
			["npcID"] = 177133,
		},
		[228526] = {
			["npcID"] = 114783,
		},
		[319821] = {
			["npcID"] = 159612,
		},
		[340300] = {
			["npcID"] = 173720,
		},
		[196787] = {
			["npcID"] = 99956,
		},
		[119903] = {
			["npcID"] = 61672,
		},
		[167095] = {
			["npcID"] = 83390,
		},
		[193716] = {
			["encounterName"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["npcID"] = 91789,
		},
		[350541] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[352589] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 176583,
		},
		[156857] = {
			["encounterName"] = "Teron'gor",
			["npcID"] = 77734,
			["encounterID"] = 1714,
		},
		[193717] = {
			["encounterName"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["npcID"] = 91789,
		},
		[340304] = {
			["npcID"] = 173720,
		},
		[334161] = {
			["npcID"] = 171290,
		},
		[340305] = {
			["npcID"] = 173720,
		},
		[334162] = {
			["npcID"] = 166908,
		},
		[15503] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24553,
		},
		[344403] = {
			["npcID"] = 175012,
		},
		[356690] = {
			["npcID"] = 177135,
		},
		[126560] = {
			["npcID"] = 63696,
		},
		[344404] = {
			["npcID"] = 175012,
		},
		[285020] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 144244,
		},
		[186553] = {
			["npcID"] = 111332,
		},
		[147646] = {
			["npcID"] = 72807,
		},
		[175291] = {
			["npcID"] = 80409,
		},
		[34616] = {
			["npcID"] = 19511,
		},
		[297310] = {
			["npcID"] = 153174,
		},
		[166077] = {
			["npcID"] = 80468,
		},
		[334170] = {
			["npcID"] = 171289,
		},
		[229558] = {
			["npcID"] = 115402,
		},
		[123490] = {
			["npcID"] = 63030,
		},
		[315742] = {
			["npcID"] = 158891,
		},
		[350554] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[346459] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[317791] = {
			["npcID"] = 163366,
		},
		[147649] = {
			["npcID"] = 72807,
		},
		[358747] = {
			["npcID"] = 178824,
		},
		[136387] = {
			["npcID"] = 23682,
		},
		[364891] = {
			["npcID"] = 183737,
		},
		[358748] = {
			["npcID"] = 178824,
		},
		[196796] = {
			["npcID"] = 99956,
		},
		[354653] = {
			["npcID"] = 179560,
		},
		[332128] = {
			["npcID"] = 170419,
		},
		[358749] = {
			["npcID"] = 178824,
		},
		[274792] = {
			["npcID"] = 140149,
		},
		[319843] = {
			["npcID"] = 167033,
		},
		[321891] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 165251,
		},
		[166081] = {
			["npcID"] = 81063,
		},
		[191678] = {
			["npcID"] = 96480,
		},
		[348513] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[147652] = {
			["npcID"] = 72805,
		},
		[336228] = {
			["npcID"] = 170694,
		},
		[321894] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[86633] = {
			["encounterName"] = "Lord Overheat",
			["encounterID"] = 1145,
			["npcID"] = 46264,
		},
		[323943] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[79466] = {
			["encounterName"] = "Erudax",
			["encounterID"] = 1049,
			["npcID"] = 40484,
		},
		[362851] = {
			["npcID"] = 181539,
		},
		[305515] = {
			["encounterName"] = "Ravnyr",
			["npcID"] = 156501,
			["encounterID"] = 2326,
		},
		[364900] = {
			["npcID"] = 183737,
		},
		[92265] = {
			["encounterName"] = "Slabhide",
			["npcID"] = 43214,
			["encounterID"] = 1059,
		},
		[169156] = {
			["npcID"] = 77517,
		},
		[166085] = {
			["npcID"] = 81129,
		},
		[167109] = {
			["npcID"] = 85807,
		},
		[88170] = {
			["npcID"] = 45924,
		},
		[358760] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 176521,
			["encounterID"] = 2433,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["encounterID"] = 1850,
		},
		[354666] = {
			["npcID"] = 179580,
		},
		[358762] = {
			["npcID"] = 180389,
		},
		[295282] = {
			["npcID"] = 154033,
		},
		[354667] = {
			["npcID"] = 179580,
		},
		[323951] = {
			["npcID"] = 177380,
		},
		[175302] = {
			["npcID"] = 82311,
		},
		[295283] = {
			["npcID"] = 154033,
		},
		[56632] = {
			["npcID"] = 30276,
		},
		[138443] = {
			["npcID"] = 74149,
		},
		[142539] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 71397,
			["encounterID"] = 1594,
		},
		[176327] = {
			["npcID"] = 80725,
		},
		[86636] = {
			["encounterName"] = "Lord Overheat",
			["encounterID"] = 1145,
			["npcID"] = 46264,
		},
		[168137] = {
			["npcID"] = 77517,
		},
		[236737] = {
			["npcID"] = 118690,
		},
		[358769] = {
			["npcID"] = 179257,
		},
		[346483] = {
			["npcID"] = 173580,
		},
		[154828] = {
			["npcID"] = 80898,
		},
		[346484] = {
			["npcID"] = 173580,
		},
		[336246] = {
			["npcID"] = 166292,
		},
		[170187] = {
			["npcID"] = 84775,
		},
		[65648] = {
			["encounterName"] = "Mimiron",
			["npcID"] = 33670,
			["encounterID"] = 1138,
		},
		[156877] = {
			["encounterName"] = "Oregorger the Devourer",
			["encounterID"] = 1696,
			["npcID"] = 77182,
		},
		[183498] = {
			["npcID"] = 90544,
		},
		[250050] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[111723] = {
			["encounterName"] = "Raigonn",
			["npcID"] = 56877,
			["encounterID"] = 1419,
		},
		[52026] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 28586,
			["encounterID"] = 1987,
		},
		[332156] = {
			["npcID"] = 167963,
		},
		[191691] = {
			["npcID"] = 96480,
		},
		[336252] = {
			["npcID"] = 166292,
		},
		[260291] = {
			["npcID"] = 149384,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["npcID"] = 29305,
			["encounterID"] = 1980,
		},
		[215241] = {
			["npcID"] = 111530,
		},
		[167119] = {
			["npcID"] = 85807,
		},
		[81008] = {
			["npcID"] = 42810,
		},
		[32829] = {
			["npcID"] = 18501,
		},
		[123499] = {
			["npcID"] = 63031,
		},
		[167120] = {
			["npcID"] = 81279,
		},
		[278919] = {
			["npcID"] = 169629,
		},
		[330113] = {
			["npcID"] = 169600,
		},
		[153810] = {
			["encounterName"] = "Rukhran",
			["npcID"] = 76143,
			["encounterID"] = 1700,
		},
		[336257] = {
			["npcID"] = 164351,
		},
		[59706] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["npcID"] = 23954,
		},
		[219339] = {
			["npcID"] = 110340,
		},
		[358784] = {
			["npcID"] = 179891,
		},
		[295304] = {
			["npcID"] = 154033,
		},
		[326021] = {
			["npcID"] = 172312,
		},
		[328069] = {
			["npcID"] = 168240,
		},
		[332165] = {
			["npcID"] = 170414,
		},
		[228555] = {
			["npcID"] = 183424,
		},
		[147669] = {
			["npcID"] = 72350,
		},
		[330118] = {
			["npcID"] = 159755,
		},
		[11921] = {
			["npcID"] = 19016,
		},
		[175314] = {
			["npcID"] = 81994,
		},
		[360835] = {
			["npcID"] = 180722,
		},
		[41277] = {
			["npcID"] = 23196,
		},
		[369028] = {
			["npcID"] = 185823,
		},
		[332169] = {
			["npcID"] = 170400,
		},
		[43325] = {
			["npcID"] = 89112,
		},
		[295311] = {
			["npcID"] = 154033,
		},
		[330123] = {
			["npcID"] = 169600,
		},
		[211152] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[154839] = {
			["npcID"] = 84110,
		},
		[346506] = {
			["npcID"] = 171581,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["encounterID"] = 1688,
			["npcID"] = 75829,
		},
		[228559] = {
			["npcID"] = 114792,
		},
		[321935] = {
			["npcID"] = 164707,
		},
		[64059] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33890,
			["encounterID"] = 1143,
		},
		[326032] = {
			["npcID"] = 160455,
		},
		[319889] = {
			["npcID"] = 165044,
		},
		[207059] = {
			["npcID"] = 107447,
		},
		[278935] = {
			["npcID"] = 169629,
		},
		[210131] = {
			["npcID"] = 153266,
		},
		[276888] = {
			["npcID"] = 157757,
		},
		[344464] = {
			["npcID"] = 166398,
		},
		[358799] = {
			["npcID"] = 178518,
		},
		[346513] = {
			["npcID"] = 171581,
		},
		[328084] = {
			["npcID"] = 168240,
		},
		[317846] = {
			["npcID"] = 157007,
		},
		[332181] = {
			["npcID"] = 170418,
		},
		[55101] = {
			["encounterName"] = "Moorabi",
			["npcID"] = 29305,
			["encounterID"] = 1980,
		},
		[360850] = {
			["encounterName"] = "Rokmora",
			["encounterID"] = 1790,
			["npcID"] = 182149,
		},
		[326039] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[352660] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[169179] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[219349] = {
			["npcID"] = 110321,
		},
		[295324] = {
			["npcID"] = 154033,
		},
		[348566] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180159,
		},
		[319898] = {
			["npcID"] = 168022,
		},
		[350615] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 175727,
		},
		[352663] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[356759] = {
			["npcID"] = 177129,
		},
		[342425] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[120946] = {
			["npcID"] = 61929,
		},
		[313757] = {
			["npcID"] = 160974,
		},
		[227542] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114317,
		},
		[114291] = {
			["npcID"] = 59464,
		},
		[106612] = {
			["encounterName"] = "Wise Mari",
			["npcID"] = 56448,
			["encounterID"] = 1418,
		},
		[305567] = {
			["encounterName"] = "Ravnyr",
			["npcID"] = 156501,
			["encounterID"] = 2326,
		},
		[360857] = {
			["encounterName"] = "Rokmora",
			["encounterID"] = 1790,
			["npcID"] = 182149,
		},
		[227543] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114284,
		},
		[326046] = {
			["npcID"] = 167111,
		},
		[328094] = {
			["npcID"] = 168886,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["encounterID"] = 1688,
			["npcID"] = 75829,
		},
		[356764] = {
			["npcID"] = 177878,
		},
		[163040] = {
			["npcID"] = 81168,
		},
		[164064] = {
			["npcID"] = 85140,
		},
		[319906] = {
			["npcID"] = 160996,
		},
		[313763] = {
			["npcID"] = 156320,
		},
		[227545] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114316,
		},
		[297382] = {
			["encounterName"] = "King Gobbamak",
			["encounterID"] = 2290,
			["npcID"] = 153172,
		},
		[340385] = {
			["npcID"] = 168147,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[360863] = {
			["npcID"] = 183249,
		},
		[299431] = {
			["npcID"] = 151301,
		},
		[171233] = {
			["npcID"] = 75207,
		},
		[332196] = {
			["npcID"] = 167963,
		},
		[319910] = {
			["npcID"] = 158771,
		},
		[63038] = {
			["encounterName"] = "Yogg-Saron",
			["encounterID"] = 1143,
			["npcID"] = 33136,
		},
		[228571] = {
			["npcID"] = 114794,
		},
		[11922] = {
			["npcID"] = 130272,
		},
		[11986] = {
			["npcID"] = 30179,
		},
		[342438] = {
			["npcID"] = 159476,
		},
		[3109] = {
			["npcID"] = 43761,
		},
		[299437] = {
			["npcID"] = 151301,
		},
		[165093] = {
			["npcID"] = 81983,
		},
		[299438] = {
			["npcID"] = 150249,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[88186] = {
			["npcID"] = 45922,
		},
		[53824] = {
			["npcID"] = 23745,
		},
		[221408] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 111070,
		},
		[14034] = {
			["npcID"] = 19016,
		},
		[360875] = {
			["npcID"] = 180722,
		},
		[321968] = {
			["npcID"] = 164929,
		},
		[360876] = {
			["npcID"] = 182357,
		},
		[115320] = {
			["npcID"] = 61390,
		},
		[69246] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 36661,
			["encounterID"] = 2000,
		},
		[21667] = {
			["npcID"] = 13419,
		},
		[224482] = {
			["npcID"] = 127579,
		},
		[138477] = {
			["npcID"] = 69946,
		},
		[157931] = {
			["npcID"] = 76263,
		},
		[328117] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[340404] = {
			["npcID"] = 162819,
		},
		[118905] = {
			["npcID"] = 61245,
		},
		[338357] = {
			["npcID"] = 172981,
		},
		[317880] = {
			["npcID"] = 158992,
		},
		[338358] = {
			["npcID"] = 165290,
		},
		[348597] = {
			["npcID"] = 167744,
		},
		[358836] = {
			["npcID"] = 180664,
		},
		[33860] = {
			["npcID"] = 10425,
		},
		[152814] = {
			["npcID"] = 75713,
		},
		[362934] = {
			["npcID"] = 182215,
		},
		[259298] = {
			["npcID"] = 125437,
		},
		[178412] = {
			["npcID"] = 83578,
		},
		[313790] = {
			["npcID"] = 160974,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["npcID"] = 29307,
			["encounterID"] = 1983,
		},
		[364986] = {
			["npcID"] = 181360,
		},
		[224488] = {
			["npcID"] = 112676,
		},
		[340414] = {
			["npcID"] = 157308,
		},
		[342462] = {
			["npcID"] = 156867,
		},
		[229608] = {
			["npcID"] = 115486,
		},
		[91263] = {
			["encounterName"] = "General Husam",
			["encounterID"] = 1052,
			["npcID"] = 44577,
		},
		[358845] = {
			["npcID"] = 181133,
		},
		[152818] = {
			["npcID"] = 75713,
		},
		[21668] = {
			["npcID"] = 13443,
		},
		[51779] = {
			["npcID"] = 37582,
		},
		[121468] = {
			["npcID"] = 61177,
		},
		[319941] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[317894] = {
			["npcID"] = 161488,
		},
		[76418] = {
			["npcID"] = 39954,
		},
		[229611] = {
			["npcID"] = 115486,
		},
		[356804] = {
			["npcID"] = 178578,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["npcID"] = 40633,
		},
		[332234] = {
			["npcID"] = 167967,
		},
		[334282] = {
			["npcID"] = 154330,
		},
		[88194] = {
			["npcID"] = 45919,
		},
		[342474] = {
			["npcID"] = 165759,
		},
		[147704] = {
			["npcID"] = 72896,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[324046] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[321999] = {
			["npcID"] = 164705,
		},
		[299474] = {
			["npcID"] = 150154,
		},
		[322000] = {
			["npcID"] = 165008,
		},
		[332239] = {
			["npcID"] = 170418,
		},
		[317905] = {
			["npcID"] = 165323,
		},
		[148730] = {
			["npcID"] = 73018,
		},
		[360909] = {
			["npcID"] = 182150,
		},
		[326098] = {
			["npcID"] = 167480,
		},
		[328146] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[174328] = {
			["npcID"] = 76177,
		},
		[319956] = {
			["npcID"] = 167055,
		},
		[319957] = {
			["npcID"] = 175815,
		},
		[356817] = {
			["npcID"] = 178877,
		},
		[191735] = {
			["npcID"] = 98954,
		},
		[125056] = {
			["npcID"] = 165189,
		},
		[46406] = {
			["npcID"] = 25756,
		},
		[252144] = {
			["npcID"] = 127044,
		},
		[63556] = {
			["encounterName"] = "Freya",
			["npcID"] = 33525,
			["encounterID"] = 1133,
		},
		[285148] = {
			["npcID"] = 150734,
		},
		[213238] = {
			["encounterName"] = "Tichondrius",
			["encounterID"] = 1862,
			["npcID"] = 103685,
		},
		[197880] = {
			["npcID"] = 93066,
		},
		[198904] = {
			["npcID"] = 99358,
		},
		[152830] = {
			["npcID"] = 74980,
		},
		[252146] = {
			["npcID"] = 123474,
		},
		[118914] = {
			["npcID"] = 61252,
		},
		[317916] = {
			["npcID"] = 159112,
		},
		[135425] = {
			["npcID"] = 68334,
		},
		[338394] = {
			["npcID"] = 170394,
		},
		[358872] = {
			["npcID"] = 178592,
		},
		[336347] = {
			["npcID"] = 160640,
		},
		[107140] = {
			["encounterName"] = "Gu Cloudstrike",
			["npcID"] = 56754,
			["encounterID"] = 1303,
		},
		[183548] = {
			["npcID"] = 102404,
		},
		[319966] = {
			["npcID"] = 160479,
		},
		[227575] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114316,
		},
		[164095] = {
			["npcID"] = 85122,
		},
		[340446] = {
			["npcID"] = 167898,
		},
		[173311] = {
			["npcID"] = 83390,
		},
		[249078] = {
			["npcID"] = 122405,
		},
		[252150] = {
			["npcID"] = 123474,
		},
		[350687] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[80009] = {
			["npcID"] = 81672,
		},
		[259318] = {
			["npcID"] = 125437,
		},
		[227578] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114317,
			["encounterID"] = 1961,
		},
		[344546] = {
			["npcID"] = 162880,
		},
		[165122] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80816,
		},
		[249080] = {
			["npcID"] = 122322,
		},
		[228603] = {
			["npcID"] = 114804,
		},
		[365026] = {
			["npcID"] = 182318,
		},
		[249081] = {
			["npcID"] = 124171,
		},
		[88201] = {
			["npcID"] = 45919,
		},
		[338406] = {
			["npcID"] = 173051,
		},
		[260344] = {
			["npcID"] = 157145,
		},
		[285165] = {
			["npcID"] = 150734,
		},
		[338407] = {
			["npcID"] = 165339,
		},
		[346599] = {
			["npcID"] = 168975,
		},
		[163077] = {
			["npcID"] = 85942,
		},
		[328170] = {
			["npcID"] = 162057,
		},
		[156934] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76809,
		},
		[348648] = {
			["npcID"] = 176520,
		},
		[326123] = {
			["npcID"] = 172988,
		},
		[228606] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114803,
			["encounterID"] = 1960,
		},
		[164102] = {
			["npcID"] = 80677,
		},
		[182532] = {
			["npcID"] = 174183,
		},
		[342507] = {
			["npcID"] = 170834,
		},
		[362985] = {
			["npcID"] = 183714,
		},
		[346604] = {
			["npcID"] = 175792,
		},
		[356843] = {
			["npcID"] = 179388,
		},
		[317936] = {
			["npcID"] = 163459,
		},
		[80012] = {
			["npcID"] = 88781,
		},
		[346605] = {
			["npcID"] = 175801,
		},
		[156937] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76809,
		},
		[332272] = {
			["npcID"] = 180028,
		},
		[328177] = {
			["npcID"] = 168572,
		},
		[346607] = {
			["npcID"] = 175857,
		},
		[358894] = {
			["npcID"] = 179892,
		},
		[147723] = {
			["npcID"] = 72894,
		},
		[309749] = {
			["npcID"] = 172556,
		},
		[15124] = {
			["npcID"] = 79681,
		},
		[162058] = {
			["encounterName"] = "Skylord Tovra",
			["npcID"] = 80005,
			["encounterID"] = 1736,
		},
		[187655] = {
			["npcID"] = 94663,
		},
		[328180] = {
			["npcID"] = 168627,
		},
		[354801] = {
			["npcID"] = 179580,
		},
		[340467] = {
			["npcID"] = 173756,
		},
		[224515] = {
			["npcID"] = 112676,
		},
		[184584] = {
			["npcID"] = 93154,
		},
		[340468] = {
			["npcID"] = 159105,
		},
		[317943] = {
			["npcID"] = 163457,
		},
		[346612] = {
			["npcID"] = 175851,
		},
		[340469] = {
			["npcID"] = 167439,
		},
		[334326] = {
			["npcID"] = 171376,
		},
		[32422] = {
			["encounterName"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["encounterID"] = 1889,
		},
		[295420] = {
			["npcID"] = 154039,
		},
		[356853] = {
			["npcID"] = 178311,
		},
		[276991] = {
			["npcID"] = 156676,
		},
		[319994] = {
			["npcID"] = 170893,
		},
		[334329] = {
			["npcID"] = 171376,
		},
		[319995] = {
			["npcID"] = 158771,
		},
		[119434] = {
			["encounterName"] = "Slagmaw",
			["encounterID"] = 1445,
			["npcID"] = 61463,
		},
		[309757] = {
			["npcID"] = 156325,
		},
		[340474] = {
			["npcID"] = 167439,
		},
		[319997] = {
			["npcID"] = 164510,
		},
		[222471] = {
			["npcID"] = 111336,
		},
		[336380] = {
			["npcID"] = 172142,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[227592] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[336383] = {
			["npcID"] = 169759,
		},
		[151826] = {
			["npcID"] = 83804,
		},
		[299525] = {
			["npcID"] = 150250,
		},
		[326146] = {
			["npcID"] = 157558,
		},
		[338434] = {
			["npcID"] = 162875,
		},
		[340482] = {
			["npcID"] = 162711,
		},
		[320005] = {
			["npcID"] = 164477,
		},
		[356865] = {
			["npcID"] = 177271,
		},
		[37965] = {
			["npcID"] = 17871,
		},
		[317959] = {
			["npcID"] = 163458,
		},
		[70291] = {
			["npcID"] = 31260,
		},
		[324103] = {
			["npcID"] = 162133,
		},
		[320008] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[222477] = {
			["npcID"] = 111338,
		},
		[158997] = {
			["npcID"] = 85294,
		},
		[346631] = {
			["npcID"] = 175930,
		},
		[317963] = {
			["npcID"] = 163458,
		},
		[295438] = {
			["npcID"] = 144581,
		},
		[369158] = {
			["npcID"] = 185841,
		},
		[61515] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 28580,
			["encounterID"] = 1987,
		},
		[358921] = {
			["npcID"] = 178615,
		},
		[168214] = {
			["npcID"] = 75094,
		},
		[196883] = {
			["npcID"] = 98521,
		},
		[350732] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[136475] = {
			["npcID"] = 23682,
		},
		[97426] = {
			["npcID"] = 53412,
		},
		[342543] = {
			["npcID"] = 170834,
		},
		[270872] = {
			["npcID"] = 137485,
		},
		[228625] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 183425,
		},
		[320019] = {
			["npcID"] = 160996,
		},
		[60236] = {
			["npcID"] = 28547,
		},
		[162074] = {
			["npcID"] = 88435,
		},
		[124048] = {
			["npcID"] = 60647,
		},
		[37967] = {
			["npcID"] = 17871,
		},
		[259343] = {
			["npcID"] = 130138,
		},
		[340500] = {
			["npcID"] = 167078,
		},
		[32424] = {
			["encounterName"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["encounterID"] = 1889,
		},
		[356885] = {
			["npcID"] = 177833,
		},
		[216342] = {
			["npcID"] = 99791,
		},
		[338456] = {
			["npcID"] = 172981,
		},
		[332313] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[326171] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[320028] = {
			["npcID"] = 166932,
		},
		[356888] = {
			["npcID"] = 177813,
		},
		[205081] = {
			["npcID"] = 102397,
		},
		[223511] = {
			["npcID"] = 113512,
		},
		[328221] = {
			["npcID"] = 166723,
		},
		[330269] = {
			["npcID"] = 169600,
		},
		[358938] = {
			["npcID"] = 180840,
		},
		[221464] = {
			["npcID"] = 111225,
		},
		[332318] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 164407,
			["encounterID"] = 2399,
		},
		[270886] = {
			["npcID"] = 151333,
		},
		[317985] = {
			["npcID"] = 163520,
		},
		[346654] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[326177] = {
			["npcID"] = 167437,
		},
		[108693] = {
			["npcID"] = 54631,
		},
		[169248] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84550,
		},
		[340512] = {
			["npcID"] = 167078,
		},
		[213275] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[225562] = {
			["npcID"] = 100532,
		},
		[330275] = {
			["npcID"] = 169600,
		},
		[30633] = {
			["encounterName"] = "Warbringer O'mrogg",
			["npcID"] = 16809,
			["encounterID"] = 1937,
		},
		[106646] = {
			["npcID"] = 56473,
		},
		[156963] = {
			["encounterName"] = "Teron'gor",
			["npcID"] = 77734,
			["encounterID"] = 1714,
		},
		[356897] = {
			["npcID"] = 177294,
		},
		[277035] = {
			["npcID"] = 154018,
		},
		[277036] = {
			["npcID"] = 154016,
		},
		[156964] = {
			["encounterName"] = "Teron'gor",
			["npcID"] = 77734,
			["encounterID"] = 1714,
		},
		[285228] = {
			["npcID"] = 150734,
		},
		[168227] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 83612,
		},
		[145702] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 71385,
			["encounterID"] = 1594,
		},
		[338471] = {
			["npcID"] = 162100,
		},
		[356901] = {
			["npcID"] = 177004,
		},
		[332329] = {
			["npcID"] = 170486,
		},
		[334377] = {
			["npcID"] = 171805,
		},
		[277041] = {
			["npcID"] = 154020,
		},
		[342570] = {
			["npcID"] = 170832,
		},
		[277043] = {
			["npcID"] = 154018,
		},
		[153896] = {
			["encounterName"] = "Rukhran",
			["npcID"] = 76143,
			["encounterID"] = 1700,
		},
		[334381] = {
			["npcID"] = 171384,
		},
		[213281] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 107285,
		},
		[159016] = {
			["npcID"] = 85775,
		},
		[225568] = {
			["npcID"] = 99366,
		},
		[202019] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 98970,
		},
		[332335] = {
			["npcID"] = 170488,
		},
		[212258] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[159017] = {
			["npcID"] = 78734,
		},
		[324146] = {
			["encounterName"] = "Ventunax",
			["encounterID"] = 2356,
			["npcID"] = 162058,
		},
		[342576] = {
			["npcID"] = 163299,
		},
		[15254] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18431,
		},
		[222499] = {
			["npcID"] = 162829,
		},
		[356913] = {
			["npcID"] = 177813,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["encounterID"] = 1869,
		},
		[63568] = {
			["encounterName"] = "Elder Ironbranch",
			["npcID"] = 33527,
			["encounterID"] = 1165,
		},
		[55633] = {
			["npcID"] = 29832,
		},
		[358963] = {
			["npcID"] = 180864,
		},
		[328248] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[222501] = {
			["npcID"] = 135858,
		},
		[159021] = {
			["npcID"] = 77890,
		},
		[225573] = {
			["npcID"] = 98370,
		},
		[338488] = {
			["npcID"] = 173066,
		},
		[340536] = {
			["npcID"] = 173783,
		},
		[301629] = {
			["npcID"] = 150297,
		},
		[205096] = {
			["npcID"] = 102395,
		},
		[140592] = {
			["npcID"] = 90708,
		},
		[365110] = {
			["npcID"] = 183746,
		},
		[358967] = {
			["npcID"] = 179446,
		},
		[303678] = {
			["npcID"] = 155793,
		},
		[338490] = {
			["npcID"] = 162875,
		},
		[145712] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 71385,
			["encounterID"] = 1594,
		},
		[361016] = {
			["npcID"] = 183983,
		},
		[156975] = {
			["encounterName"] = "Teron'gor",
			["npcID"] = 77734,
			["encounterID"] = 1714,
		},
		[275012] = {
			["npcID"] = 152998,
		},
		[358970] = {
			["npcID"] = 179891,
		},
		[320063] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164451,
		},
		[356923] = {
			["npcID"] = 179890,
		},
		[358971] = {
			["npcID"] = 179890,
		},
		[356924] = {
			["npcID"] = 179890,
		},
		[195884] = {
			["npcID"] = 96423,
		},
		[299588] = {
			["npcID"] = 150251,
		},
		[163121] = {
			["npcID"] = 80708,
		},
		[320067] = {
			["npcID"] = 170643,
		},
		[70306] = {
			["npcID"] = 37670,
		},
		[361023] = {
			["npcID"] = 181005,
		},
		[169265] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[356928] = {
			["npcID"] = 177131,
		},
		[352833] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[346690] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[356929] = {
			["npcID"] = 179837,
		},
		[334404] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[352834] = {
			["npcID"] = 176959,
		},
		[205102] = {
			["npcID"] = 102400,
		},
		[361027] = {
			["npcID"] = 181093,
		},
		[358980] = {
			["npcID"] = 180864,
		},
		[279118] = {
			["npcID"] = 122969,
		},
		[115358] = {
			["npcID"] = 56349,
		},
		[358982] = {
			["npcID"] = 180865,
		},
		[270929] = {
			["npcID"] = 152843,
		},
		[111775] = {
			["encounterName"] = "Lilian Voss",
			["npcID"] = 58722,
			["encounterID"] = 1429,
		},
		[358983] = {
			["npcID"] = 180865,
		},
		[163126] = {
			["npcID"] = 80708,
		},
		[346698] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[367176] = {
			["npcID"] = 184409,
		},
		[352842] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[204082] = {
			["npcID"] = 120303,
		},
		[352843] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[371273] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 188302,
		},
		[198963] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[350796] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[320081] = {
			["npcID"] = 170643,
		},
		[33111] = {
			["npcID"] = 17371,
		},
		[356941] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[356942] = {
			["npcID"] = 179837,
		},
		[326227] = {
			["npcID"] = 157558,
		},
		[53333] = {
			["npcID"] = 29064,
		},
		[159035] = {
			["npcID"] = 78728,
		},
		[160059] = {
			["npcID"] = 77790,
		},
		[354898] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[340564] = {
			["npcID"] = 169206,
		},
		[326230] = {
			["npcID"] = 165124,
		},
		[7948] = {
			["encounterName"] = "Alzzin the Wildshaper",
			["encounterID"] = 346,
			["npcID"] = 11492,
		},
		[348756] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[56405] = {
			["encounterName"] = "Gothik the Harvester",
			["encounterID"] = 1109,
			["npcID"] = 16060,
		},
		[354900] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[98980] = {
			["npcID"] = 53015,
		},
		[340567] = {
			["npcID"] = 162741,
		},
		[33624] = {
			["npcID"] = 18949,
		},
		[152894] = {
			["npcID"] = 78933,
		},
		[332377] = {
			["npcID"] = 170513,
		},
		[356951] = {
			["npcID"] = 177004,
		},
		[358999] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[354904] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[227638] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[115363] = {
			["npcID"] = 56349,
		},
		[218424] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109041,
		},
		[322143] = {
			["npcID"] = 171255,
		},
		[356955] = {
			["npcID"] = 176880,
		},
		[224568] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112665,
		},
		[328287] = {
			["npcID"] = 156911,
		},
		[313953] = {
			["npcID"] = 160874,
		},
		[356956] = {
			["npcID"] = 177551,
		},
		[81576] = {
			["npcID"] = 43537,
		},
		[328288] = {
			["npcID"] = 168718,
		},
		[58966] = {
			["npcID"] = 29836,
		},
		[59734] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["npcID"] = 23954,
		},
		[350816] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 176531,
		},
		[161090] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77816,
			["encounterID"] = 1715,
		},
		[253239] = {
			["npcID"] = 122971,
		},
		[159043] = {
			["encounterName"] = "Beastlord Darmac",
			["encounterID"] = 1694,
			["npcID"] = 76946,
		},
		[177473] = {
			["npcID"] = 82876,
		},
		[205118] = {
			["npcID"] = 102377,
		},
		[63830] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33134,
			["encounterID"] = 1143,
		},
		[340581] = {
			["npcID"] = 166263,
		},
		[32173] = {
			["npcID"] = 17961,
		},
		[328295] = {
			["npcID"] = 168718,
		},
		[56919] = {
			["npcID"] = 26803,
		},
		[171331] = {
			["npcID"] = 76686,
		},
		[32858] = {
			["npcID"] = 18493,
		},
		[354918] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[58967] = {
			["npcID"] = 29836,
		},
		[356967] = {
			["npcID"] = 180348,
		},
		[369254] = {
			["npcID"] = 185886,
		},
		[330347] = {
			["npcID"] = 157583,
		},
		[227646] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114318,
		},
		[359016] = {
			["npcID"] = 179460,
		},
		[295536] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[324205] = {
			["encounterName"] = "Ventunax",
			["encounterID"] = 2356,
			["npcID"] = 162058,
		},
		[301681] = {
			["npcID"] = 150292,
		},
		[102569] = {
			["encounterName"] = "Murozond",
			["npcID"] = 54432,
			["encounterID"] = 1271,
		},
		[86699] = {
			["npcID"] = 61252,
		},
		[356971] = {
			["npcID"] = 180087,
		},
		[350828] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[49241] = {
			["npcID"] = 27542,
		},
		[157001] = {
			["npcID"] = 77890,
		},
		[167240] = {
			["npcID"] = 83028,
		},
		[320114] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[171336] = {
			["npcID"] = 77140,
		},
		[354927] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[340593] = {
			["npcID"] = 172050,
		},
		[234817] = {
			["encounterName"] = "Mephistroth",
			["npcID"] = 116944,
			["encounterID"] = 2039,
		},
		[340594] = {
			["npcID"] = 160629,
		},
		[261438] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["encounterID"] = 2116,
			["npcID"] = 131527,
		},
		[336499] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[124072] = {
			["npcID"] = 63592,
		},
		[37979] = {
			["npcID"] = 17730,
		},
		[194887] = {
			["npcID"] = 95013,
		},
		[320120] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164463,
		},
		[354932] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[261440] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["encounterID"] = 2116,
			["npcID"] = 131527,
		},
		[32860] = {
			["npcID"] = 18493,
		},
		[346742] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[356981] = {
			["npcID"] = 177529,
		},
		[152910] = {
			["npcID"] = 79469,
		},
		[373364] = {
			["npcID"] = 189878,
		},
		[363126] = {
			["npcID"] = 181027,
		},
		[35932] = {
			["npcID"] = 20901,
		},
		[356984] = {
			["npcID"] = 178402,
		},
		[146768] = {
			["encounterName"] = "Galakras",
			["npcID"] = 73910,
			["encounterID"] = 1622,
		},
		[268932] = {
			["encounterName"] = "King Dazar",
			["npcID"] = 136160,
			["encounterID"] = 2143,
		},
		[160079] = {
			["npcID"] = 79200,
		},
		[354938] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[162127] = {
			["npcID"] = 83729,
		},
		[328318] = {
			["npcID"] = 166875,
		},
		[87215] = {
			["npcID"] = 53805,
		},
		[373370] = {
			["npcID"] = 189878,
		},
		[187725] = {
			["npcID"] = 94617,
		},
		[367228] = {
			["npcID"] = 184767,
		},
		[135508] = {
			["npcID"] = 68821,
		},
		[29487] = {
			["npcID"] = 16460,
		},
		[350847] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[328322] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164363,
		},
		[291463] = {
			["npcID"] = 144568,
		},
		[320132] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[361088] = {
			["npcID"] = 181027,
		},
		[62042] = {
			["encounterName"] = "Thorim",
			["npcID"] = 32865,
			["encounterID"] = 1141,
		},
		[191823] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[320135] = {
			["npcID"] = 167470,
		},
		[119981] = {
			["encounterName"] = "Trial of the King",
			["encounterID"] = 1442,
			["npcID"] = 61444,
		},
		[183633] = {
			["npcID"] = 91008,
		},
		[152917] = {
			["npcID"] = 77559,
		},
		[179538] = {
			["npcID"] = 89025,
		},
		[254281] = {
			["npcID"] = 126913,
		},
		[16561] = {
			["npcID"] = 68486,
		},
		[68788] = {
			["encounterName"] = "Forgemaster Garfrost",
			["npcID"] = 36494,
			["encounterID"] = 1999,
		},
		[328331] = {
			["npcID"] = 168717,
		},
		[145752] = {
			["npcID"] = 72656,
		},
		[320141] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[98993] = {
			["npcID"] = 52907,
		},
		[340619] = {
			["npcID"] = 172069,
		},
		[334476] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[126126] = {
			["npcID"] = 58769,
		},
		[204114] = {
			["npcID"] = 113149,
		},
		[155992] = {
			["encounterName"] = "Blackhand",
			["encounterID"] = 1704,
			["npcID"] = 77325,
		},
		[332430] = {
			["npcID"] = 170513,
		},
		[120495] = {
			["npcID"] = 61302,
		},
		[320144] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[332431] = {
			["npcID"] = 170513,
		},
		[221521] = {
			["npcID"] = 111166,
		},
		[322193] = {
			["npcID"] = 171255,
		},
		[174423] = {
			["npcID"] = 83522,
		},
		[58972] = {
			["npcID"] = 29822,
		},
		[285335] = {
			["npcID"] = 156219,
		},
		[328338] = {
			["npcID"] = 167493,
		},
		[330386] = {
			["npcID"] = 158976,
		},
		[330387] = {
			["npcID"] = 163059,
		},
		[350865] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177154,
		},
		[229714] = {
			["npcID"] = 115419,
		},
		[330388] = {
			["npcID"] = 159178,
		},
		[340627] = {
			["npcID"] = 173798,
		},
		[342675] = {
			["npcID"] = 170882,
		},
		[352914] = {
			["npcID"] = 177397,
		},
		[334485] = {
			["encounterName"] = "Ventunax",
			["encounterID"] = 2356,
			["npcID"] = 162058,
		},
		[23601] = {
			["npcID"] = 16704,
		},
		[157020] = {
			["npcID"] = 79462,
		},
		[357011] = {
			["npcID"] = 177514,
		},
		[160092] = {
			["npcID"] = 79200,
		},
		[330391] = {
			["npcID"] = 156077,
		},
		[146782] = {
			["encounterName"] = "Galakras",
			["npcID"] = 72302,
			["encounterID"] = 1622,
		},
		[229716] = {
			["npcID"] = 115419,
		},
		[174427] = {
			["npcID"] = 83522,
		},
		[334488] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[279199] = {
			["npcID"] = 145281,
		},
		[58973] = {
			["npcID"] = 29820,
		},
		[165213] = {
			["npcID"] = 81985,
		},
		[301726] = {
			["npcID"] = 151604,
		},
		[122034] = {
			["npcID"] = 62307,
		},
		[154975] = {
			["encounterName"] = "Beastlord Darmac",
			["encounterID"] = 1694,
			["npcID"] = 76865,
		},
		[168286] = {
			["npcID"] = 75094,
		},
		[330397] = {
			["npcID"] = 157732,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["npcID"] = 29573,
			["encounterID"] = 1983,
		},
		[350875] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[118963] = {
			["npcID"] = 61240,
		},
		[227672] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114321,
			["encounterID"] = 1961,
		},
		[41056] = {
			["npcID"] = 90713,
		},
		[330400] = {
			["npcID"] = 173416,
		},
		[167264] = {
			["npcID"] = 77195,
		},
		[217434] = {
			["npcID"] = 107567,
		},
		[330401] = {
			["npcID"] = 168525,
		},
		[147811] = {
			["encounterName"] = "Garrosh Hellscream",
			["npcID"] = 73483,
			["encounterID"] = 1623,
		},
		[334498] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[330403] = {
			["npcID"] = 168153,
		},
		[340642] = {
			["npcID"] = 172078,
		},
		[166242] = {
			["npcID"] = 162874,
		},
		[330405] = {
			["npcID"] = 168525,
		},
		[316072] = {
			["npcID"] = 161258,
		},
		[320168] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[340646] = {
			["npcID"] = 173802,
		},
		[228700] = {
			["npcID"] = 114338,
		},
		[330408] = {
			["npcID"] = 168525,
		},
		[357029] = {
			["npcID"] = 180335,
		},
		[320170] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 162692,
		},
		[330409] = {
			["npcID"] = 160375,
		},
		[320171] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[340649] = {
			["npcID"] = 168692,
		},
		[17843] = {
			["npcID"] = 951,
		},
		[160102] = {
			["npcID"] = 79208,
		},
		[169317] = {
			["npcID"] = 83713,
		},
		[326316] = {
			["npcID"] = 160445,
		},
		[224607] = {
			["npcID"] = 112739,
		},
		[336556] = {
			["npcID"] = 172066,
		},
		[338604] = {
			["npcID"] = 173066,
		},
		[334509] = {
			["npcID"] = 177294,
		},
		[147817] = {
			["npcID"] = 72876,
		},
		[149865] = {
			["encounterName"] = "Ghamoo-ra",
			["npcID"] = 74446,
			["encounterID"] = 1667,
		},
		[326319] = {
			["npcID"] = 164921,
		},
		[338606] = {
			["npcID"] = 167731,
		},
		[106681] = {
			["npcID"] = 56472,
		},
		[340655] = {
			["npcID"] = 172077,
		},
		[350894] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[336560] = {
			["npcID"] = 180627,
		},
		[330417] = {
			["npcID"] = 169696,
		},
		[211299] = {
			["npcID"] = 105715,
		},
		[85692] = {
			["npcID"] = 82712,
		},
		[346800] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[152939] = {
			["encounterName"] = "Roltall",
			["npcID"] = 75786,
			["encounterID"] = 1652,
		},
		[203109] = {
			["npcID"] = 97510,
		},
		[114873] = {
			["npcID"] = 59613,
		},
		[250208] = {
			["npcID"] = 158427,
		},
		[152940] = {
			["encounterName"] = "Roltall",
			["npcID"] = 75786,
			["encounterID"] = 1652,
		},
		[363186] = {
			["npcID"] = 183843,
		},
		[330423] = {
			["npcID"] = 168572,
		},
		[340662] = {
			["npcID"] = 172078,
		},
		[195944] = {
			["npcID"] = 91796,
		},
		[336567] = {
			["npcID"] = 165976,
		},
		[224613] = {
			["npcID"] = 112739,
		},
		[202088] = {
			["encounterName"] = "Helya",
			["encounterID"] = 1824,
			["npcID"] = 96759,
		},
		[43619] = {
			["npcID"] = 52843,
		},
		[334522] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[322236] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 165430,
		},
		[340666] = {
			["npcID"] = 165053,
		},
		[359096] = {
			["npcID"] = 179460,
		},
		[157039] = {
			["encounterName"] = "Teron'gor",
			["npcID"] = 77734,
			["encounterID"] = 1714,
		},
		[346811] = {
			["npcID"] = 177735,
		},
		[350907] = {
			["npcID"] = 177791,
		},
		[338621] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[250213] = {
			["npcID"] = 161527,
		},
		[346813] = {
			["npcID"] = 152905,
		},
		[266951] = {
			["encounterName"] = "The Council of Tribes",
			["npcID"] = 135470,
			["encounterID"] = 2140,
		},
		[350909] = {
			["npcID"] = 177791,
		},
		[293573] = {
			["npcID"] = 149831,
		},
		[359102] = {
			["npcID"] = 176533,
		},
		[307909] = {
			["npcID"] = 157872,
		},
		[320196] = {
			["npcID"] = 168266,
		},
		[314053] = {
			["npcID"] = 161261,
		},
		[340674] = {
			["npcID"] = 165053,
		},
		[82625] = {
			["npcID"] = 210,
		},
		[324293] = {
			["npcID"] = 165919,
		},
		[216428] = {
			["npcID"] = 108879,
		},
		[330438] = {
			["npcID"] = 165976,
		},
		[334534] = {
			["npcID"] = 171805,
		},
		[320200] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[169331] = {
			["npcID"] = 83713,
		},
		[340678] = {
			["npcID"] = 172079,
		},
		[216430] = {
			["npcID"] = 108879,
		},
		[50276] = {
			["npcID"] = 26764,
		},
		[346823] = {
			["npcID"] = 175719,
		},
		[350919] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[340681] = {
			["npcID"] = 165720,
		},
		[334538] = {
			["npcID"] = 171422,
		},
		[328395] = {
			["npcID"] = 171656,
		},
		[340683] = {
			["npcID"] = 172079,
		},
		[216432] = {
			["npcID"] = 108879,
		},
		[46181] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24553,
		},
		[338636] = {
			["npcID"] = 167731,
		},
		[338637] = {
			["npcID"] = 173134,
		},
		[119999] = {
			["encounterName"] = "Lava Guard Gordoth",
			["encounterID"] = 1446,
			["npcID"] = 61528,
		},
		[334542] = {
			["npcID"] = 171422,
		},
		[176502] = {
			["npcID"] = 83689,
		},
		[338638] = {
			["npcID"] = 173134,
		},
		[328400] = {
			["npcID"] = 164737,
		},
		[338639] = {
			["npcID"] = 173134,
		},
		[175479] = {
			["npcID"] = 72677,
		},
		[152954] = {
			["encounterName"] = "Vigilant Kaathar",
			["npcID"] = 75839,
			["encounterID"] = 1686,
		},
		[58980] = {
			["npcID"] = 29826,
		},
		[346832] = {
			["npcID"] = 176262,
		},
		[175480] = {
			["npcID"] = 72677,
		},
		[35943] = {
			["npcID"] = 16594,
		},
		[264923] = {
			["encounterName"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["npcID"] = 131863,
		},
		[275162] = {
			["npcID"] = 161528,
		},
		[163194] = {
			["npcID"] = 80676,
		},
		[164218] = {
			["npcID"] = 81407,
		},
		[157051] = {
			["npcID"] = 77889,
		},
		[332500] = {
			["npcID"] = 165025,
		},
		[361169] = {
			["npcID"] = 182466,
		},
		[330453] = {
			["npcID"] = 163921,
		},
		[162171] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77803,
			["encounterID"] = 1715,
		},
		[38759] = {
			["encounterName"] = "Pandemonius",
			["encounterID"] = 1900,
			["npcID"] = 18341,
		},
		[361170] = {
			["npcID"] = 182523,
		},
		[128192] = {
			["npcID"] = 62559,
		},
		[342741] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 172858,
			["encounterID"] = 2417,
		},
		[209270] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[56933] = {
			["encounterName"] = "Frozen Commander",
			["encounterID"] = 519,
			["npcID"] = 26802,
		},
		[204151] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[157053] = {
			["npcID"] = 77890,
		},
		[149886] = {
			["encounterName"] = "Domina",
			["npcID"] = 74476,
			["encounterID"] = 1668,
		},
		[101060] = {
			["npcID"] = 52791,
		},
		[146815] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 73104,
			["encounterID"] = 1594,
		},
		[336601] = {
			["npcID"] = 165976,
		},
		[330458] = {
			["npcID"] = 151331,
		},
		[158078] = {
			["encounterName"] = "The Iron Maidens",
			["encounterID"] = 1695,
			["npcID"] = 77477,
		},
		[328411] = {
			["npcID"] = 158897,
		},
		[169341] = {
			["npcID"] = 81283,
		},
		[214392] = {
			["npcID"] = 126197,
		},
		[357081] = {
			["npcID"] = 176956,
		},
		[328413] = {
			["npcID"] = 164502,
		},
		[330461] = {
			["npcID"] = 158930,
		},
		[357082] = {
			["npcID"] = 178733,
		},
		[38760] = {
			["encounterName"] = "Pandemonius",
			["encounterID"] = 1900,
			["npcID"] = 18341,
		},
		[328414] = {
			["npcID"] = 156256,
		},
		[338653] = {
			["npcID"] = 173044,
		},
		[357083] = {
			["npcID"] = 180864,
		},
		[334558] = {
			["npcID"] = 171448,
		},
		[357084] = {
			["npcID"] = 180379,
		},
		[361180] = {
			["npcID"] = 182150,
		},
		[357085] = {
			["npcID"] = 176959,
		},
		[342751] = {
			["npcID"] = 171596,
		},
		[322274] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 164815,
		},
		[357086] = {
			["npcID"] = 176959,
		},
		[342752] = {
			["npcID"] = 173633,
		},
		[357087] = {
			["npcID"] = 178731,
		},
		[35945] = {
			["npcID"] = 16704,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["npcID"] = 95887,
			["encounterID"] = 1817,
		},
		[318181] = {
			["npcID"] = 159610,
		},
		[158083] = {
			["npcID"] = 79303,
		},
		[159107] = {
			["npcID"] = 84630,
		},
		[320230] = {
			["encounterName"] = "Dealer Xy'exa",
			["npcID"] = 164450,
			["encounterID"] = 2400,
		},
		[152964] = {
			["npcID"] = 75652,
		},
		[171394] = {
			["npcID"] = 81942,
		},
		[157060] = {
			["encounterName"] = "Kromog, Legend of the Mountain",
			["encounterID"] = 1713,
			["npcID"] = 77692,
		},
		[357091] = {
			["npcID"] = 178731,
		},
		[128708] = {
			["npcID"] = 59521,
		},
		[176514] = {
			["npcID"] = 83694,
		},
		[330471] = {
			["npcID"] = 153174,
		},
		[170371] = {
			["npcID"] = 77518,
		},
		[334567] = {
			["npcID"] = 171448,
		},
		[279278] = {
			["npcID"] = 152500,
		},
		[322281] = {
			["npcID"] = 172055,
		},
		[33642] = {
			["npcID"] = 18969,
		},
		[176515] = {
			["npcID"] = 83694,
		},
		[340712] = {
			["npcID"] = 162697,
		},
		[293614] = {
			["npcID"] = 149831,
		},
		[223614] = {
			["npcID"] = 102075,
		},
		[277233] = {
			["npcID"] = 179440,
		},
		[176516] = {
			["npcID"] = 83690,
		},
		[355048] = {
			["npcID"] = 178139,
		},
		[355049] = {
			["npcID"] = 176535,
		},
		[328429] = {
			["npcID"] = 168022,
		},
		[355050] = {
			["npcID"] = 176535,
		},
		[332525] = {
			["npcID"] = 171396,
		},
		[102601] = {
			["npcID"] = 54920,
		},
		[332526] = {
			["npcID"] = 171396,
		},
		[330479] = {
			["npcID"] = 170417,
		},
		[50025] = {
			["npcID"] = 27881,
		},
		[346863] = {
			["npcID"] = 158406,
		},
		[357102] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[320243] = {
			["npcID"] = 160905,
		},
		[355055] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[342770] = {
			["npcID"] = 173604,
		},
		[346866] = {
			["npcID"] = 174175,
		},
		[326389] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[328437] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[340724] = {
			["npcID"] = 170643,
		},
		[305913] = {
			["npcID"] = 153242,
		},
		[160140] = {
			["npcID"] = 87841,
		},
		[152973] = {
			["npcID"] = 76087,
		},
		[56937] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26930,
		},
		[326392] = {
			["npcID"] = 157212,
		},
		[67280] = {
			["npcID"] = 34924,
		},
		[355062] = {
			["npcID"] = 178623,
		},
		[59241] = {
			["npcID"] = 26670,
		},
		[355063] = {
			["npcID"] = 178623,
		},
		[277249] = {
			["npcID"] = 158177,
		},
		[177548] = {
			["npcID"] = 78819,
		},
		[357112] = {
			["npcID"] = 177831,
		},
		[342778] = {
			["npcID"] = 174307,
		},
		[223623] = {
			["npcID"] = 102075,
		},
		[46187] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[102605] = {
			["encounterName"] = "Echo of Tyrande",
			["npcID"] = 54544,
			["encounterID"] = 1884,
		},
		[357115] = {
			["npcID"] = 177915,
		},
		[326399] = {
			["npcID"] = 155251,
		},
		[361211] = {
			["npcID"] = 182161,
		},
		[194956] = {
			["encounterName"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["npcID"] = 98542,
		},
		[221577] = {
			["npcID"] = 111170,
		},
		[355069] = {
			["npcID"] = 178661,
		},
		[209291] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 105630,
		},
		[355070] = {
			["npcID"] = 178625,
		},
		[118988] = {
			["encounterName"] = "Gekkan",
			["encounterID"] = 2129,
			["npcID"] = 61243,
		},
		[177552] = {
			["npcID"] = 78819,
		},
		[206221] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[240009] = {
			["npcID"] = 158314,
		},
		[143765] = {
			["encounterName"] = "Paragons of the Klaxxi",
			["npcID"] = 71156,
			["encounterID"] = 1593,
		},
		[355074] = {
			["npcID"] = 178628,
		},
		[206222] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[357123] = {
			["npcID"] = 180779,
		},
		[87761] = {
			["npcID"] = 45928,
		},
		[357124] = {
			["npcID"] = 180780,
		},
		[310026] = {
			["npcID"] = 165677,
		},
		[41069] = {
			["npcID"] = 22882,
		},
		[357125] = {
			["npcID"] = 176879,
		},
		[326409] = {
			["npcID"] = 164557,
		},
		[262929] = {
			["npcID"] = 127939,
		},
		[59243] = {
			["npcID"] = 26670,
		},
		[328458] = {
			["npcID"] = 168844,
		},
		[87762] = {
			["npcID"] = 45930,
		},
		[35950] = {
			["encounterName"] = "Blood Guard Porung",
			["encounterID"] = 1935,
			["npcID"] = 17670,
		},
		[357128] = {
			["npcID"] = 176879,
		},
		[342794] = {
			["npcID"] = 174336,
		},
		[184724] = {
			["npcID"] = 93298,
		},
		[328462] = {
			["npcID"] = 168845,
		},
		[373513] = {
			["npcID"] = 190128,
		},
		[47981] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["encounterID"] = 2012,
			["npcID"] = 26794,
		},
		[160152] = {
			["npcID"] = 79256,
		},
		[324368] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 163077,
		},
		[20793] = {
			["npcID"] = 62,
		},
		[200084] = {
			["npcID"] = 98366,
		},
		[344847] = {
			["npcID"] = 178226,
		},
		[193941] = {
			["npcID"] = 98406,
		},
		[59244] = {
			["npcID"] = 26670,
		},
		[361230] = {
			["npcID"] = 182561,
		},
		[357135] = {
			["npcID"] = 180387,
		},
		[310037] = {
			["npcID"] = 165677,
		},
		[151963] = {
			["npcID"] = 75463,
		},
		[194966] = {
			["encounterName"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["npcID"] = 98542,
		},
		[130767] = {
			["npcID"] = 62649,
		},
		[15453] = {
			["npcID"] = 16165,
		},
		[174489] = {
			["npcID"] = 77559,
		},
		[293657] = {
			["npcID"] = 149903,
		},
		[361233] = {
			["npcID"] = 182158,
		},
		[355090] = {
			["npcID"] = 178628,
		},
		[357139] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[310041] = {
			["npcID"] = 165677,
		},
		[151965] = {
			["npcID"] = 75191,
		},
		[169371] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84554,
		},
		[332567] = {
			["npcID"] = 170228,
		},
		[367379] = {
			["npcID"] = 178778,
		},
		[90325] = {
			["npcID"] = 109154,
		},
		[340759] = {
			["npcID"] = 169889,
		},
		[250258] = {
			["encounterName"] = "Vol'kaal",
			["encounterID"] = 2085,
			["npcID"] = 122965,
		},
		[332569] = {
			["npcID"] = 171255,
		},
		[367381] = {
			["npcID"] = 178778,
		},
		[273185] = {
			["npcID"] = 127879,
		},
		[357143] = {
			["npcID"] = 178646,
		},
		[257426] = {
			["npcID"] = 129602,
		},
		[336666] = {
			["npcID"] = 158891,
		},
		[60781] = {
			["npcID"] = 30205,
		},
		[357144] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 180323,
		},
		[221591] = {
			["npcID"] = 111164,
		},
		[75992] = {
			["npcID"] = 40634,
		},
		[357146] = {
			["npcID"] = 177938,
		},
		[256404] = {
			["npcID"] = 127530,
		},
		[191900] = {
			["encounterName"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["npcID"] = 91784,
		},
		[64877] = {
			["npcID"] = 34190,
		},
		[203163] = {
			["npcID"] = 102788,
		},
		[130770] = {
			["npcID"] = 62650,
		},
		[287525] = {
			["npcID"] = 149935,
		},
		[20794] = {
			["npcID"] = 38926,
		},
		[169376] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84550,
		},
		[334625] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[265002] = {
			["encounterName"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["npcID"] = 131863,
		},
		[324387] = {
			["npcID"] = 165197,
		},
		[320293] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[330532] = {
			["npcID"] = 164510,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[62318] = {
			["npcID"] = 32883,
		},
		[193951] = {
			["npcID"] = 97677,
		},
		[170402] = {
			["npcID"] = 72674,
		},
		[359203] = {
			["npcID"] = 184059,
		},
		[147878] = {
			["npcID"] = 72888,
		},
		[326441] = {
			["npcID"] = 164557,
		},
		[152998] = {
			["npcID"] = 76145,
		},
		[324394] = {
			["npcID"] = 165197,
		},
		[59247] = {
			["npcID"] = 26691,
		},
		[34930] = {
			["npcID"] = 18331,
		},
		[159142] = {
			["encounterName"] = "Blackhand",
			["encounterID"] = 1704,
			["npcID"] = 77325,
		},
		[320300] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[147557] = {
			["npcID"] = 72766,
		},
		[147880] = {
			["npcID"] = 72888,
		},
		[342500] = {
			["npcID"] = 170836,
		},
		[3368] = {
			["npcID"] = 46,
		},
		[177341] = {
			["npcID"] = 88729,
		},
		[344875] = {
			["npcID"] = 171317,
		},
		[76508] = {
			["npcID"] = 39982,
		},
		[329171] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[318255] = {
			["npcID"] = 163575,
		},
		[147881] = {
			["npcID"] = 72888,
		},
		[113141] = {
			["encounterName"] = "Darkmaster Gandling",
			["npcID"] = 59080,
		},
		[113136] = {
			["npcID"] = 59080,
		},
		[257436] = {
			["npcID"] = 126928,
		},
		[201123] = {
			["npcID"] = 99360,
		},
		[80604] = {
			["npcID"] = 51014,
		},
		[260508] = {
			["encounterName"] = "Soulbound Goliath",
			["encounterID"] = 2114,
			["npcID"] = 131667,
		},
		[342830] = {
			["npcID"] = 167724,
		},
		[328496] = {
			["npcID"] = 172115,
		},
		[173479] = {
			["npcID"] = 86690,
		},
		[348974] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[114872] = {
			["npcID"] = 59614,
		},
		[303924] = {
			["npcID"] = 155911,
		},
		[153002] = {
			["encounterName"] = "Vigilant Kaathar",
			["npcID"] = 75839,
			["encounterID"] = 1686,
		},
		[329170] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[326450] = {
			["npcID"] = 164562,
		},
		[327122] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168158,
			["encounterID"] = 2407,
		},
		[173480] = {
			["npcID"] = 83389,
		},
		[114874] = {
			["npcID"] = 59613,
		},
		[114062] = {
			["encounterName"] = "Jandice Barov",
			["npcID"] = 59184,
			["encounterID"] = 1427,
		},
		[156472] = {
			["npcID"] = 76496,
		},
		[265019] = {
			["npcID"] = 131436,
		},
		[111752] = {
			["npcID"] = 58823,
		},
		[130775] = {
			["npcID"] = 59120,
		},
		[361052] = {
			["npcID"] = 180722,
		},
		[111813] = {
			["npcID"] = 58822,
		},
		[353741] = {
			["npcID"] = 178958,
		},
		[22566] = {
			["npcID"] = 12157,
		},
		[114864] = {
			["npcID"] = 59614,
		},
		[322358] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[340788] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[61924] = {
			["encounterName"] = "Hodir",
			["encounterID"] = 1135,
			["npcID"] = 32950,
		},
		[221604] = {
			["npcID"] = 111164,
		},
		[355123] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[36840] = {
			["npcID"] = 20897,
		},
		[326455] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[111772] = {
			["npcID"] = 58757,
		},
		[22651] = {
			["encounterName"] = "Zevrim Thornhoof",
			["encounterID"] = 343,
			["npcID"] = 11490,
		},
		[357172] = {
			["npcID"] = 178575,
		},
		[59685] = {
			["npcID"] = 23956,
		},
		[36144] = {
			["encounterName"] = "Dalliah the Doomsayer",
			["npcID"] = 20885,
			["encounterID"] = 1913,
		},
		[115418] = {
			["npcID"] = 59801,
		},
		[316218] = {
			["npcID"] = 166457,
		},
		[184720] = {
			["npcID"] = 93295,
		},
		[189554] = {
			["npcID"] = 95636,
		},
		[153006] = {
			["encounterName"] = "Vigilant Kaathar",
			["npcID"] = 75839,
			["encounterID"] = 1686,
		},
		[227363] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114264,
		},
		[359222] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180158,
		},
		[188476] = {
			["npcID"] = 94995,
		},
		[37668] = {
			["npcID"] = 18312,
		},
		[37162] = {
			["encounterName"] = "Harbinger Skyriss",
			["npcID"] = 20912,
			["encounterID"] = 1914,
		},
		[200105] = {
			["npcID"] = 98368,
		},
		[184730] = {
			["npcID"] = 93303,
		},
		[184238] = {
			["npcID"] = 93858,
		},
		[261866] = {
			["npcID"] = 124022,
		},
		[186449] = {
			["npcID"] = 90284,
		},
		[284219] = {
			["npcID"] = 150297,
		},
		[272457] = {
			["encounterName"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["npcID"] = 131383,
		},
		[74976] = {
			["encounterName"] = "Forgemaster Throngus",
			["encounterID"] = 1050,
			["npcID"] = 40177,
		},
		[176043] = {
			["npcID"] = 86410,
		},
		[189547] = {
			["npcID"] = 95640,
		},
		[190735] = {
			["npcID"] = 94604,
		},
		[332605] = {
			["npcID"] = 170572,
		},
		[334653] = {
			["npcID"] = 165076,
		},
		[164597] = {
			["npcID"] = 75198,
		},
		[322367] = {
			["npcID"] = 165485,
		},
		[158128] = {
			["npcID"] = 91599,
		},
		[326463] = {
			["npcID"] = 164036,
		},
		[271174] = {
			["npcID"] = 137830,
		},
		[355132] = {
			["npcID"] = 178141,
		},
		[59331] = {
			["encounterName"] = "Skadi the Ruthless",
			["encounterID"] = 2029,
			["npcID"] = 26693,
		},
		[326464] = {
			["npcID"] = 164036,
		},
		[59362] = {
			["npcID"] = 29335,
		},
		[156600] = {
			["npcID"] = 72362,
		},
		[332608] = {
			["npcID"] = 170572,
		},
		[159015] = {
			["npcID"] = 81690,
		},
		[294349] = {
			["npcID"] = 144301,
		},
		[322370] = {
			["npcID"] = 157660,
		},
		[171044] = {
			["npcID"] = 88512,
		},
		[336451] = {
			["npcID"] = 173943,
		},
		[49348] = {
			["npcID"] = 27677,
		},
		[330562] = {
			["npcID"] = 164506,
		},
		[332610] = {
			["npcID"] = 156333,
		},
		[29492] = {
			["npcID"] = 114625,
		},
		[266201] = {
			["npcID"] = 133836,
		},
		[188474] = {
			["npcID"] = 94284,
		},
		[137427] = {
			["npcID"] = 170031,
		},
		[119922] = {
			["encounterName"] = "Trial of the King",
			["encounterID"] = 1442,
			["npcID"] = 61442,
		},
		[213420] = {
			["npcID"] = 106981,
		},
		[346657] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[332612] = {
			["npcID"] = 170572,
		},
		[91872] = {
			["encounterName"] = "Siamat",
			["encounterID"] = 1055,
			["npcID"] = 45259,
		},
		[170418] = {
			["npcID"] = 76295,
		},
		[346947] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[332613] = {
			["npcID"] = 170577,
		},
		[266209] = {
			["npcID"] = 134284,
		},
		[182705] = {
			["npcID"] = 92041,
		},
		[281420] = {
			["npcID"] = 129600,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[351044] = {
			["npcID"] = 177797,
		},
		[154356] = {
			["npcID"] = 76595,
		},
		[169714] = {
			["npcID"] = 81984,
		},
		[357188] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[351045] = {
			["npcID"] = 177797,
		},
		[205231] = {
			["npcID"] = 103673,
		},
		[320966] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[324425] = {
			["npcID"] = 170660,
		},
		[334664] = {
			["npcID"] = 171341,
		},
		[325361] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[150421] = {
			["npcID"] = 76465,
		},
		[332617] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[351047] = {
			["npcID"] = 178392,
		},
		[34934] = {
			["npcID"] = 18394,
		},
		[149943] = {
			["encounterName"] = "Executioner Gore",
			["npcID"] = 74518,
			["encounterID"] = 1670,
		},
		[324427] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[152417] = {
			["encounterName"] = "Subjugator Kor'ul",
			["npcID"] = 75396,
			["encounterID"] = 1669,
		},
		[150504] = {
			["npcID"] = 74353,
		},
		[373279] = {
			["npcID"] = 189988,
		},
		[357192] = {
			["npcID"] = 178576,
		},
		[156499] = {
			["npcID"] = 72362,
		},
		[181132] = {
			["encounterName"] = "Mannoroth",
			["npcID"] = 91259,
			["encounterID"] = 1795,
		},
		[104318] = {
			["npcID"] = 143622,
		},
		[161587] = {
			["npcID"] = 84955,
		},
		[241069] = {
			["npcID"] = 118950,
		},
		[303952] = {
			["npcID"] = 155910,
		},
		[330573] = {
			["npcID"] = 155251,
		},
		[172818] = {
			["npcID"] = 184074,
		},
		[266106] = {
			["npcID"] = 133835,
		},
		[41986] = {
			["npcID"] = 23398,
		},
		[330574] = {
			["npcID"] = 168136,
		},
		[278961] = {
			["npcID"] = 133870,
		},
		[87779] = {
			["npcID"] = 45935,
		},
		[320336] = {
			["npcID"] = 163126,
		},
		[346957] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175667,
			["encounterID"] = 2426,
		},
		[357196] = {
			["npcID"] = 180336,
		},
		[363965] = {
			["npcID"] = 183747,
		},
		[164280] = {
			["encounterName"] = "Operator Thogar",
			["encounterID"] = 1692,
			["npcID"] = 81612,
		},
		[159030] = {
			["npcID"] = 81691,
		},
		[357197] = {
			["npcID"] = 180336,
		},
		[59991] = {
			["encounterName"] = "Herald Volazj",
			["npcID"] = 30621,
			["encounterID"] = 1968,
		},
		[189532] = {
			["npcID"] = 95613,
		},
		[366858] = {
			["npcID"] = 183748,
		},
		[106877] = {
			["encounterName"] = "Sha of Violence",
			["npcID"] = 56719,
			["encounterID"] = 1305,
		},
		[59252] = {
			["npcID"] = 26694,
		},
		[171132] = {
			["npcID"] = 85718,
		},
		[149893] = {
			["encounterName"] = "Domina",
			["npcID"] = 74476,
			["encounterID"] = 1668,
		},
		[316244] = {
			["npcID"] = 169456,
		},
		[88959] = {
			["npcID"] = 45935,
		},
		[175960] = {
			["npcID"] = 86410,
		},
		[337761] = {
			["npcID"] = 163213,
		},
		[151732] = {
			["npcID"] = 75387,
		},
		[351057] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[331377] = {
			["npcID"] = 157683,
		},
		[341796] = {
			["npcID"] = 165066,
		},
		[182712] = {
			["npcID"] = 92039,
		},
		[147185] = {
			["npcID"] = 73191,
		},
		[328533] = {
			["npcID"] = 163862,
		},
		[3110] = {
			["npcID"] = 416,
		},
		[69051] = {
			["encounterName"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["npcID"] = 36502,
		},
		[272180] = {
			["npcID"] = 138187,
		},
		[69564] = {
			["npcID"] = 36620,
		},
		[151303] = {
			["encounterName"] = "Aku'mai",
			["npcID"] = 75155,
			["encounterID"] = 1672,
		},
		[357203] = {
			["npcID"] = 178056,
		},
		[342869] = {
			["npcID"] = 168934,
		},
		[339529] = {
			["npcID"] = 173448,
		},
		[274213] = {
			["encounterName"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["npcID"] = 131383,
		},
		[164092] = {
			["npcID"] = 80484,
		},
		[261552] = {
			["npcID"] = 132701,
		},
		[32888] = {
			["npcID"] = 18506,
		},
		[229622] = {
			["npcID"] = 115484,
		},
		[158141] = {
			["npcID"] = 78571,
		},
		[69633] = {
			["npcID"] = 36666,
		},
		[168380] = {
			["npcID"] = 84202,
		},
		[193977] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["npcID"] = 96756,
			["encounterID"] = 1822,
		},
		[125980] = {
			["encounterName"] = "Galakras",
			["npcID"] = 58771,
		},
		[339557] = {
			["npcID"] = 173464,
		},
		[198073] = {
			["encounterName"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["npcID"] = 98949,
		},
		[330586] = {
			["npcID"] = 169927,
		},
		[146763] = {
			["encounterName"] = "Galakras",
			["npcID"] = 72353,
			["encounterID"] = 1622,
		},
		[342873] = {
			["npcID"] = 167176,
		},
		[168381] = {
			["npcID"] = 84202,
		},
		[144832] = {
			["encounterName"] = "Sha of Pride",
			["encounterID"] = 1604,
			["npcID"] = 71734,
		},
		[365399] = {
			["npcID"] = 183748,
		},
		[347992] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[344922] = {
			["npcID"] = 168148,
		},
		[227616] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114319,
			["encounterID"] = 1961,
		},
		[74984] = {
			["encounterName"] = "Forgemaster Throngus",
			["encounterID"] = 1050,
			["npcID"] = 40177,
		},
		[342875] = {
			["npcID"] = 167827,
		},
		[76008] = {
			["encounterName"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["npcID"] = 40586,
		},
		[316859] = {
			["npcID"] = 170042,
		},
		[34637] = {
			["npcID"] = 19505,
		},
		[351067] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[328542] = {
			["npcID"] = 168390,
		},
		[346972] = {
			["npcID"] = 169605,
		},
		[324447] = {
			["npcID"] = 170660,
		},
		[334686] = {
			["npcID"] = 162096,
		},
		[168383] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83894,
			["encounterID"] = 1757,
		},
		[260894] = {
			["encounterName"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["npcID"] = 131318,
		},
		[268586] = {
			["encounterName"] = "King Dazar",
			["npcID"] = 136160,
			["encounterID"] = 2143,
		},
		[342878] = {
			["npcID"] = 171189,
		},
		[180670] = {
			["npcID"] = 90215,
		},
		[12248] = {
			["npcID"] = 17771,
		},
		[21390] = {
			["encounterName"] = "Lord Vyletongue",
			["encounterID"] = 424,
			["npcID"] = 12236,
		},
		[178317] = {
			["npcID"] = 92130,
		},
		[32863] = {
			["npcID"] = 17371,
		},
		[330593] = {
			["npcID"] = 168724,
		},
		[204895] = {
			["npcID"] = 102302,
		},
		[59254] = {
			["npcID"] = 28368,
		},
		[142667] = {
			["encounterName"] = "Paragons of the Klaxxi",
			["npcID"] = 71420,
			["encounterID"] = 1593,
		},
		[119524] = {
			["npcID"] = 61345,
		},
		[332642] = {
			["npcID"] = 170577,
		},
		[145547] = {
			["npcID"] = 72451,
		},
		[340622] = {
			["npcID"] = 173798,
		},
		[124085] = {
			["npcID"] = 63593,
		},
		[196516] = {
			["npcID"] = 100248,
		},
		[351073] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[293729] = {
			["npcID"] = 151605,
		},
		[260292] = {
			["encounterName"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["npcID"] = 131817,
		},
		[357217] = {
			["npcID"] = 180415,
		},
		[359265] = {
			["npcID"] = 185415,
		},
		[361313] = {
			["npcID"] = 182666,
		},
		[330597] = {
			["npcID"] = 172399,
		},
		[357218] = {
			["npcID"] = 176957,
		},
		[351075] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177154,
		},
		[86249] = {
			["npcID"] = 90211,
		},
		[346980] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[357219] = {
			["npcID"] = 176957,
		},
		[318312] = {
			["npcID"] = 167115,
		},
		[353124] = {
			["npcID"] = 178957,
		},
		[297835] = {
			["encounterName"] = "Gunker",
			["encounterID"] = 2292,
			["npcID"] = 150222,
		},
		[162244] = {
			["npcID"] = 79703,
		},
		[342886] = {
			["npcID"] = 167721,
		},
		[316855] = {
			["npcID"] = 165267,
		},
		[340758] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[349030] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[238592] = {
			["npcID"] = 127291,
		},
		[146556] = {
			["npcID"] = 72954,
		},
		[34170] = {
			["npcID"] = 18420,
		},
		[264603] = {
			["encounterName"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["npcID"] = 131318,
		},
		[59255] = {
			["npcID"] = 28368,
		},
		[344936] = {
			["npcID"] = 175704,
		},
		[339992] = {
			["npcID"] = 173609,
		},
		[332650] = {
			["npcID"] = 164886,
		},
		[341839] = {
			["npcID"] = 166144,
		},
		[359856] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[346985] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[154055] = {
			["encounterName"] = "High Sage Viryx",
			["npcID"] = 76292,
			["encounterID"] = 1701,
		},
		[34639] = {
			["npcID"] = 19509,
		},
		[229151] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["encounterID"] = 2017,
			["npcID"] = 114790,
		},
		[330604] = {
			["npcID"] = 168724,
		},
		[298894] = {
			["npcID"] = 151301,
		},
		[325590] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[285388] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 145185,
		},
		[169414] = {
			["npcID"] = 78670,
		},
		[357226] = {
			["npcID"] = 180429,
		},
		[155080] = {
			["encounterName"] = "Gruul",
			["encounterID"] = 1691,
			["npcID"] = 76877,
		},
		[328558] = {
			["npcID"] = 159027,
		},
		[70381] = {
			["encounterName"] = "Forgemaster Garfrost",
			["npcID"] = 36494,
			["encounterID"] = 1999,
		},
		[149955] = {
			["encounterName"] = "Executioner Gore",
			["npcID"] = 74518,
			["encounterID"] = 1670,
		},
		[167367] = {
			["npcID"] = 84872,
		},
		[328559] = {
			["npcID"] = 166677,
		},
		[227776] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114251,
		},
		[162248] = {
			["npcID"] = 88579,
		},
		[321019] = {
			["npcID"] = 162038,
		},
		[331634] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[61461] = {
			["npcID"] = 30286,
		},
		[256445] = {
			["npcID"] = 123647,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[341742] = {
			["npcID"] = 174336,
		},
		[265081] = {
			["npcID"] = 131436,
		},
		[332657] = {
			["npcID"] = 164587,
		},
		[342896] = {
			["npcID"] = 173687,
		},
		[149913] = {
			["encounterName"] = "Thruk",
			["npcID"] = 74505,
			["encounterID"] = 1675,
		},
		[355057] = {
			["npcID"] = 178139,
		},
		[44639] = {
			["npcID"] = 24696,
		},
		[342897] = {
			["npcID"] = 174130,
		},
		[169417] = {
			["npcID"] = 78670,
		},
		[202181] = {
			["npcID"] = 91006,
		},
		[357232] = {
			["npcID"] = 179108,
		},
		[342898] = {
			["npcID"] = 162123,
		},
		[294324] = {
			["npcID"] = 144293,
		},
		[265084] = {
			["npcID"] = 131492,
		},
		[341422] = {
			["npcID"] = 165472,
		},
		[351090] = {
			["npcID"] = 176574,
		},
		[150634] = {
			["encounterName"] = "Subjugator Kor'ul",
			["npcID"] = 74565,
			["encounterID"] = 1669,
		},
		[169418] = {
			["npcID"] = 84767,
		},
		[219588] = {
			["npcID"] = 110340,
		},
		[351091] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[360228] = {
			["npcID"] = 181946,
		},
		[330614] = {
			["npcID"] = 163086,
		},
		[365426] = {
			["npcID"] = 184413,
		},
		[368042] = {
			["npcID"] = 178508,
		},
		[320376] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[145288] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 71395,
			["encounterID"] = 1594,
		},
		[373618] = {
			["npcID"] = 190174,
		},
		[273845] = {
			["npcID"] = 148759,
		},
		[156109] = {
			["encounterName"] = "The Iron Maidens",
			["encounterID"] = 1695,
			["npcID"] = 77231,
		},
		[110968] = {
			["npcID"] = 58569,
		},
		[223685] = {
			["npcID"] = 112342,
		},
		[330452] = {
			["npcID"] = 158930,
		},
		[270003] = {
			["npcID"] = 133935,
		},
		[265089] = {
			["npcID"] = 131492,
		},
		[357238] = {
			["npcID"] = 180429,
		},
		[212423] = {
			["npcID"] = 99541,
		},
		[33643] = {
			["npcID"] = 18969,
		},
		[347000] = {
			["npcID"] = 172639,
		},
		[357239] = {
			["npcID"] = 180407,
		},
		[351096] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[192706] = {
			["npcID"] = 100248,
		},
		[205103] = {
			["npcID"] = 102400,
		},
		[165875] = {
			["npcID"] = 79702,
		},
		[270889] = {
			["npcID"] = 134331,
		},
		[336763] = {
			["npcID"] = 169780,
		},
		[322429] = {
			["npcID"] = 162057,
		},
		[70043] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[301952] = {
			["npcID"] = 155225,
		},
		[168398] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 84215,
		},
		[340623] = {
			["npcID"] = 173798,
		},
		[227783] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114260,
			["encounterID"] = 1957,
		},
		[105848] = {
			["encounterName"] = "Spine of Deathwing",
			["encounterID"] = 1291,
			["npcID"] = 56575,
		},
		[344956] = {
			["npcID"] = 162829,
		},
		[35096] = {
			["npcID"] = 19633,
		},
		[357243] = {
			["npcID"] = 180433,
		},
		[350803] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[373429] = {
			["npcID"] = 189878,
		},
		[228269] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[332671] = {
			["npcID"] = 170480,
		},
		[171807] = {
			["npcID"] = 81542,
		},
		[5137] = {
			["npcID"] = 11142,
		},
		[322433] = {
			["npcID"] = 162057,
		},
		[357245] = {
			["npcID"] = 176953,
		},
		[342911] = {
			["npcID"] = 162123,
		},
		[147815] = {
			["npcID"] = 73483,
		},
		[227365] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
			["encounterID"] = 1960,
		},
		[68988] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[342912] = {
			["npcID"] = 156867,
		},
		[59514] = {
			["npcID"] = 36990,
		},
		[161509] = {
			["npcID"] = 80699,
		},
		[324483] = {
			["npcID"] = 170660,
		},
		[257478] = {
			["npcID"] = 128551,
		},
		[361343] = {
			["npcID"] = 178963,
		},
		[296365] = {
			["npcID"] = 152612,
		},
		[360778] = {
			["npcID"] = 181111,
		},
		[12466] = {
			["encounterName"] = "Lord Overheat",
			["encounterID"] = 1145,
			["npcID"] = 46264,
		},
		[197070] = {
			["npcID"] = 104660,
		},
		[143280] = {
			["encounterName"] = "Paragons of the Klaxxi",
			["npcID"] = 71152,
			["encounterID"] = 1593,
		},
		[299457] = {
			["npcID"] = 152283,
		},
		[301177] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[320390] = {
			["npcID"] = 177140,
		},
		[300547] = {
			["npcID"] = 150142,
		},
		[260551] = {
			["encounterName"] = "Soulbound Goliath",
			["encounterID"] = 2114,
			["npcID"] = 131667,
		},
		[169382] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84550,
		},
		[164307] = {
			["npcID"] = 80295,
		},
		[111854] = {
			["npcID"] = 58633,
		},
		[340869] = {
			["npcID"] = 164477,
		},
		[128748] = {
			["npcID"] = 63128,
		},
		[169375] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84550,
		},
		[330631] = {
			["npcID"] = 180013,
		},
		[211406] = {
			["npcID"] = 104295,
		},
		[351109] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177787,
		},
		[196027] = {
			["npcID"] = 97171,
		},
		[334493] = {
			["npcID"] = 164862,
		},
		[228334] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[146688] = {
			["npcID"] = 72365,
		},
		[227529] = {
			["npcID"] = 114334,
		},
		[270482] = {
			["npcID"] = 135167,
		},
		[324490] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[59259] = {
			["npcID"] = 28579,
		},
		[319831] = {
			["npcID"] = 172390,
		},
		[239052] = {
			["npcID"] = 118705,
		},
		[182739] = {
			["npcID"] = 101900,
		},
		[341962] = {
			["npcID"] = 162109,
		},
		[164168] = {
			["npcID"] = 81212,
		},
		[300650] = {
			["npcID"] = 150169,
		},
		[340874] = {
			["npcID"] = 162657,
		},
		[300764] = {
			["npcID"] = 150165,
		},
		[227615] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[363400] = {
			["npcID"] = 178159,
		},
		[229711] = {
			["npcID"] = 115419,
		},
		[153315] = {
			["encounterName"] = "Ranjit",
			["npcID"] = 75964,
			["encounterID"] = 1698,
		},
		[41072] = {
			["npcID"] = 22945,
		},
		[169233] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84554,
		},
		[199389] = {
			["encounterName"] = "Dresaron",
			["encounterID"] = 1838,
			["npcID"] = 99200,
		},
		[269973] = {
			["npcID"] = 134174,
		},
		[293670] = {
			["npcID"] = 144299,
		},
		[111728] = {
			["encounterName"] = "Raigonn",
			["encounterID"] = 1419,
			["npcID"] = 56877,
		},
		[357259] = {
			["npcID"] = 180392,
		},
		[191946] = {
			["encounterName"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["npcID"] = 91784,
		},
		[40062] = {
			["npcID"] = 17414,
		},
		[355212] = {
			["npcID"] = 178630,
		},
		[357260] = {
			["npcID"] = 180431,
		},
		[351117] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177889,
		},
		[301667] = {
			["npcID"] = 150292,
		},
		[330640] = {
			["npcID"] = 169823,
		},
		[20801] = {
			["npcID"] = 12922,
		},
		[224721] = {
			["npcID"] = 90711,
		},
		[33919] = {
			["encounterName"] = "Tavarok",
			["encounterID"] = 1901,
			["npcID"] = 18343,
		},
		[355214] = {
			["npcID"] = 178630,
		},
		[178647] = {
			["npcID"] = 92130,
		},
		[351119] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177716,
			["encounterID"] = 2442,
		},
		[299460] = {
			["npcID"] = 150250,
		},
		[171852] = {
			["npcID"] = 86024,
		},
		[119365] = {
			["npcID"] = 61250,
		},
		[224722] = {
			["npcID"] = 112902,
		},
		[88308] = {
			["encounterName"] = "Altairus",
			["encounterID"] = 1041,
			["npcID"] = 43873,
		},
		[173791] = {
			["npcID"] = 82322,
		},
		[69167] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 36658,
			["encounterID"] = 2000,
		},
		[270923] = {
			["npcID"] = 137478,
		},
		[105845] = {
			["encounterName"] = "Spine of Deathwing",
			["encounterID"] = 1291,
			["npcID"] = 53890,
		},
		[161150] = {
			["npcID"] = 80936,
		},
		[229562] = {
			["npcID"] = 115406,
		},
		[15585] = {
			["npcID"] = 16594,
		},
		[116977] = {
			["encounterName"] = "The Stone Guard",
			["encounterID"] = 1395,
			["npcID"] = 60576,
		},
		[300525] = {
			["npcID"] = 150142,
		},
		[195031] = {
			["npcID"] = 97200,
		},
		[367505] = {
			["npcID"] = 181059,
		},
		[166335] = {
			["npcID"] = 82579,
		},
		[330646] = {
			["npcID"] = 169823,
		},
		[337995] = {
			["npcID"] = 170048,
		},
		[351124] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[162105] = {
			["npcID"] = 88509,
		},
		[29582] = {
			["npcID"] = 16409,
		},
		[357786] = {
			["npcID"] = 177718,
		},
		[249748] = {
			["npcID"] = 126889,
		},
		[76325] = {
			["npcID"] = 39708,
		},
		[214486] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[174555] = {
			["npcID"] = 82040,
		},
		[192985] = {
			["encounterName"] = "Wrath of Azshara",
			["encounterID"] = 1814,
			["npcID"] = 96028,
		},
		[201176] = {
			["npcID"] = 98792,
		},
		[205090] = {
			["npcID"] = 102398,
		},
		[283551] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[294884] = {
			["npcID"] = 152009,
		},
		[362899] = {
			["npcID"] = 181559,
		},
		[227508] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[329904] = {
			["npcID"] = 157118,
		},
		[348953] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[118903] = {
			["npcID"] = 61216,
		},
		[355224] = {
			["npcID"] = 151817,
		},
		[111600] = {
			["encounterName"] = "Raigonn",
			["npcID"] = 56930,
			["encounterID"] = 1419,
		},
		[334747] = {
			["npcID"] = 166302,
		},
		[344986] = {
			["npcID"] = 158314,
		},
		[355225] = {
			["npcID"] = 178142,
		},
		[75000] = {
			["encounterName"] = "Forgemaster Throngus",
			["encounterID"] = 1050,
			["npcID"] = 40177,
		},
		[334748] = {
			["npcID"] = 166302,
		},
		[176605] = {
			["npcID"] = 88178,
		},
		[355226] = {
			["npcID"] = 151817,
		},
		[340568] = {
			["npcID"] = 172800,
		},
		[157406] = {
			["npcID"] = 82196,
		},
		[110963] = {
			["npcID"] = 58569,
		},
		[39670] = {
			["npcID"] = 22853,
		},
		[63541] = {
			["npcID"] = 33722,
		},
		[250933] = {
			["npcID"] = 124448,
		},
		[40064] = {
			["npcID"] = 17414,
		},
		[355228] = {
			["npcID"] = 178631,
		},
		[195036] = {
			["npcID"] = 97200,
		},
		[200913] = {
			["npcID"] = 98792,
		},
		[189917] = {
			["npcID"] = 95632,
		},
		[338847] = {
			["npcID"] = 167525,
		},
		[34661] = {
			["encounterName"] = "Thorngrin the Tender",
			["npcID"] = 17978,
			["encounterID"] = 1928,
		},
		[41053] = {
			["npcID"] = 22880,
		},
		[186846] = {
			["npcID"] = 93813,
		},
		[338848] = {
			["npcID"] = 167525,
		},
		[195037] = {
			["npcID"] = 95861,
		},
		[326562] = {
			["npcID"] = 166721,
		},
		[167239] = {
			["npcID"] = 83028,
		},
		[227779] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[60030] = {
			["encounterName"] = "Jedoga Shadowseeker",
			["npcID"] = 29310,
			["encounterID"] = 1967,
		},
		[355732] = {
			["npcID"] = 179446,
		},
		[358131] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 180640,
		},
		[229706] = {
			["npcID"] = 115418,
		},
		[357280] = {
			["npcID"] = 180387,
		},
		[265722] = {
			["npcID"] = 183265,
		},
		[336803] = {
			["npcID"] = 165974,
		},
		[338851] = {
			["npcID"] = 167525,
		},
		[332708] = {
			["npcID"] = 167532,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["npcID"] = 40765,
		},
		[336804] = {
			["npcID"] = 166521,
		},
		[355234] = {
			["npcID"] = 178142,
		},
		[304537] = {
			["npcID"] = 152298,
		},
		[334757] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 169457,
		},
		[245592] = {
			["npcID"] = 122405,
		},
		[338853] = {
			["npcID"] = 167527,
		},
		[46191] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24558,
		},
		[367522] = {
			["npcID"] = 181059,
		},
		[170035] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84358,
			["encounterID"] = 1756,
		},
		[347045] = {
			["npcID"] = 176131,
		},
		[357284] = {
			["npcID"] = 180432,
		},
		[168666] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84358,
			["encounterID"] = 1756,
		},
		[41184] = {
			["npcID"] = 22846,
		},
		[338855] = {
			["npcID"] = 167527,
		},
		[15537] = {
			["npcID"] = 11657,
		},
		[257497] = {
			["npcID"] = 124460,
		},
		[176611] = {
			["npcID"] = 85924,
		},
		[338856] = {
			["npcID"] = 167527,
		},
		[195041] = {
			["npcID"] = 110896,
		},
		[126709] = {
			["npcID"] = 62293,
		},
		[336809] = {
			["npcID"] = 162873,
		},
		[338857] = {
			["npcID"] = 167527,
		},
		[195473] = {
			["npcID"] = 91786,
		},
		[297834] = {
			["encounterName"] = "Gunker",
			["encounterID"] = 2292,
			["npcID"] = 150222,
		},
		[336810] = {
			["npcID"] = 167947,
		},
		[169445] = {
			["npcID"] = 84767,
		},
		[81147] = {
			["npcID"] = 160602,
		},
		[36738] = {
			["npcID"] = 20875,
		},
		[345002] = {
			["npcID"] = 168977,
		},
		[248184] = {
			["npcID"] = 124947,
		},
		[147568] = {
			["npcID"] = 72763,
		},
		[62335] = {
			["encounterName"] = "Thorim",
			["npcID"] = 32886,
			["encounterID"] = 1141,
		},
		[285440] = {
			["encounterName"] = "Machinist's Garden",
			["encounterID"] = 2259,
			["npcID"] = 144248,
		},
		[194019] = {
			["npcID"] = 104615,
		},
		[332717] = {
			["npcID"] = 162614,
		},
		[187876] = {
			["npcID"] = 94802,
		},
		[345004] = {
			["npcID"] = 175347,
		},
		[209620] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105299,
		},
		[324527] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[64383] = {
			["encounterName"] = "Mimiron",
			["encounterID"] = 1138,
			["npcID"] = 33432,
		},
		[361387] = {
			["npcID"] = 182466,
		},
		[338862] = {
			["npcID"] = 158197,
		},
		[209378] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104275,
			["encounterID"] = 1869,
		},
		[55638] = {
			["encounterName"] = "Gothik the Harvester",
			["encounterID"] = 1109,
			["npcID"] = 16126,
		},
		[271287] = {
			["npcID"] = 141123,
		},
		[338863] = {
			["npcID"] = 167526,
		},
		[57984] = {
			["npcID"] = 61029,
		},
		[195787] = {
			["npcID"] = 99524,
		},
		[318121] = {
			["npcID"] = 165651,
		},
		[338864] = {
			["npcID"] = 167526,
		},
		[227809] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[269169] = {
			["npcID"] = 144958,
		},
		[362154] = {
			["npcID"] = 182879,
		},
		[338865] = {
			["npcID"] = 173191,
		},
		[227789] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[362333] = {
			["npcID"] = 182374,
		},
		[364833] = {
			["npcID"] = 181111,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["encounterID"] = 1688,
			["npcID"] = 75829,
		},
		[195046] = {
			["encounterName"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["npcID"] = 95861,
		},
		[56837] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26727,
		},
		[61568] = {
			["npcID"] = 30111,
		},
		[165354] = {
			["npcID"] = 82207,
		},
		[177641] = {
			["npcID"] = 88672,
		},
		[15586] = {
			["npcID"] = 10423,
		},
		[345011] = {
			["npcID"] = 173580,
		},
		[322486] = {
			["npcID"] = 164929,
		},
		[31554] = {
			["npcID"] = 17958,
		},
		[329104] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[259462] = {
			["npcID"] = 137763,
		},
		[330678] = {
			["npcID"] = 168862,
		},
		[199143] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 98970,
		},
		[195284] = {
			["npcID"] = 97173,
		},
		[178154] = {
			["encounterName"] = "Oshir",
			["encounterID"] = 1750,
			["npcID"] = 89011,
		},
		[169451] = {
			["npcID"] = 84775,
		},
		[334765] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[261600] = {
			["npcID"] = 132701,
		},
		[338868] = {
			["npcID"] = 167526,
		},
		[157165] = {
			["npcID"] = 77132,
		},
		[166380] = {
			["npcID"] = 82597,
		},
		[160680] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79548,
			["encounterID"] = 1732,
		},
		[76031] = {
			["encounterName"] = "Beauty",
			["npcID"] = 39700,
			["encounterID"] = 1037,
		},
		[338872] = {
			["npcID"] = 167526,
		},
		[119684] = {
			["encounterName"] = "Xin the Weaponmaster",
			["encounterID"] = 1441,
			["npcID"] = 61398,
		},
		[364643] = {
			["npcID"] = 181057,
		},
		[294290] = {
			["npcID"] = 144293,
		},
		[322491] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 164267,
		},
		[59152] = {
			["npcID"] = 30418,
		},
		[60227] = {
			["npcID"] = 23956,
		},
		[209617] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105301,
		},
		[202217] = {
			["encounterName"] = "Anub'esset",
			["encounterID"] = 1852,
			["npcID"] = 102246,
		},
		[62395] = {
			["encounterName"] = "Flame Leviathan",
			["npcID"] = 33139,
			["encounterID"] = 1132,
		},
		[374743] = {
			["npcID"] = 115488,
		},
		[304063] = {
			["npcID"] = 155909,
		},
		[165358] = {
			["npcID"] = 91919,
		},
		[262004] = {
			["npcID"] = 132701,
		},
		[230094] = {
			["npcID"] = 115765,
		},
		[41058] = {
			["npcID"] = 23369,
		},
		[265780] = {
			["npcID"] = 183265,
		},
		[193460] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["npcID"] = 96756,
			["encounterID"] = 1822,
		},
		[125825] = {
			["npcID"] = 61516,
		},
		[362617] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[227568] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114261,
			["encounterID"] = 1957,
		},
		[293827] = {
			["npcID"] = 144294,
		},
		[28099] = {
			["npcID"] = 16218,
		},
		[312257] = {
			["npcID"] = 157757,
		},
		[196916] = {
			["npcID"] = 98538,
		},
		[342797] = {
			["npcID"] = 167907,
		},
		[131178] = {
			["npcID"] = 66768,
		},
		[360538] = {
			["npcID"] = 182120,
		},
		[252629] = {
			["npcID"] = 122353,
		},
		[41084] = {
			["npcID"] = 23018,
		},
		[246697] = {
			["npcID"] = 124171,
		},
		[360643] = {
			["npcID"] = 182155,
		},
		[21188] = {
			["npcID"] = 14948,
		},
		[145907] = {
			["npcID"] = 72744,
		},
		[364617] = {
			["npcID"] = 181057,
		},
		[157170] = {
			["npcID"] = 77812,
		},
		[51587] = {
			["npcID"] = 28410,
		},
		[340412] = {
			["npcID"] = 157308,
		},
		[270505] = {
			["npcID"] = 137486,
		},
		[336834] = {
			["npcID"] = 166521,
		},
		[347073] = {
			["npcID"] = 177187,
		},
		[363999] = {
			["npcID"] = 183747,
		},
		[36741] = {
			["npcID"] = 20875,
		},
		[312262] = {
			["npcID"] = 157757,
		},
		[368662] = {
			["npcID"] = 180015,
		},
		[39794] = {
			["npcID"] = 22861,
		},
		[318406] = {
			["encounterName"] = "Gorechop",
			["encounterID"] = 2365,
			["npcID"] = 162317,
		},
		[336048] = {
			["npcID"] = 167704,
		},
		[196078] = {
			["encounterName"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["npcID"] = 98542,
		},
		[38533] = {
			["npcID"] = 21104,
		},
		[118525] = {
			["npcID"] = 59181,
		},
		[131575] = {
			["npcID"] = 66947,
		},
		[147879] = {
			["npcID"] = 72888,
		},
		[166387] = {
			["npcID"] = 82579,
		},
		[219254] = {
			["npcID"] = 109943,
		},
		[336838] = {
			["npcID"] = 164345,
		},
		[251031] = {
			["npcID"] = 127162,
		},
		[334792] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[32707] = {
			["npcID"] = 52791,
		},
		[164340] = {
			["npcID"] = 85122,
		},
		[157173] = {
			["npcID"] = 79507,
		},
		[158197] = {
			["npcID"] = 73686,
		},
		[351174] = {
			["npcID"] = 88224,
		},
		[361209] = {
			["npcID"] = 182466,
		},
		[330697] = {
			["npcID"] = 170690,
		},
		[308172] = {
			["npcID"] = 158177,
		},
		[326602] = {
			["npcID"] = 170767,
		},
		[197105] = {
			["npcID"] = 97171,
		},
		[338889] = {
			["npcID"] = 157509,
		},
		[258155] = {
			["npcID"] = 128285,
		},
		[76682] = {
			["npcID"] = 40017,
		},
		[328651] = {
			["npcID"] = 167493,
		},
		[330699] = {
			["npcID"] = 168402,
		},
		[82137] = {
			["npcID"] = 39665,
		},
		[360647] = {
			["npcID"] = 182155,
		},
		[51586] = {
			["npcID"] = 28410,
		},
		[272348] = {
			["npcID"] = 136613,
		},
		[299502] = {
			["npcID"] = 154152,
		},
		[368085] = {
			["npcID"] = 183722,
		},
		[320462] = {
			["npcID"] = 163128,
		},
		[343470] = {
			["npcID"] = 165919,
		},
		[227823] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[334797] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 169457,
		},
		[320463] = {
			["npcID"] = 160479,
		},
		[29576] = {
			["npcID"] = 16424,
		},
		[248232] = {
			["npcID"] = 122423,
		},
		[326607] = {
			["npcID"] = 167612,
		},
		[342939] = {
			["npcID"] = 169410,
		},
		[330703] = {
			["npcID"] = 174210,
		},
		[170487] = {
			["npcID"] = 167726,
		},
		[204275] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[320465] = {
			["npcID"] = 167078,
		},
		[314322] = {
			["npcID"] = 160867,
		},
		[362576] = {
			["npcID"] = 182728,
		},
		[164192] = {
			["npcID"] = 81236,
		},
		[366336] = {
			["npcID"] = 183927,
		},
		[367215] = {
			["npcID"] = 184395,
		},
		[360856] = {
			["npcID"] = 182392,
		},
		[359374] = {
			["npcID"] = 181028,
		},
		[251028] = {
			["npcID"] = 123130,
		},
		[344941] = {
			["npcID"] = 162845,
		},
		[279185] = {
			["npcID"] = 149935,
		},
		[328475] = {
			["npcID"] = 164737,
		},
		[173514] = {
			["npcID"] = 83389,
		},
		[130414] = {
			["npcID"] = 82260,
		},
		[337587] = {
			["npcID"] = 162880,
		},
		[36743] = {
			["npcID"] = 20875,
		},
		[193376] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[347090] = {
			["npcID"] = 178263,
		},
		[70513] = {
			["npcID"] = 37583,
		},
		[15587] = {
			["npcID"] = 10420,
		},
		[179091] = {
			["npcID"] = 88783,
		},
		[347091] = {
			["npcID"] = 176251,
		},
		[330565] = {
			["npcID"] = 164506,
		},
		[365067] = {
			["npcID"] = 182318,
		},
		[345044] = {
			["npcID"] = 170028,
		},
		[189944] = {
			["npcID"] = 95602,
		},
		[367108] = {
			["npcID"] = 184413,
		},
		[153544] = {
			["npcID"] = 76116,
		},
		[162750] = {
			["npcID"] = 85122,
		},
		[121601] = {
			["npcID"] = 61946,
		},
		[225732] = {
			["npcID"] = 98538,
		},
		[228852] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114262,
			["encounterID"] = 1960,
		},
		[347094] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[123649] = {
			["npcID"] = 61947,
		},
		[329635] = {
			["npcID"] = 158256,
		},
		[366288] = {
			["npcID"] = 184911,
		},
		[68872] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[347095] = {
			["npcID"] = 178263,
		},
		[154110] = {
			["encounterName"] = "Araknath",
			["npcID"] = 76141,
			["encounterID"] = 1699,
		},
		[293854] = {
			["npcID"] = 144294,
		},
		[304093] = {
			["npcID"] = 172207,
		},
		[44475] = {
			["npcID"] = 24683,
		},
		[166397] = {
			["npcID"] = 82590,
		},
		[326619] = {
			["npcID"] = 166873,
		},
		[328667] = {
			["npcID"] = 163126,
		},
		[272449] = {
			["npcID"] = 148914,
		},
		[308190] = {
			["npcID"] = 160922,
		},
		[251921] = {
			["npcID"] = 120354,
		},
		[336859] = {
			["npcID"] = 162873,
		},
		[330716] = {
			["npcID"] = 167998,
		},
		[158207] = {
			["npcID"] = 87698,
		},
		[300414] = {
			["npcID"] = 150143,
		},
		[320478] = {
			["npcID"] = 168107,
		},
		[365044] = {
			["npcID"] = 182318,
		},
		[362710] = {
			["npcID"] = 182804,
		},
		[46983] = {
			["npcID"] = 25040,
		},
		[76686] = {
			["npcID"] = 40019,
		},
		[63479] = {
			["encounterName"] = "The Assembly of Iron",
			["npcID"] = 32857,
			["encounterID"] = 1140,
		},
		[366566] = {
			["npcID"] = 184910,
		},
		[343005] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[52611] = {
			["encounterName"] = "Skarvold & Dalronn",
			["encounterID"] = 2024,
			["npcID"] = 24201,
		},
		[183707] = {
			["npcID"] = 92564,
		},
		[154113] = {
			["encounterName"] = "Araknath",
			["npcID"] = 76141,
			["encounterID"] = 1699,
		},
		[330676] = {
			["npcID"] = 168862,
		},
		[29925] = {
			["npcID"] = 16525,
		},
		[59389] = {
			["encounterName"] = "Prince Keleseth",
			["encounterID"] = 2026,
			["npcID"] = 23953,
		},
		[33417] = {
			["npcID"] = 18949,
		},
		[293861] = {
			["npcID"] = 151629,
		},
		[367502] = {
			["npcID"] = 181059,
		},
		[355294] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[323496] = {
			["npcID"] = 165872,
		},
		[34697] = {
			["encounterName"] = "Laj",
			["npcID"] = 17980,
			["encounterID"] = 1927,
		},
		[197117] = {
			["encounterName"] = "Helya",
			["encounterID"] = 1824,
			["npcID"] = 100188,
		},
		[80750] = {
			["encounterName"] = "Balnazzar",
			["encounterID"] = 478,
			["npcID"] = 10813,
		},
		[357343] = {
			["npcID"] = 180427,
		},
		[277481] = {
			["npcID"] = 154011,
		},
		[209404] = {
			["npcID"] = 104247,
		},
		[338914] = {
			["npcID"] = 177628,
		},
		[310969] = {
			["npcID"] = 159011,
		},
		[277482] = {
			["npcID"] = 146675,
		},
		[360076] = {
			["npcID"] = 181839,
		},
		[123652] = {
			["npcID"] = 61947,
		},
		[150020] = {
			["encounterName"] = "Twilight Lord Bathiel",
			["npcID"] = 74728,
			["encounterID"] = 1671,
		},
		[134058] = {
			["npcID"] = 124024,
		},
		[336868] = {
			["npcID"] = 162669,
		},
		[218620] = {
			["npcID"] = 91588,
		},
		[346766] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[102151] = {
			["encounterName"] = "Echo of Tyrande",
			["npcID"] = 54544,
			["encounterID"] = 1884,
		},
		[39049] = {
			["encounterName"] = "Aeonus",
			["encounterID"] = 1919,
			["npcID"] = 17881,
		},
		[355299] = {
			["npcID"] = 178661,
		},
		[373729] = {
			["npcID"] = 190128,
		},
		[32197] = {
			["npcID"] = 17371,
		},
		[357281] = {
			["npcID"] = 180432,
		},
		[218621] = {
			["npcID"] = 109587,
		},
		[47736] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26929,
		},
		[163332] = {
			["npcID"] = 84644,
		},
		[198442] = {
			["npcID"] = 165909,
		},
		[193502] = {
			["npcID"] = 98177,
		},
		[69577] = {
			["npcID"] = 36788,
		},
		[351206] = {
			["npcID"] = 176575,
		},
		[56938] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26928,
		},
		[218622] = {
			["npcID"] = 109586,
		},
		[338921] = {
			["npcID"] = 163186,
		},
		[15472] = {
			["npcID"] = 62441,
		},
		[164357] = {
			["encounterName"] = "Witherbark",
			["npcID"] = 81522,
			["encounterID"] = 1746,
		},
		[297966] = {
			["npcID"] = 153382,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74475,
			["encounterID"] = 1655,
		},
		[175620] = {
			["npcID"] = 87515,
		},
		[361447] = {
			["npcID"] = 182425,
		},
		[324589] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 166524,
		},
		[186883] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90432,
			["encounterID"] = 1778,
		},
		[163334] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80808,
		},
		[361448] = {
			["npcID"] = 182368,
		},
		[173573] = {
			["npcID"] = 79595,
		},
		[283634] = {
			["npcID"] = 150748,
		},
		[175621] = {
			["npcID"] = 87515,
		},
		[365155] = {
			["npcID"] = 183746,
		},
		[355306] = {
			["npcID"] = 179778,
		},
		[357354] = {
			["npcID"] = 180427,
		},
		[199514] = {
			["npcID"] = 97365,
		},
		[13860] = {
			["npcID"] = 82011,
		},
		[196587] = {
			["encounterName"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["npcID"] = 98542,
		},
		[221584] = {
			["npcID"] = 111170,
		},
		[333729] = {
			["npcID"] = 168949,
		},
		[328687] = {
			["npcID"] = 166079,
		},
		[175609] = {
			["npcID"] = 87515,
		},
		[357356] = {
			["npcID"] = 178369,
		},
		[239022] = {
			["npcID"] = 118717,
		},
		[361452] = {
			["npcID"] = 180722,
		},
		[101592] = {
			["npcID"] = 54432,
		},
		[340975] = {
			["npcID"] = 168490,
		},
		[192005] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 97260,
		},
		[341969] = {
			["npcID"] = 174210,
		},
		[368294] = {
			["npcID"] = 185752,
		},
		[339900] = {
			["npcID"] = 159153,
		},
		[163337] = {
			["npcID"] = 88643,
		},
		[59528] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 1985,
		},
		[365400] = {
			["npcID"] = 184413,
		},
		[239101] = {
			["npcID"] = 118719,
		},
		[101632] = {
			["npcID"] = 54320,
		},
		[324323] = {
			["npcID"] = 165919,
		},
		[40317] = {
			["npcID"] = 17729,
		},
		[352158] = {
			["npcID"] = 175727,
		},
		[354933] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[152953] = {
			["npcID"] = 76097,
		},
		[152265] = {
			["npcID"] = 80722,
		},
		[332788] = {
			["npcID"] = 165566,
		},
		[171873] = {
			["npcID"] = 85897,
		},
		[295929] = {
			["npcID"] = 154030,
		},
		[322550] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[38539] = {
			["encounterName"] = "Chrono Lord Deja",
			["encounterID"] = 1920,
			["npcID"] = 17879,
		},
		[339619] = {
			["npcID"] = 166679,
		},
		[345076] = {
			["npcID"] = 170037,
		},
		[338933] = {
			["npcID"] = 172401,
		},
		[16100] = {
			["encounterName"] = "Tinkerer Gizlock",
			["encounterID"] = 427,
			["npcID"] = 13601,
		},
		[269310] = {
			["encounterName"] = "Unbound Abomination",
			["encounterID"] = 2123,
			["npcID"] = 134419,
		},
		[345077] = {
			["npcID"] = 170044,
		},
		[56969] = {
			["npcID"] = 26735,
		},
		[357364] = {
			["npcID"] = 178294,
		},
		[149941] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74570,
			["encounterID"] = 1655,
		},
		[295932] = {
			["npcID"] = 175123,
		},
		[56934] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26731,
		},
		[199176] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["npcID"] = 40765,
		},
		[345079] = {
			["npcID"] = 170031,
		},
		[338936] = {
			["npcID"] = 172390,
		},
		[331418] = {
			["npcID"] = 170160,
		},
		[358773] = {
			["npcID"] = 179891,
		},
		[59529] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 1985,
		},
		[325552] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[60936] = {
			["encounterName"] = "Malygos",
			["npcID"] = 28859,
			["encounterID"] = 1094,
		},
		[189278] = {
			["npcID"] = 90498,
		},
		[176652] = {
			["npcID"] = 88178,
		},
		[196290] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 91792,
		},
		[322557] = {
			["npcID"] = 164920,
		},
		[363879] = {
			["npcID"] = 183747,
		},
		[357369] = {
			["npcID"] = 178294,
		},
		[338939] = {
			["npcID"] = 167055,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74475,
			["encounterID"] = 1655,
		},
		[351226] = {
			["npcID"] = 178071,
		},
		[62601] = {
			["encounterName"] = "Thorim",
			["npcID"] = 33196,
			["encounterID"] = 1141,
		},
		[158020] = {
			["npcID"] = 82415,
		},
		[357370] = {
			["npcID"] = 178294,
		},
		[46987] = {
			["npcID"] = 11949,
		},
		[336893] = {
			["npcID"] = 162873,
		},
		[329396] = {
			["npcID"] = 157579,
		},
		[320512] = {
			["npcID"] = 163892,
		},
		[167439] = {
			["npcID"] = 82310,
		},
		[295939] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[177678] = {
			["npcID"] = 77195,
		},
		[324608] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[343038] = {
			["npcID"] = 169041,
		},
		[10277] = {
			["npcID"] = 18970,
		},
		[183621] = {
			["npcID"] = 92122,
		},
		[324609] = {
			["npcID"] = 166396,
		},
		[203641] = {
			["encounterName"] = "Fel Lord Betrug",
			["encounterID"] = 1856,
			["npcID"] = 102446,
		},
		[260793] = {
			["encounterName"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["npcID"] = 131817,
		},
		[28353] = {
			["npcID"] = 16145,
		},
		[202740] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[15869] = {
			["npcID"] = 11679,
		},
		[295942] = {
			["npcID"] = 175123,
		},
		[328707] = {
			["npcID"] = 168992,
		},
		[21832] = {
			["encounterName"] = "Princess Theradras",
			["encounterID"] = 429,
			["npcID"] = 12201,
		},
		[200205] = {
			["npcID"] = 101462,
		},
		[22088] = {
			["npcID"] = 14948,
		},
		[330755] = {
			["npcID"] = 169859,
		},
		[212492] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[171537] = {
			["npcID"] = 84859,
		},
		[156179] = {
			["encounterName"] = "Oregorger the Devourer",
			["encounterID"] = 1696,
			["npcID"] = 77182,
		},
		[368155] = {
			["npcID"] = 185505,
		},
		[302979] = {
			["npcID"] = 151625,
		},
		[334852] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 169458,
		},
		[359282] = {
			["npcID"] = 185415,
		},
		[161299] = {
			["npcID"] = 84391,
		},
		[227851] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114312,
			["encounterID"] = 1961,
		},
		[196111] = {
			["npcID"] = 91793,
		},
		[279564] = {
			["npcID"] = 167154,
		},
		[360775] = {
			["npcID"] = 185511,
		},
		[112998] = {
			["npcID"] = 58803,
		},
		[277517] = {
			["npcID"] = 177862,
		},
		[185854] = {
			["npcID"] = 92792,
		},
		[320517] = {
			["npcID"] = 163894,
		},
		[211470] = {
			["encounterName"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["npcID"] = 104300,
		},
		[343046] = {
			["npcID"] = 169041,
		},
		[173762] = {
			["npcID"] = 155216,
		},
		[206351] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 104262,
		},
		[166420] = {
			["npcID"] = 81422,
		},
		[75539] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
			["encounterID"] = 1040,
		},
		[279567] = {
			["npcID"] = 167154,
		},
		[363525] = {
			["npcID"] = 183652,
		},
		[59019] = {
			["npcID"] = 29774,
		},
		[17353] = {
			["encounterName"] = "Willey Hopebreaker",
			["encounterID"] = 475,
			["npcID"] = 11054,
		},
		[197137] = {
			["npcID"] = 100216,
		},
		[363526] = {
			["npcID"] = 183947,
		},
		[11975] = {
			["npcID"] = 10390,
		},
		[224782] = {
			["npcID"] = 90709,
		},
		[112911] = {
			["npcID"] = 58810,
		},
		[209413] = {
			["npcID"] = 104270,
		},
		[260618] = {
			["npcID"] = 129005,
		},
		[331813] = {
			["npcID"] = 164388,
		},
		[331526] = {
			["npcID"] = 160956,
		},
		[338955] = {
			["npcID"] = 170847,
		},
		[338591] = {
			["npcID"] = 173066,
		},
		[218438] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109040,
		},
		[346770] = {
			["npcID"] = 172635,
		},
		[331108] = {
			["npcID"] = 160048,
		},
		[15230] = {
			["npcID"] = 17892,
		},
		[164887] = {
			["npcID"] = 81820,
		},
		[201226] = {
			["npcID"] = 100531,
		},
		[338957] = {
			["npcID"] = 164882,
		},
		[177856] = {
			["encounterName"] = "Flamebender Ka'graz",
			["encounterID"] = 1689,
			["npcID"] = 88902,
		},
		[302098] = {
			["npcID"] = 150190,
		},
		[336910] = {
			["npcID"] = 162872,
		},
		[347149] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[40078] = {
			["npcID"] = 22884,
		},
		[42382] = {
			["npcID"] = 17299,
		},
		[172567] = {
			["npcID"] = 81368,
		},
		[347150] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[267288] = {
			["npcID"] = 135671,
		},
		[343055] = {
			["npcID"] = 178988,
		},
		[29768] = {
			["npcID"] = 16485,
		},
		[144923] = {
			["encounterName"] = "Spoils of Pandaria",
			["npcID"] = 71380,
			["encounterID"] = 1594,
		},
		[357390] = {
			["npcID"] = 178055,
		},
		[343056] = {
			["npcID"] = 172025,
		},
		[197141] = {
			["npcID"] = 100216,
		},
		[81440] = {
			["npcID"] = 43391,
		},
		[172736] = {
			["npcID"] = 80983,
		},
		[343057] = {
			["npcID"] = 178988,
		},
		[176664] = {
			["npcID"] = 88178,
		},
		[347153] = {
			["npcID"] = 171849,
		},
		[211476] = {
			["npcID"] = 112955,
		},
		[343058] = {
			["npcID"] = 178988,
		},
		[358320] = {
			["npcID"] = 180162,
		},
		[166906] = {
			["npcID"] = 178645,
		},
		[291865] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[46184] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[352172] = {
			["npcID"] = 178050,
		},
		[169498] = {
			["npcID"] = 83819,
		},
		[211477] = {
			["encounterName"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["npcID"] = 104277,
		},
		[343060] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[147997] = {
			["npcID"] = 72898,
		},
		[361024] = {
			["npcID"] = 181007,
		},
		[40079] = {
			["npcID"] = 22884,
		},
		[363540] = {
			["npcID"] = 183947,
		},
		[64652] = {
			["npcID"] = 34133,
		},
		[312674] = {
			["npcID"] = 161388,
		},
		[357396] = {
			["npcID"] = 180070,
		},
		[343062] = {
			["npcID"] = 169042,
		},
		[147998] = {
			["npcID"] = 73173,
		},
		[355349] = {
			["npcID"] = 177646,
		},
		[200216] = {
			["npcID"] = 101462,
		},
		[75543] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
			["encounterID"] = 1040,
		},
		[160285] = {
			["npcID"] = 80690,
		},
		[183197] = {
			["npcID"] = 155221,
		},
		[64528] = {
			["encounterName"] = "Hodir",
			["encounterID"] = 1135,
			["npcID"] = 33331,
		},
		[46988] = {
			["npcID"] = 11949,
		},
		[316779] = {
			["npcID"] = 178043,
		},
		[347814] = {
			["npcID"] = 176396,
		},
		[199193] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 98970,
		},
		[33641] = {
			["npcID"] = 18966,
		},
		[323236] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[355352] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[106421] = {
			["npcID"] = 59741,
		},
		[272272] = {
			["npcID"] = 166728,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74475,
			["encounterID"] = 1655,
		},
		[157043] = {
			["npcID"] = 77130,
		},
		[150048] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74579,
			["encounterID"] = 1655,
		},
		[200218] = {
			["npcID"] = 101462,
		},
		[334716] = {
			["npcID"] = 162096,
		},
		[347163] = {
			["npcID"] = 170157,
		},
		[357402] = {
			["npcID"] = 180070,
		},
		[158599] = {
			["encounterName"] = "The Iron Maidens",
			["encounterID"] = 1695,
			["npcID"] = 77557,
		},
		[148001] = {
			["npcID"] = 73173,
		},
		[330782] = {
			["npcID"] = 157510,
		},
		[290438] = {
			["npcID"] = 144536,
		},
		[343069] = {
			["npcID"] = 178478,
		},
		[176670] = {
			["npcID"] = 88178,
		},
		[320861] = {
			["npcID"] = 169753,
		},
		[357404] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180399,
		},
		[359768] = {
			["npcID"] = 181360,
		},
		[148002] = {
			["npcID"] = 72897,
		},
		[330784] = {
			["npcID"] = 174197,
		},
		[365596] = {
			["npcID"] = 180917,
		},
		[324640] = {
			["npcID"] = 166551,
		},
		[218807] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109040,
		},
		[148003] = {
			["npcID"] = 72896,
		},
		[291878] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[343072] = {
			["npcID"] = 172025,
		},
		[213531] = {
			["encounterName"] = "Tichondrius",
			["encounterID"] = 1862,
			["npcID"] = 103685,
		},
		[330786] = {
			["npcID"] = 169861,
		},
		[321043] = {
			["npcID"] = 158867,
		},
		[193597] = {
			["encounterName"] = "Lady Hatecoil",
			["encounterID"] = 1811,
			["npcID"] = 91789,
		},
		[353312] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[255824] = {
			["npcID"] = 122971,
		},
		[86374] = {
			["npcID"] = 61252,
		},
		[61326] = {
			["npcID"] = 26735,
		},
		[328740] = {
			["npcID"] = 168992,
		},
		[110099] = {
			["npcID"] = 57109,
		},
		[267308] = {
			["encounterName"] = "The Council of Tribes",
			["npcID"] = 135472,
			["encounterID"] = 2140,
		},
		[334884] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 171577,
		},
		[328365] = {
			["npcID"] = 167493,
		},
		[298025] = {
			["npcID"] = 158160,
		},
		[319375] = {
			["npcID"] = 162481,
		},
		[196127] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 91790,
		},
		[341352] = {
			["npcID"] = 174092,
		},
		[123429] = {
			["npcID"] = 60195,
		},
		[216909] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 109082,
		},
		[359459] = {
			["npcID"] = 184060,
		},
		[64654] = {
			["npcID"] = 34135,
		},
		[177698] = {
			["npcID"] = 77256,
		},
		[152893] = {
			["npcID"] = 78933,
		},
		[353621] = {
			["npcID"] = 179133,
		},
		[32914] = {
			["npcID"] = 87425,
		},
		[165412] = {
			["npcID"] = 79681,
		},
		[150054] = {
			["npcID"] = 76465,
		},
		[160095] = {
			["npcID"] = 78193,
		},
		[288765] = {
			["npcID"] = 177637,
		},
		[330793] = {
			["npcID"] = 169859,
		},
		[254920] = {
			["npcID"] = 169206,
		},
		[343080] = {
			["npcID"] = 169042,
		},
		[345128] = {
			["npcID"] = 173637,
		},
		[358230] = {
			["npcID"] = 179854,
		},
		[323538] = {
			["encounterName"] = "High Adjudicator Aleez",
			["npcID"] = 165410,
			["encounterID"] = 2403,
		},
		[329711] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169196,
		},
		[322903] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 162099,
			["encounterID"] = 2363,
		},
		[79050] = {
			["encounterName"] = "High Priestess Azil",
			["npcID"] = 42333,
			["encounterID"] = 1057,
		},
		[30481] = {
			["npcID"] = 16704,
		},
		[365905] = {
			["npcID"] = 184860,
		},
		[271411] = {
			["npcID"] = 124024,
		},
		[165717] = {
			["npcID"] = 82002,
		},
		[275507] = {
			["npcID"] = 136614,
		},
		[367656] = {
			["npcID"] = 185037,
		},
		[295985] = {
			["npcID"] = 151331,
		},
		[76572] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39980,
			["encounterID"] = 1040,
		},
		[357418] = {
			["npcID"] = 178443,
		},
		[56860] = {
			["npcID"] = 26728,
		},
		[131627] = {
			["npcID"] = 66423,
		},
		[343083] = {
			["npcID"] = 166156,
		},
		[131968] = {
			["npcID"] = 67093,
		},
		[31942] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[221875] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[271371] = {
			["npcID"] = 156986,
		},
		[195108] = {
			["npcID"] = 91783,
		},
		[343086] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[359334] = {
			["npcID"] = 181028,
		},
		[36279] = {
			["npcID"] = 21148,
		},
		[324657] = {
			["npcID"] = 166551,
		},
		[163182] = {
			["npcID"] = 80719,
		},
		[21067] = {
			["npcID"] = 12216,
		},
		[165674] = {
			["npcID"] = 79585,
		},
		[195109] = {
			["npcID"] = 91783,
		},
		[269369] = {
			["encounterName"] = "King Dazar",
			["npcID"] = 136976,
			["encounterID"] = 2143,
		},
		[120160] = {
			["encounterName"] = "Trial of the King",
			["encounterID"] = 1442,
			["npcID"] = 61445,
		},
		[173384] = {
			["npcID"] = 83392,
		},
		[357423] = {
			["npcID"] = 178443,
		},
		[326707] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[295991] = {
			["npcID"] = 151331,
		},
		[188270] = {
			["npcID"] = 118756,
		},
		[300087] = {
			["npcID"] = 150251,
		},
		[334899] = {
			["npcID"] = 174802,
		},
		[328756] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[222755] = {
			["npcID"] = 98233,
		},
		[334720] = {
			["npcID"] = 162096,
		},
		[124946] = {
			["npcID"] = 50350,
		},
		[218954] = {
			["npcID"] = 172069,
		},
		[322614] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[68895] = {
			["npcID"] = 36551,
		},
		[33975] = {
			["encounterName"] = "Instructor Galford",
			["encounterID"] = 477,
			["npcID"] = 10811,
		},
		[162606] = {
			["npcID"] = 80423,
		},
		[247329] = {
			["npcID"] = 122835,
		},
		[199207] = {
			["npcID"] = 90711,
		},
		[16102] = {
			["npcID"] = 17395,
		},
		[32330] = {
			["npcID"] = 17732,
		},
		[48530] = {
			["npcID"] = 27162,
		},
		[326712] = {
			["npcID"] = 167956,
		},
		[351285] = {
			["npcID"] = 178006,
		},
		[173751] = {
			["npcID"] = 155216,
		},
		[355381] = {
			["npcID"] = 177646,
		},
		[357429] = {
			["npcID"] = 178824,
		},
		[56067] = {
			["npcID"] = 15981,
		},
		[226304] = {
			["npcID"] = 91000,
		},
		[331288] = {
			["npcID"] = 167532,
		},
		[324666] = {
			["npcID"] = 166551,
		},
		[341852] = {
			["npcID"] = 173832,
		},
		[172588] = {
			["npcID"] = 86372,
		},
		[320069] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164451,
		},
		[324667] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[54673] = {
			["npcID"] = 28387,
		},
		[121114] = {
			["npcID"] = 61929,
		},
		[62809] = {
			["npcID"] = 32897,
		},
		[358225] = {
			["npcID"] = 178732,
		},
		[343098] = {
			["npcID"] = 172635,
		},
		[70425] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 37575,
			["encounterID"] = 2000,
		},
		[125716] = {
			["npcID"] = 64358,
		},
		[275523] = {
			["npcID"] = 147751,
		},
		[167470] = {
			["npcID"] = 78553,
		},
		[176685] = {
			["npcID"] = 88404,
		},
		[78509] = {
			["npcID"] = 500,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["encounterID"] = 1869,
		},
		[102173] = {
			["encounterName"] = "Echo of Tyrande",
			["npcID"] = 54544,
			["encounterID"] = 1884,
		},
		[176821] = {
			["npcID"] = 83754,
		},
		[230951] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 115905,
		},
		[64145] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33966,
			["encounterID"] = 1143,
		},
		[98078] = {
			["npcID"] = 53014,
		},
		[336958] = {
			["npcID"] = 162853,
		},
		[339006] = {
			["npcID"] = 173238,
		},
		[357436] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180470,
		},
		[163376] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80808,
		},
		[63631] = {
			["encounterName"] = "Mimiron",
			["encounterID"] = 1138,
			["npcID"] = 33432,
		},
		[355389] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176703,
		},
		[169519] = {
			["npcID"] = 84402,
		},
		[17290] = {
			["npcID"] = 26727,
		},
		[193069] = {
			["npcID"] = 96587,
		},
		[339008] = {
			["npcID"] = 161704,
		},
		[320529] = {
			["npcID"] = 168886,
		},
		[155186] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76821,
		},
		[357439] = {
			["npcID"] = 178653,
		},
		[339009] = {
			["npcID"] = 161704,
		},
		[300102] = {
			["npcID"] = 152009,
		},
		[343105] = {
			["npcID"] = 170208,
		},
		[339274] = {
			["npcID"] = 173298,
		},
		[339010] = {
			["npcID"] = 173238,
		},
		[346807] = {
			["npcID"] = 175700,
		},
		[80158] = {
			["npcID"] = 42696,
		},
		[328772] = {
			["npcID"] = 159460,
		},
		[239145] = {
			["npcID"] = 118719,
		},
		[336888] = {
			["npcID"] = 168233,
		},
		[76578] = {
			["npcID"] = 40270,
		},
		[125212] = {
			["npcID"] = 50344,
		},
		[339012] = {
			["npcID"] = 183512,
		},
		[169020] = {
			["npcID"] = 84445,
		},
		[171570] = {
			["npcID"] = 84841,
		},
		[330822] = {
			["npcID"] = 169859,
		},
		[339013] = {
			["npcID"] = 183512,
		},
		[120093] = {
			["npcID"] = 61666,
		},
		[334918] = {
			["npcID"] = 162047,
		},
		[209454] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 105630,
		},
		[340026] = {
			["npcID"] = 171184,
		},
		[327262] = {
			["npcID"] = 167524,
		},
		[196144] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 91790,
		},
		[336967] = {
			["npcID"] = 168093,
		},
		[277060] = {
			["npcID"] = 154020,
		},
		[158830] = {
			["npcID"] = 85771,
		},
		[151094] = {
			["npcID"] = 75090,
		},
		[336947] = {
			["npcID"] = 162853,
		},
		[76579] = {
			["npcID"] = 40270,
		},
		[31664] = {
			["npcID"] = 27691,
		},
		[343112] = {
			["npcID"] = 166156,
		},
		[320576] = {
			["npcID"] = 168886,
		},
		[357987] = {
			["npcID"] = 178757,
		},
		[192050] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 91808,
		},
		[175668] = {
			["npcID"] = 87448,
		},
		[117960] = {
			["encounterName"] = "Elegon",
			["encounterID"] = 1500,
			["npcID"] = 60410,
		},
		[315076] = {
			["npcID"] = 164845,
		},
		[285232] = {
			["npcID"] = 150734,
		},
		[204337] = {
			["npcID"] = 102706,
		},
		[336971] = {
			["npcID"] = 168118,
		},
		[59169] = {
			["npcID"] = 30418,
		},
		[149975] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74571,
			["encounterID"] = 1655,
		},
		[353603] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[328781] = {
			["npcID"] = 159460,
		},
		[194099] = {
			["npcID"] = 97185,
		},
		[252704] = {
			["npcID"] = 124444,
		},
		[351307] = {
			["npcID"] = 176572,
		},
		[63489] = {
			["encounterName"] = "The Assembly of Iron",
			["encounterID"] = 1140,
			["npcID"] = 32927,
		},
		[63891] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33134,
			["encounterID"] = 1143,
		},
		[199219] = {
			["npcID"] = 91353,
		},
		[334926] = {
			["npcID"] = 168891,
		},
		[160312] = {
			["npcID"] = 77134,
		},
		[61909] = {
			["encounterName"] = "Hodir",
			["npcID"] = 32893,
			["encounterID"] = 1135,
		},
		[40598] = {
			["encounterName"] = "Illidan Stormrage",
			["npcID"] = 22917,
			["encounterID"] = 609,
		},
		[212530] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[15242] = {
			["npcID"] = 13096,
		},
		[157241] = {
			["npcID"] = 82220,
		},
		[99618] = {
			["npcID"] = 62577,
		},
		[162602] = {
			["npcID"] = 80423,
		},
		[153905] = {
			["npcID"] = 78932,
		},
		[296019] = {
			["npcID"] = 151128,
		},
		[357454] = {
			["npcID"] = 178653,
		},
		[334929] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[14887] = {
			["encounterName"] = "Lethtendris",
			["encounterID"] = 345,
			["npcID"] = 14327,
		},
		[206388] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[343121] = {
			["npcID"] = 169043,
		},
		[159290] = {
			["npcID"] = 76097,
		},
		[176696] = {
			["npcID"] = 85752,
		},
		[33325] = {
			["npcID"] = 18702,
		},
		[291928] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[317547] = {
			["npcID"] = 153581,
		},
		[328206] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[273891] = {
			["npcID"] = 169051,
		},
		[164819] = {
			["npcID"] = 81725,
		},
		[189227] = {
			["npcID"] = 95174,
		},
		[328789] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169062,
			["encounterID"] = 2405,
		},
		[298073] = {
			["npcID"] = 156241,
		},
		[338053] = {
			["npcID"] = 157405,
		},
		[344552] = {
			["npcID"] = 164905,
		},
		[148029] = {
			["npcID"] = 73223,
		},
		[31948] = {
			["encounterName"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["encounterID"] = 1941,
		},
		[329569] = {
			["npcID"] = 158160,
		},
		[320600] = {
			["npcID"] = 171100,
		},
		[88357] = {
			["encounterName"] = "Altairus",
			["encounterID"] = 1041,
			["npcID"] = 43873,
		},
		[202295] = {
			["npcID"] = 127188,
		},
		[154173] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76296,
			["encounterID"] = 1685,
		},
		[17294] = {
			["npcID"] = 11058,
		},
		[361556] = {
			["npcID"] = 181685,
		},
		[350202] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[326745] = {
			["npcID"] = 170016,
		},
		[200248] = {
			["npcID"] = 98280,
		},
		[225845] = {
			["npcID"] = 112973,
		},
		[347223] = {
			["npcID"] = 161846,
		},
		[195129] = {
			["npcID"] = 91782,
		},
		[155198] = {
			["encounterName"] = "Beastlord Darmac",
			["encounterID"] = 1694,
			["npcID"] = 76884,
		},
		[171580] = {
			["npcID"] = 85748,
		},
		[347224] = {
			["npcID"] = 161846,
		},
		[223689] = {
			["npcID"] = 102075,
		},
		[334324] = {
			["npcID"] = 171376,
		},
		[176512] = {
			["npcID"] = 83692,
		},
		[201139] = {
			["npcID"] = 98810,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["encounterID"] = 1679,
			["npcID"] = 75452,
		},
		[163390] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80808,
		},
		[328791] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[109348] = {
			["npcID"] = 57817,
		},
		[341084] = {
			["npcID"] = 169889,
		},
		[155200] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76829,
		},
		[225847] = {
			["npcID"] = 112973,
		},
		[76584] = {
			["npcID"] = 39990,
		},
		[316511] = {
			["npcID"] = 172786,
		},
		[343132] = {
			["npcID"] = 169042,
		},
		[205370] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[340519] = {
			["npcID"] = 161857,
		},
		[40088] = {
			["npcID"] = 22875,
		},
		[334942] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165067,
		},
		[328799] = {
			["npcID"] = 166935,
		},
		[173138] = {
			["npcID"] = 80700,
		},
		[341308] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165764,
		},
		[155201] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 88820,
		},
		[331069] = {
			["npcID"] = 179592,
		},
		[320596] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[166464] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 82682,
			["encounterID"] = 1751,
		},
		[225218] = {
			["npcID"] = 90709,
		},
		[320610] = {
			["npcID"] = 165909,
		},
		[202300] = {
			["encounterName"] = "Anub'esset",
			["encounterID"] = 1852,
			["npcID"] = 102271,
		},
		[59167] = {
			["npcID"] = 28826,
		},
		[196157] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99645,
		},
		[265540] = {
			["npcID"] = 130909,
		},
		[212031] = {
			["npcID"] = 105705,
		},
		[166465] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 82682,
			["encounterID"] = 1751,
		},
		[331811] = {
			["npcID"] = 165687,
		},
		[343138] = {
			["npcID"] = 173575,
		},
		[339042] = {
			["npcID"] = 170941,
		},
		[316517] = {
			["npcID"] = 159113,
		},
		[22478] = {
			["encounterName"] = "Zevrim Thornhoof",
			["encounterID"] = 343,
			["npcID"] = 11490,
		},
		[218148] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109038,
		},
		[228278] = {
			["npcID"] = 114633,
		},
		[79937] = {
			["npcID"] = 81998,
		},
		[160323] = {
			["npcID"] = 79205,
		},
		[336996] = {
			["npcID"] = 162744,
		},
		[145989] = {
			["npcID"] = 72658,
		},
		[291946] = {
			["encounterName"] = "K.U.-J.0.",
			["encounterID"] = 2258,
			["npcID"] = 144246,
		},
		[212541] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 107101,
			["encounterID"] = 1815,
		},
		[157049] = {
			["npcID"] = 77889,
		},
		[239162] = {
			["npcID"] = 118719,
		},
		[207422] = {
			["npcID"] = 110614,
		},
		[224632] = {
			["npcID"] = 112803,
		},
		[48280] = {
			["npcID"] = 153897,
		},
		[339046] = {
			["npcID"] = 169759,
		},
		[120100] = {
			["encounterName"] = "Trial of the King",
			["encounterID"] = 1442,
			["npcID"] = 61444,
		},
		[331065] = {
			["npcID"] = 159192,
		},
		[161533] = {
			["npcID"] = 84391,
		},
		[355429] = {
			["npcID"] = 178165,
		},
		[63527] = {
			["npcID"] = 33699,
		},
		[200256] = {
			["npcID"] = 101549,
		},
		[213567] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[177731] = {
			["encounterName"] = "Witherbark",
			["npcID"] = 88862,
			["encounterID"] = 1746,
		},
		[275568] = {
			["npcID"] = 160606,
		},
		[357479] = {
			["npcID"] = 178653,
		},
		[312428] = {
			["npcID"] = 160399,
		},
		[181827] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 91541,
			["encounterID"] = 1788,
		},
		[275569] = {
			["npcID"] = 160606,
		},
		[175684] = {
			["npcID"] = 86137,
		},
		[184381] = {
			["npcID"] = 159190,
		},
		[320358] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[260666] = {
			["npcID"] = 132126,
		},
		[121484] = {
			["npcID"] = 54131,
		},
		[194216] = {
			["encounterName"] = "Harbaron",
			["encounterID"] = 1823,
			["npcID"] = 96754,
		},
		[347242] = {
			["npcID"] = 175876,
		},
		[176810] = {
			["npcID"] = 84837,
		},
		[343147] = {
			["npcID"] = 169043,
		},
		[225855] = {
			["npcID"] = 112678,
		},
		[76588] = {
			["npcID"] = 39990,
		},
		[316527] = {
			["npcID"] = 158992,
		},
		[333975] = {
			["npcID"] = 164882,
		},
		[84037] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 40792,
		},
		[347244] = {
			["npcID"] = 175877,
		},
		[15982] = {
			["npcID"] = 13236,
		},
		[343149] = {
			["npcID"] = 173575,
		},
		[320823] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[361306] = {
			["npcID"] = 182152,
		},
		[75664] = {
			["encounterName"] = "Erudax",
			["encounterID"] = 1049,
			["npcID"] = 40484,
		},
		[171591] = {
			["npcID"] = 77140,
		},
		[268027] = {
			["npcID"] = 134144,
		},
		[338962] = {
			["npcID"] = 166499,
		},
		[290435] = {
			["npcID"] = 144536,
		},
		[21071] = {
			["npcID"] = 12206,
		},
		[193093] = {
			["encounterName"] = "King Deepbeard",
			["encounterID"] = 1812,
			["npcID"] = 91797,
		},
		[347247] = {
			["npcID"] = 175877,
		},
		[145995] = {
			["npcID"] = 72770,
		},
		[212547] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 107101,
			["encounterID"] = 1815,
		},
		[157355] = {
			["npcID"] = 85026,
		},
		[59800] = {
			["encounterName"] = "Ionar",
			["npcID"] = 28546,
			["encounterID"] = 1984,
		},
		[341105] = {
			["npcID"] = 164477,
		},
		[200261] = {
			["npcID"] = 98243,
		},
		[345201] = {
			["npcID"] = 170037,
		},
		[347249] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[79846] = {
			["npcID"] = 52791,
		},
		[332509] = {
			["npcID"] = 164555,
		},
		[164426] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["encounterID"] = 1749,
			["npcID"] = 81305,
		},
		[330868] = {
			["npcID"] = 160495,
		},
		[182856] = {
			["npcID"] = 109364,
		},
		[343155] = {
			["npcID"] = 173444,
		},
		[209477] = {
			["npcID"] = 105703,
		},
		[160184] = {
			["npcID"] = 75986,
		},
		[310392] = {
			["npcID"] = 159190,
		},
		[359538] = {
			["npcID"] = 184058,
		},
		[320631] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[173642] = {
			["npcID"] = 82974,
		},
		[64152] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33985,
			["encounterID"] = 1143,
		},
		[160332] = {
			["npcID"] = 79205,
		},
		[40091] = {
			["npcID"] = 22875,
		},
		[79850] = {
			["npcID"] = 82966,
		},
		[300155] = {
			["npcID"] = 164929,
		},
		[155213] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76829,
		},
		[170517] = {
			["npcID"] = 78479,
		},
		[57753] = {
			["npcID"] = 30681,
		},
		[345207] = {
			["npcID"] = 170031,
		},
		[343159] = {
			["npcID"] = 173444,
		},
		[353398] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 179010,
		},
		[85234] = {
			["npcID"] = 948,
		},
		[283775] = {
			["npcID"] = 150744,
		},
		[308026] = {
			["npcID"] = 171488,
		},
		[20716] = {
			["npcID"] = 26277,
		},
		[86830] = {
			["npcID"] = 43391,
		},
		[8873] = {
			["npcID"] = 14272,
		},
		[294015] = {
			["npcID"] = 151476,
		},
		[320637] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[330875] = {
			["npcID"] = 169893,
		},
		[300159] = {
			["npcID"] = 150276,
		},
		[334971] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165067,
		},
		[345210] = {
			["npcID"] = 170016,
		},
		[218871] = {
			["npcID"] = 152500,
		},
		[166478] = {
			["npcID"] = 82647,
		},
		[206219] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[9613] = {
			["npcID"] = 10390,
		},
		[355450] = {
			["npcID"] = 180598,
		},
		[38556] = {
			["npcID"] = 86664,
		},
		[100848] = {
			["npcID"] = 53364,
		},
		[156240] = {
			["encounterName"] = "Oregorger the Devourer",
			["encounterID"] = 1696,
			["npcID"] = 77182,
		},
		[359547] = {
			["npcID"] = 181943,
		},
		[64153] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33985,
			["encounterID"] = 1143,
		},
		[343165] = {
			["npcID"] = 169041,
		},
		[277637] = {
			["npcID"] = 145286,
		},
		[334967] = {
			["npcID"] = 171343,
		},
		[345202] = {
			["npcID"] = 170044,
		},
		[154415] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76177,
			["encounterID"] = 1685,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["npcID"] = 56732,
			["encounterID"] = 1416,
		},
		[265352] = {
			["npcID"] = 135052,
		},
		[291973] = {
			["encounterName"] = "K.U.-J.0.",
			["encounterID"] = 2258,
			["npcID"] = 144246,
		},
		[74634] = {
			["encounterName"] = "General Umbriss",
			["encounterID"] = 1051,
			["npcID"] = 39625,
		},
		[207980] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104274,
			["encounterID"] = 1869,
		},
		[295425] = {
			["npcID"] = 154039,
		},
		[227913] = {
			["npcID"] = 102788,
		},
		[69012] = {
			["encounterName"] = "Krick",
			["npcID"] = 36477,
			["encounterID"] = 2001,
		},
		[207228] = {
			["encounterName"] = "Chronomatic Anomaly",
			["encounterID"] = 1865,
			["npcID"] = 104676,
		},
		[227999] = {
			["npcID"] = 114542,
		},
		[162608] = {
			["npcID"] = 80485,
		},
		[210025] = {
			["npcID"] = 105956,
		},
		[320644] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[355456] = {
			["npcID"] = 178958,
		},
		[79965] = {
			["npcID"] = 84166,
		},
		[308527] = {
			["encounterName"] = "Ravnyr",
			["npcID"] = 156814,
			["encounterID"] = 2326,
		},
		[190115] = {
			["npcID"] = 93961,
		},
		[330884] = {
			["npcID"] = 168244,
		},
		[320614] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[338353] = {
			["npcID"] = 173016,
		},
		[209485] = {
			["npcID"] = 105704,
		},
		[9053] = {
			["npcID"] = 62577,
		},
		[38557] = {
			["npcID"] = 80886,
		},
		[196175] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 95947,
		},
		[44141] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24558,
		},
		[121174] = {
			["encounterName"] = "Gekkan",
			["npcID"] = 61392,
		},
		[169730] = {
			["npcID"] = 84877,
		},
		[194682] = {
			["npcID"] = 98963,
		},
		[169732] = {
			["npcID"] = 84877,
		},
		[185493] = {
			["npcID"] = 157016,
		},
		[300171] = {
			["npcID"] = 150276,
		},
		[195332] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 99233,
			["encounterID"] = 1816,
		},
		[213582] = {
			["npcID"] = 101900,
		},
		[126517] = {
			["npcID"] = 63696,
		},
		[341127] = {
			["npcID"] = 158259,
		},
		[213583] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[199250] = {
			["npcID"] = 98919,
		},
		[209489] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 106545,
		},
		[332937] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 170710,
		},
		[228941] = {
			["npcID"] = 115021,
		},
		[345224] = {
			["npcID"] = 170039,
		},
		[353417] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[357513] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180485,
		},
		[353418] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[345225] = {
			["npcID"] = 170033,
		},
		[347273] = {
			["npcID"] = 169041,
		},
		[357512] = {
			["npcID"] = 180495,
		},
		[163414] = {
			["npcID"] = 79930,
		},
		[345226] = {
			["npcID"] = 170045,
		},
		[265364] = {
			["npcID"] = 135052,
		},
		[341131] = {
			["npcID"] = 174194,
		},
		[334988] = {
			["npcID"] = 171596,
		},
		[201298] = {
			["npcID"] = 100532,
		},
		[326952] = {
			["npcID"] = 168058,
		},
		[300177] = {
			["npcID"] = 150276,
		},
		[102193] = {
			["encounterName"] = "Echo of Tyrande",
			["npcID"] = 54544,
			["encounterID"] = 1884,
		},
		[320655] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[21068] = {
			["npcID"] = 12217,
		},
		[341133] = {
			["npcID"] = 174090,
		},
		[59179] = {
			["npcID"] = 28965,
		},
		[112944] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 56717,
			["encounterID"] = 1413,
		},
		[162653] = {
			["npcID"] = 80423,
		},
		[357516] = {
			["npcID"] = 177137,
		},
		[196028] = {
			["npcID"] = 97171,
		},
		[320657] = {
			["npcID"] = 168266,
		},
		[265368] = {
			["npcID"] = 131587,
		},
		[256589] = {
			["encounterName"] = "Council o' Captains",
			["npcID"] = 126847,
			["encounterID"] = 2094,
		},
		[227420] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114266,
			["encounterID"] = 1957,
		},
		[160345] = {
			["npcID"] = 80530,
		},
		[251470] = {
			["npcID"] = 125824,
		},
		[34975] = {
			["npcID"] = 20201,
		},
		[204372] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[345232] = {
			["npcID"] = 168693,
		},
		[183378] = {
			["npcID"] = 97510,
		},
		[120112] = {
			["npcID"] = 61705,
		},
		[196255] = {
			["npcID"] = 91423,
		},
		[345233] = {
			["npcID"] = 168693,
		},
		[265371] = {
			["npcID"] = 131587,
		},
		[319916] = {
			["npcID"] = 161410,
		},
		[76634] = {
			["npcID"] = 40925,
		},
		[177599] = {
			["npcID"] = 88224,
		},
		[355473] = {
			["npcID"] = 179821,
		},
		[76370] = {
			["npcID"] = 39855,
		},
		[265372] = {
			["npcID"] = 131585,
		},
		[331044] = {
			["npcID"] = 159192,
		},
		[347283] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[15785] = {
			["npcID"] = 19306,
		},
		[70388] = {
			["encounterName"] = "Scourgelord Tyrannus",
			["npcID"] = 37728,
			["encounterID"] = 2000,
		},
		[345236] = {
			["npcID"] = 170157,
		},
		[322711] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[64156] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33985,
			["encounterID"] = 1143,
		},
		[85072] = {
			["npcID"] = 533,
		},
		[345237] = {
			["npcID"] = 165124,
		},
		[320999] = {
			["npcID"] = 164852,
		},
		[169094] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84358,
			["encounterID"] = 1756,
		},
		[265376] = {
			["npcID"] = 133663,
		},
		[328856] = {
			["npcID"] = 165549,
		},
		[115506] = {
			["npcID"] = 59705,
		},
		[300188] = {
			["npcID"] = 150253,
		},
		[167516] = {
			["npcID"] = 86809,
		},
		[345239] = {
			["npcID"] = 165124,
		},
		[265377] = {
			["npcID"] = 133663,
		},
		[227925] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 114526,
		},
		[224570] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112665,
		},
		[76685] = {
			["npcID"] = 39626,
		},
		[355479] = {
			["npcID"] = 179821,
		},
		[341145] = {
			["npcID"] = 174090,
		},
		[41374] = {
			["npcID"] = 23400,
		},
		[107120] = {
			["encounterName"] = "Commander Ri'mok",
			["npcID"] = 56636,
			["encounterID"] = 1406,
		},
		[177756] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76811,
		},
		[341146] = {
			["npcID"] = 174194,
		},
		[328860] = {
			["npcID"] = 165549,
		},
		[221783] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104154,
		},
		[74552] = {
			["npcID"] = 39890,
		},
		[357529] = {
			["npcID"] = 178653,
		},
		[74551] = {
			["npcID"] = 39870,
		},
		[323825] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165994,
		},
		[347291] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[333423] = {
			["npcID"] = 165175,
		},
		[171614] = {
			["npcID"] = 85922,
		},
		[209495] = {
			["npcID"] = 104270,
		},
		[224560] = {
			["npcID"] = 112803,
		},
		[64157] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33985,
			["encounterID"] = 1143,
		},
		[314658] = {
			["npcID"] = 161504,
		},
		[158532] = {
			["npcID"] = 89749,
		},
		[169567] = {
			["npcID"] = 85705,
		},
		[226717] = {
			["npcID"] = 113832,
		},
		[293613] = {
			["npcID"] = 149831,
		},
		[164448] = {
			["npcID"] = 80490,
		},
		[259732] = {
			["encounterName"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["npcID"] = 131383,
		},
		[350071] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177117,
		},
		[233048] = {
			["npcID"] = 118776,
		},
		[153521] = {
			["npcID"] = 79467,
		},
		[357659] = {
			["npcID"] = 178878,
		},
		[354011] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[187998] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 93968,
			["encounterID"] = 1788,
		},
		[157652] = {
			["npcID"] = 77694,
		},
		[322723] = {
			["npcID"] = 165591,
		},
		[153794] = {
			["encounterName"] = "Rukhran",
			["npcID"] = 76143,
			["encounterID"] = 1700,
		},
		[339706] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 173549,
		},
		[31516] = {
			["npcID"] = 16594,
		},
		[176797] = {
			["npcID"] = 83803,
		},
		[252503] = {
			["npcID"] = 127189,
		},
		[252722] = {
			["npcID"] = 122014,
		},
		[165474] = {
			["npcID"] = 79658,
		},
		[115509] = {
			["npcID"] = 59751,
		},
		[323166] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[358728] = {
			["npcID"] = 176940,
		},
		[328869] = {
			["npcID"] = 157122,
		},
		[241828] = {
			["npcID"] = 114804,
		},
		[63134] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33134,
			["encounterID"] = 1143,
		},
		[335013] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[365847] = {
			["npcID"] = 183229,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["npcID"] = 75786,
			["encounterID"] = 1652,
		},
		[337178] = {
			["npcID"] = 170838,
		},
		[359587] = {
			["npcID"] = 180052,
		},
		[260696] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131823,
		},
		[169571] = {
			["npcID"] = 84373,
		},
		[324776] = {
			["npcID"] = 166275,
		},
		[326824] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167999,
			["encounterID"] = 2407,
		},
		[172643] = {
			["encounterName"] = "Xeri'tac",
			["encounterID"] = 1752,
			["npcID"] = 84550,
		},
		[255577] = {
			["encounterName"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["npcID"] = 122967,
		},
		[263344] = {
			["npcID"] = 168111,
		},
		[161222] = {
			["npcID"] = 79909,
		},
		[171859] = {
			["npcID"] = 85897,
		},
		[335129] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[260697] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131825,
		},
		[163753] = {
			["npcID"] = 78832,
		},
		[326827] = {
			["npcID"] = 162040,
		},
		[35234] = {
			["npcID"] = 18137,
		},
		[260698] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131824,
		},
		[200289] = {
			["encounterName"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["npcID"] = 99192,
		},
		[255579] = {
			["encounterName"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["npcID"] = 122967,
		},
		[162407] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77803,
			["encounterID"] = 1715,
		},
		[300207] = {
			["npcID"] = 150253,
		},
		[294064] = {
			["npcID"] = 151658,
		},
		[114999] = {
			["encounterName"] = "Taran Zhu",
			["npcID"] = 56884,
			["encounterID"] = 1306,
		},
		[298160] = {
			["npcID"] = 153451,
		},
		[341163] = {
			["npcID"] = 171396,
		},
		[326829] = {
			["npcID"] = 167876,
		},
		[347414] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[169574] = {
			["npcID"] = 81721,
		},
		[154216] = {
			["npcID"] = 76094,
		},
		[326830] = {
			["npcID"] = 163316,
		},
		[86331] = {
			["encounterName"] = "Grand Vizier Ertan",
			["encounterID"] = 1043,
			["npcID"] = 43878,
		},
		[330926] = {
			["npcID"] = 172395,
		},
		[260699] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131824,
		},
		[200291] = {
			["npcID"] = 98691,
		},
		[166032] = {
			["npcID"] = 80775,
		},
		[322736] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[195172] = {
			["npcID"] = 91782,
		},
		[58053] = {
			["npcID"] = 30189,
		},
		[328880] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[141427] = {
			["npcID"] = 80103,
		},
		[126151] = {
			["npcID"] = 57330,
		},
		[295320] = {
			["npcID"] = 154033,
		},
		[21331] = {
			["npcID"] = 13142,
		},
		[339120] = {
			["npcID"] = 173240,
		},
		[260701] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131825,
		},
		[341143] = {
			["npcID"] = 164476,
		},
		[205361] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[198245] = {
			["encounterName"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["npcID"] = 98949,
		},
		[87356] = {
			["npcID"] = 52795,
		},
		[98995] = {
			["npcID"] = 52843,
		},
		[56775] = {
			["npcID"] = 26722,
		},
		[202341] = {
			["encounterName"] = "Anub'esset",
			["encounterID"] = 1852,
			["npcID"] = 102246,
		},
		[30930] = {
			["npcID"] = 115213,
		},
		[326836] = {
			["npcID"] = 162039,
		},
		[172649] = {
			["npcID"] = 81432,
		},
		[157291] = {
			["npcID"] = 75484,
		},
		[350469] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[326837] = {
			["npcID"] = 162040,
		},
		[345267] = {
			["npcID"] = 162937,
		},
		[106807] = {
			["encounterName"] = "Ook-Ook",
			["npcID"] = 56637,
			["encounterID"] = 1412,
		},
		[203366] = {
			["npcID"] = 112771,
		},
		[238648] = {
			["npcID"] = 121045,
		},
		[122799] = {
			["npcID"] = 62677,
		},
		[322743] = {
			["npcID"] = 167151,
		},
		[88032] = {
			["npcID"] = 45912,
		},
		[335030] = {
			["npcID"] = 156779,
		},
		[320696] = {
			["npcID"] = 163121,
		},
		[265407] = {
			["npcID"] = 131586,
		},
		[154221] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["npcID"] = 76260,
			["encounterID"] = 1678,
		},
		[351413] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[115002] = {
			["encounterName"] = "Taran Zhu",
			["npcID"] = 56884,
			["encounterID"] = 1306,
		},
		[322745] = {
			["npcID"] = 170206,
		},
		[292029] = {
			["npcID"] = 144568,
		},
		[148729] = {
			["npcID"] = 73021,
		},
		[357183] = {
			["npcID"] = 177938,
		},
		[339122] = {
			["npcID"] = 167525,
		},
		[203368] = {
			["npcID"] = 120341,
		},
		[343224] = {
			["npcID"] = 175830,
		},
		[156270] = {
			["npcID"] = 81315,
		},
		[64966] = {
			["npcID"] = 34184,
		},
		[189255] = {
			["npcID"] = 91921,
		},
		[367798] = {
			["npcID"] = 181249,
		},
		[332550] = {
			["npcID"] = 169875,
		},
		[331026] = {
			["npcID"] = 160185,
		},
		[329172] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[324417] = {
			["npcID"] = 162133,
		},
		[115003] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["encounterID"] = 1414,
			["npcID"] = 59479,
		},
		[330940] = {
			["npcID"] = 168244,
		},
		[116027] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 59464,
			["encounterID"] = 1413,
		},
		[302272] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[62625] = {
			["npcID"] = 33237,
		},
		[84799] = {
			["encounterName"] = "Lockmaw",
			["encounterID"] = 1054,
			["npcID"] = 45379,
		},
		[178797] = {
			["npcID"] = 82877,
		},
		[68950] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[304479] = {
			["npcID"] = 156015,
		},
		[336584] = {
			["npcID"] = 164476,
		},
		[318656] = {
			["npcID"] = 164029,
		},
		[326847] = {
			["npcID"] = 167876,
		},
		[328857] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[210537] = {
			["npcID"] = 159495,
		},
		[203371] = {
			["npcID"] = 102886,
		},
		[326848] = {
			["npcID"] = 163992,
		},
		[328885] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 168973,
		},
		[74561] = {
			["npcID"] = 39962,
		},
		[335119] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[350922] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 179269,
		},
		[59020] = {
			["npcID"] = 29774,
		},
		[206641] = {
			["encounterName"] = "Trilliax",
			["encounterID"] = 1867,
			["npcID"] = 104288,
		},
		[170608] = {
			["npcID"] = 73465,
		},
		[148442] = {
			["npcID"] = 80220,
		},
		[205420] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[297166] = {
			["npcID"] = 152875,
		},
		[228528] = {
			["npcID"] = 114783,
		},
		[326851] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[44196] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24674,
		},
		[322756] = {
			["npcID"] = 165137,
		},
		[44538] = {
			["npcID"] = 24698,
		},
		[302279] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150295,
		},
		[302274] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150295,
		},
		[363712] = {
			["npcID"] = 184010,
		},
		[63147] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33134,
			["encounterID"] = 1143,
		},
		[263961] = {
			["npcID"] = 131812,
		},
		[16496] = {
			["npcID"] = 32883,
		},
		[183956] = {
			["npcID"] = 90705,
		},
		[63138] = {
			["encounterName"] = "Yogg-Saron",
			["npcID"] = 33134,
			["encounterID"] = 1143,
		},
		[155921] = {
			["encounterName"] = "Operator Thogar",
			["encounterID"] = 1692,
			["npcID"] = 76906,
		},
		[181873] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 90316,
			["encounterID"] = 1788,
		},
		[322759] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[315802] = {
			["npcID"] = 168107,
		},
		[359688] = {
			["npcID"] = 181626,
		},
		[160372] = {
			["npcID"] = 76380,
		},
		[177778] = {
			["npcID"] = 86260,
		},
		[365831] = {
			["npcID"] = 182357,
		},
		[196208] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99704,
		},
		[68785] = {
			["encounterName"] = "Forgemaster Garfrost",
			["npcID"] = 36494,
			["encounterID"] = 1999,
		},
		[355525] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[76394] = {
			["npcID"] = 39854,
		},
		[335114] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[162753] = {
			["npcID"] = 85122,
		},
		[330953] = {
			["npcID"] = 161531,
		},
		[6358] = {
			["npcID"] = 1863,
		},
		[119875] = {
			["encounterName"] = "General Pa'valak",
			["npcID"] = 61485,
			["encounterID"] = 1447,
		},
		[64653] = {
			["npcID"] = 34134,
		},
		[304831] = {
			["npcID"] = 156142,
		},
		[333002] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[151159] = {
			["encounterName"] = "Subjugator Kor'ul",
			["npcID"] = 74565,
			["encounterID"] = 1669,
		},
		[320716] = {
			["npcID"] = 175815,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["npcID"] = 23954,
		},
		[355118] = {
			["npcID"] = 178133,
		},
		[339444] = {
			["npcID"] = 173276,
		},
		[69263] = {
			["encounterName"] = "Krick",
			["npcID"] = 36476,
			["encounterID"] = 2001,
		},
		[22907] = {
			["npcID"] = 16704,
		},
		[32369] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18430,
		},
		[162947] = {
			["npcID"] = 77430,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["npcID"] = 40765,
		},
		[343302] = {
			["npcID"] = 173446,
		},
		[195187] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 99233,
			["encounterID"] = 1816,
		},
		[163447] = {
			["encounterName"] = "Skylord Tovra",
			["npcID"] = 80005,
			["encounterID"] = 1736,
		},
		[328362] = {
			["npcID"] = 167834,
		},
		[330958] = {
			["npcID"] = 157510,
		},
		[265487] = {
			["npcID"] = 133912,
		},
		[121165] = {
			["encounterName"] = "Gekkan",
			["npcID"] = 61392,
		},
		[40102] = {
			["npcID"] = 22883,
		},
		[175762] = {
			["npcID"] = 87719,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104918,
			["encounterID"] = 1868,
		},
		[14443] = {
			["npcID"] = 62589,
		},
		[83780] = {
			["npcID"] = 44897,
		},
		[255597] = {
			["npcID"] = 126440,
		},
		[341199] = {
			["npcID"] = 174093,
		},
		[359629] = {
			["npcID"] = 181359,
		},
		[79467] = {
			["npcID"] = 39392,
		},
		[265433] = {
			["npcID"] = 133912,
		},
		[211571] = {
			["npcID"] = 90525,
		},
		[365825] = {
			["npcID"] = 182649,
		},
		[86340] = {
			["encounterName"] = "Grand Vizier Ertan",
			["encounterID"] = 1043,
			["npcID"] = 43878,
		},
		[306389] = {
			["npcID"] = 156825,
		},
		[155327] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76177,
			["encounterID"] = 1685,
		},
		[61562] = {
			["npcID"] = 30319,
		},
		[18651] = {
			["npcID"] = 87518,
		},
		[337107] = {
			["npcID"] = 168693,
		},
		[154235] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76296,
			["encounterID"] = 1685,
		},
		[335059] = {
			["npcID"] = 171696,
		},
		[213620] = {
			["npcID"] = 105623,
		},
		[30932] = {
			["npcID"] = 17670,
		},
		[166522] = {
			["npcID"] = 85275,
		},
		[199915] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99651,
			["encounterID"] = 1850,
		},
		[339717] = {
			["npcID"] = 159496,
		},
		[12470] = {
			["npcID"] = 32340,
		},
		[357586] = {
			["npcID"] = 178653,
		},
		[348117] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[218763] = {
			["npcID"] = 94189,
		},
		[160402] = {
			["npcID"] = 76382,
		},
		[174936] = {
			["npcID"] = 81634,
		},
		[294107] = {
			["npcID"] = 151684,
		},
		[337110] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[355540] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[170619] = {
			["npcID"] = 73465,
		},
		[320729] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[115010] = {
			["encounterName"] = "Taran Zhu",
			["npcID"] = 59804,
			["encounterID"] = 1306,
		},
		[330968] = {
			["npcID"] = 174842,
		},
		[8364] = {
			["npcID"] = 10390,
		},
		[371965] = {
			["npcID"] = 185828,
		},
		[341200] = {
			["npcID"] = 174100,
		},
		[355542] = {
			["npcID"] = 177243,
		},
		[341208] = {
			["npcID"] = 166317,
		},
		[169725] = {
			["npcID"] = 84906,
		},
		[34984] = {
			["npcID"] = 21128,
		},
		[330970] = {
			["npcID"] = 177437,
		},
		[260741] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131825,
		},
		[322818] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[258672] = {
			["npcID"] = 126918,
		},
		[322780] = {
			["npcID"] = 156560,
		},
		[340375] = {
			["npcID"] = 168148,
		},
		[174735] = {
			["npcID"] = 86282,
		},
		[320208] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[90950] = {
			["encounterName"] = "Drahga Shadowburner",
			["encounterID"] = 1048,
			["npcID"] = 40320,
		},
		[112084] = {
			["encounterName"] = "Lorewalker Stonestep",
			["npcID"] = 58826,
			["encounterID"] = 1417,
		},
		[154423] = {
			["npcID"] = 75071,
		},
		[287970] = {
			["npcID"] = 144564,
		},
		[265445] = {
			["npcID"] = 161527,
		},
		[271588] = {
			["npcID"] = 147236,
		},
		[330969] = {
			["npcID"] = 177437,
		},
		[213625] = {
			["npcID"] = 106984,
		},
		[217986] = {
			["npcID"] = 109331,
		},
		[154532] = {
			["npcID"] = 76442,
		},
		[294115] = {
			["npcID"] = 151684,
		},
		[115652] = {
			["npcID"] = 59519,
		},
		[89415] = {
			["npcID"] = 57783,
		},
		[146050] = {
			["npcID"] = 72784,
		},
		[171647] = {
			["npcID"] = 84860,
		},
		[120416] = {
			["npcID"] = 61302,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 104293,
			["encounterID"] = 1818,
		},
		[224205] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112638,
		},
		[150324] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74570,
			["encounterID"] = 1655,
		},
		[85710] = {
			["npcID"] = 76436,
		},
		[339168] = {
			["npcID"] = 166393,
		},
		[318243] = {
			["npcID"] = 170803,
		},
		[228985] = {
			["npcID"] = 115115,
		},
		[341786] = {
			["npcID"] = 167528,
		},
		[357926] = {
			["npcID"] = 177336,
		},
		[322943] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[98994] = {
			["npcID"] = 52904,
		},
		[176768] = {
			["npcID"] = 83790,
		},
		[202365] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["encounterID"] = 1822,
			["npcID"] = 114712,
		},
		[44271] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[15232] = {
			["npcID"] = 17694,
		},
		[172673] = {
			["npcID"] = 110628,
		},
		[65133] = {
			["encounterName"] = "Hodir",
			["encounterID"] = 1135,
			["npcID"] = 32950,
		},
		[308455] = {
			["encounterName"] = "Tunk",
			["npcID"] = 157300,
			["encounterID"] = 2325,
		},
		[336453] = {
			["npcID"] = 173136,
		},
		[345315] = {
			["npcID"] = 162849,
		},
		[227736] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114312,
			["encounterID"] = 1961,
		},
		[68939] = {
			["encounterName"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["npcID"] = 36502,
		},
		[351459] = {
			["npcID"] = 176573,
		},
		[358835] = {
			["npcID"] = 177444,
		},
		[183088] = {
			["npcID"] = 113998,
		},
		[159949] = {
			["npcID"] = 77653,
		},
		[39849] = {
			["encounterName"] = "Illidan Stormrage",
			["npcID"] = 22917,
			["encounterID"] = 609,
		},
		[193152] = {
			["encounterName"] = "King Deepbeard",
			["encounterID"] = 1812,
			["npcID"] = 91797,
		},
		[44200] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24674,
		},
		[105799] = {
			["encounterName"] = "Madness of Deathwing",
			["encounterID"] = 1299,
			["npcID"] = 56102,
		},
		[144005] = {
			["encounterName"] = "Kor'kron Dark Shaman",
			["npcID"] = 71858,
			["encounterID"] = 1606,
		},
		[172675] = {
			["npcID"] = 167301,
		},
		[162633] = {
			["npcID"] = 80423,
		},
		[323059] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164804,
		},
		[176351] = {
			["npcID"] = 88224,
		},
		[225917] = {
			["npcID"] = 98677,
		},
		[93513] = {
			["npcID"] = 50057,
		},
		[227965] = {
			["npcID"] = 114544,
		},
		[253562] = {
			["npcID"] = 122972,
		},
		[156294] = {
			["npcID"] = 81315,
		},
		[308077] = {
			["npcID"] = 157956,
		},
		[177564] = {
			["npcID"] = 177586,
		},
		[359668] = {
			["npcID"] = 180051,
		},
		[345321] = {
			["npcID"] = 162849,
		},
		[82760] = {
			["npcID"] = 44982,
		},
		[227966] = {
			["npcID"] = 114544,
		},
		[328940] = {
			["npcID"] = 170923,
		},
		[197250] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[339179] = {
			["npcID"] = 166393,
		},
		[337131] = {
			["npcID"] = 162872,
		},
		[183081] = {
			["npcID"] = 165793,
		},
		[135818] = {
			["npcID"] = 68485,
		},
		[76620] = {
			["npcID"] = 39909,
		},
		[349419] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[228991] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114675,
		},
		[197251] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[165511] = {
			["npcID"] = 82017,
		},
		[7896] = {
			["npcID"] = 27540,
		},
		[330500] = {
			["npcID"] = 155251,
		},
		[273653] = {
			["npcID"] = 139269,
		},
		[202439] = {
			["npcID"] = 102231,
		},
		[147650] = {
			["npcID"] = 172069,
		},
		[367851] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[172679] = {
			["npcID"] = 80685,
		},
		[211401] = {
			["npcID"] = 104295,
		},
		[288548] = {
			["npcID"] = 170495,
		},
		[336418] = {
			["npcID"] = 175857,
		},
		[57047] = {
			["npcID"] = 26737,
		},
		[322802] = {
			["npcID"] = 161971,
		},
		[217583] = {
			["npcID"] = 111621,
		},
		[163957] = {
			["npcID"] = 80721,
		},
		[268028] = {
			["npcID"] = 134144,
		},
		[185857] = {
			["npcID"] = 170908,
		},
		[339260] = {
			["npcID"] = 158259,
		},
		[175752] = {
			["npcID"] = 87719,
		},
		[44202] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24674,
		},
		[160387] = {
			["npcID"] = 77197,
		},
		[170633] = {
			["npcID"] = 84872,
		},
		[264694] = {
			["encounterName"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["npcID"] = 131863,
		},
		[343276] = {
			["npcID"] = 173178,
		},
		[82765] = {
			["npcID"] = 44982,
		},
		[126283] = {
			["npcID"] = 63240,
		},
		[192135] = {
			["encounterName"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["npcID"] = 97264,
		},
		[15253] = {
			["npcID"] = 18429,
		},
		[345397] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[62415] = {
			["npcID"] = 32882,
		},
		[245377] = {
			["npcID"] = 119395,
		},
		[353540] = {
			["npcID"] = 179152,
		},
		[355571] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[357619] = {
			["npcID"] = 177443,
		},
		[298212] = {
			["encounterName"] = "Gunker",
			["npcID"] = 150222,
			["encounterID"] = 2292,
		},
		[191595] = {
			["npcID"] = 96587,
		},
		[121673] = {
			["npcID"] = 62350,
		},
		[357620] = {
			["npcID"] = 177443,
		},
		[40875] = {
			["npcID"] = 23330,
		},
		[156301] = {
			["npcID"] = 80935,
		},
		[11829] = {
			["npcID"] = 62577,
		},
		[81530] = {
			["npcID"] = 43537,
		},
		[343287] = {
			["npcID"] = 173633,
		},
		[153994] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76177,
			["encounterID"] = 1685,
		},
		[46150] = {
			["npcID"] = 24696,
		},
		[154254] = {
			["npcID"] = 75482,
		},
		[59305] = {
			["encounterName"] = "King Ymiron",
			["encounterID"] = 2028,
			["npcID"] = 26861,
		},
		[296190] = {
			["npcID"] = 152517,
		},
		[359028] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[267522] = {
			["encounterName"] = "Council o' Captains",
			["npcID"] = 126845,
			["encounterID"] = 2094,
		},
		[192138] = {
			["encounterName"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["npcID"] = 97269,
		},
		[355914] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[169613] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[227463] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114320,
		},
		[61353] = {
			["npcID"] = 29476,
		},
		[335680] = {
			["npcID"] = 165992,
		},
		[355577] = {
			["npcID"] = 178171,
		},
		[107852] = {
			["npcID"] = 57159,
		},
		[326909] = {
			["npcID"] = 163992,
		},
		[46164] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24664,
		},
		[322814] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[357626] = {
			["npcID"] = 177443,
		},
		[155280] = {
			["encounterName"] = "Beastlord Darmac",
			["encounterID"] = 1694,
			["npcID"] = 76946,
		},
		[76729] = {
			["npcID"] = 41073,
		},
		[63913] = {
			["npcID"] = 33819,
		},
		[166543] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 82721,
			["encounterID"] = 1732,
		},
		[109379] = {
			["encounterName"] = "Spine of Deathwing",
			["encounterID"] = 1291,
			["npcID"] = 53891,
		},
		[193164] = {
			["npcID"] = 96657,
		},
		[328016] = {
			["npcID"] = 168578,
		},
		[295291] = {
			["npcID"] = 154033,
		},
		[40876] = {
			["npcID"] = 23330,
		},
		[322232] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 164267,
		},
		[165520] = {
			["npcID"] = 82260,
		},
		[20824] = {
			["npcID"] = 7379,
		},
		[350564] = {
			["npcID"] = 177114,
		},
		[252476] = {
			["npcID"] = 121250,
		},
		[153234] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["npcID"] = 75927,
			["encounterID"] = 1678,
		},
		[170640] = {
			["npcID"] = 90428,
		},
		[188046] = {
			["npcID"] = 198489,
		},
		[320771] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[214667] = {
			["npcID"] = 108141,
		},
		[357631] = {
			["npcID"] = 177982,
		},
		[154228] = {
			["npcID"] = 75482,
		},
		[320772] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[355584] = {
			["npcID"] = 178171,
		},
		[325036] = {
			["npcID"] = 178467,
		},
		[23381] = {
			["npcID"] = 46252,
		},
		[303430] = {
			["npcID"] = 151627,
		},
		[157331] = {
			["npcID"] = 77942,
		},
		[300296] = {
			["npcID"] = 150143,
		},
		[224907] = {
			["npcID"] = 93719,
		},
		[271628] = {
			["npcID"] = 176434,
		},
		[228567] = {
			["npcID"] = 114794,
		},
		[267533] = {
			["encounterName"] = "Council o' Captains",
			["npcID"] = 126845,
			["encounterID"] = 2094,
		},
		[335047] = {
			["npcID"] = 166721,
		},
		[322767] = {
			["npcID"] = 164921,
		},
		[148929] = {
			["npcID"] = 75835,
		},
		[63551] = {
			["encounterName"] = "Elder Ironbranch",
			["npcID"] = 33528,
			["encounterID"] = 1165,
		},
		[224908] = {
			["npcID"] = 93719,
		},
		[250505] = {
			["npcID"] = 179440,
		},
		[218765] = {
			["npcID"] = 91967,
		},
		[201959] = {
			["npcID"] = 102295,
		},
		[40877] = {
			["npcID"] = 23330,
		},
		[163921] = {
			["npcID"] = 88691,
		},
		[363780] = {
			["npcID"] = 184043,
		},
		[152427] = {
			["npcID"] = 75211,
		},
		[50092] = {
			["npcID"] = 27791,
		},
		[264931] = {
			["encounterName"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["npcID"] = 131863,
		},
		[109391] = {
			["npcID"] = 57875,
		},
		[227981] = {
			["npcID"] = 116550,
		},
		[80195] = {
			["npcID"] = 42692,
		},
		[152183] = {
			["npcID"] = 75406,
		},
		[338157] = {
			["npcID"] = 165047,
		},
		[357639] = {
			["npcID"] = 177443,
		},
		[159382] = {
			["encounterName"] = "Rukhran",
			["npcID"] = 76143,
			["encounterID"] = 1700,
		},
		[225052] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112603,
		},
		[361189] = {
			["npcID"] = 182152,
		},
		[113999] = {
			["encounterName"] = "Rattlegore",
			["npcID"] = 59153,
			["encounterID"] = 1428,
		},
		[196242] = {
			["npcID"] = 99649,
		},
		[131972] = {
			["npcID"] = 67093,
		},
		[18649] = {
			["npcID"] = 11454,
		},
		[357641] = {
			["npcID"] = 177982,
		},
		[175765] = {
			["npcID"] = 87719,
		},
		[196206] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99704,
		},
		[202108] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 90998,
		},
		[178837] = {
			["npcID"] = 79510,
		},
		[358770] = {
			["npcID"] = 176880,
		},
		[210150] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[347404] = {
			["npcID"] = 165992,
		},
		[349087] = {
			["npcID"] = 176705,
		},
		[347679] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[295231] = {
			["npcID"] = 144574,
		},
		[334051] = {
			["npcID"] = 168942,
		},
		[316689] = {
			["npcID"] = 162682,
		},
		[188053] = {
			["npcID"] = 94806,
		},
		[35913] = {
			["npcID"] = 90429,
		},
		[317792] = {
			["npcID"] = 163366,
		},
		[20825] = {
			["npcID"] = 9547,
		},
		[294165] = {
			["npcID"] = 165860,
		},
		[40248] = {
			["npcID"] = 17670,
		},
		[319711] = {
			["npcID"] = 159612,
		},
		[227985] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114328,
		},
		[162672] = {
			["npcID"] = 80534,
		},
		[320787] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[339217] = {
			["npcID"] = 173360,
		},
		[322171] = {
			["npcID"] = 172596,
		},
		[35759] = {
			["encounterName"] = "Wrath-Scryer Soccothrates",
			["npcID"] = 20886,
			["encounterID"] = 1915,
		},
		[320788] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[341176] = {
			["npcID"] = 166317,
		},
		[323057] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[342317] = {
			["npcID"] = 173669,
		},
		[328980] = {
			["npcID"] = 157464,
		},
		[181912] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 90316,
			["encounterID"] = 1788,
		},
		[37551] = {
			["npcID"] = 16704,
		},
		[260703] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131823,
		},
		[340707] = {
			["npcID"] = 162708,
		},
		[102573] = {
			["encounterName"] = "Gu Cloudstrike",
			["npcID"] = 56754,
			["encounterID"] = 1303,
		},
		[227987] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114328,
		},
		[102227] = {
			["npcID"] = 54642,
		},
		[205462] = {
			["npcID"] = 175922,
		},
		[335019] = {
			["npcID"] = 156434,
		},
		[357550] = {
			["npcID"] = 176940,
		},
		[294171] = {
			["npcID"] = 168107,
		},
		[170825] = {
			["npcID"] = 72647,
		},
		[339222] = {
			["npcID"] = 158259,
		},
		[357542] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180484,
		},
		[260700] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131823,
		},
		[202328] = {
			["encounterName"] = "Fel Lord Betrug",
			["encounterID"] = 1856,
			["npcID"] = 102446,
		},
		[339223] = {
			["npcID"] = 158259,
		},
		[232084] = {
			["npcID"] = 116549,
		},
		[183962] = {
			["encounterName"] = "Archimonde",
			["encounterID"] = 1799,
			["npcID"] = 92769,
		},
		[144031] = {
			["npcID"] = 85942,
		},
		[363797] = {
			["npcID"] = 184043,
		},
		[363686] = {
			["npcID"] = 179043,
		},
		[196249] = {
			["npcID"] = 99649,
		},
		[328986] = {
			["npcID"] = 169159,
		},
		[150448] = {
			["npcID"] = 76465,
		},
		[164452] = {
			["npcID"] = 80490,
		},
		[330919] = {
			["npcID"] = 169912,
		},
		[176796] = {
			["npcID"] = 83803,
		},
		[339226] = {
			["npcID"] = 158259,
		},
		[341274] = {
			["npcID"] = 166120,
		},
		[359704] = {
			["npcID"] = 181626,
		},
		[17195] = {
			["npcID"] = 30416,
		},
		[330816] = {
			["npcID"] = 169861,
		},
		[75096] = {
			["npcID"] = 40270,
		},
		[169346] = {
			["npcID"] = 83713,
		},
		[271652] = {
			["npcID"] = 176434,
		},
		[314655] = {
			["npcID"] = 161504,
		},
		[63149] = {
			["encounterName"] = "Freya",
			["npcID"] = 33354,
			["encounterID"] = 1133,
		},
		[271401] = {
			["npcID"] = 161456,
		},
		[339768] = {
			["npcID"] = 158891,
		},
		[23102] = {
			["npcID"] = 62379,
		},
		[365850] = {
			["npcID"] = 181652,
		},
		[149947] = {
			["npcID"] = 80530,
		},
		[164446] = {
			["npcID"] = 80490,
		},
		[265511] = {
			["npcID"] = 135169,
		},
		[69516] = {
			["npcID"] = 36892,
		},
		[294180] = {
			["npcID"] = 151773,
		},
		[172703] = {
			["npcID"] = 83763,
		},
		[355613] = {
			["npcID"] = 178958,
		},
		[360949] = {
			["npcID"] = 184268,
		},
		[345238] = {
			["npcID"] = 165124,
		},
		[329903] = {
			["npcID"] = 157099,
		},
		[232153] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114328,
		},
		[204226] = {
			["npcID"] = 101883,
		},
		[160274] = {
			["npcID"] = 79466,
		},
		[172704] = {
			["npcID"] = 80698,
		},
		[190110] = {
			["npcID"] = 93961,
		},
		[355072] = {
			["npcID"] = 178628,
		},
		[221312] = {
			["npcID"] = 111184,
		},
		[320804] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164561,
			["encounterID"] = 2394,
		},
		[355477] = {
			["npcID"] = 179842,
		},
		[219803] = {
			["npcID"] = 110378,
		},
		[147108] = {
			["npcID"] = 74374,
		},
		[320805] = {
			["npcID"] = 172054,
		},
		[30937] = {
			["npcID"] = 17653,
		},
		[176727] = {
			["npcID"] = 83812,
		},
		[75610] = {
			["npcID"] = 39679,
		},
		[330553] = {
			["npcID"] = 161531,
		},
		[331045] = {
			["npcID"] = 159192,
		},
		[204028] = {
			["npcID"] = 102337,
		},
		[335141] = {
			["npcID"] = 165824,
		},
		[358699] = {
			["npcID"] = 180417,
		},
		[157348] = {
			["npcID"] = 77936,
		},
		[292139] = {
			["npcID"] = 150754,
		},
		[49309] = {
			["npcID"] = 32340,
		},
		[172816] = {
			["npcID"] = 110628,
		},
		[351353] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[195232] = {
			["npcID"] = 97170,
		},
		[335143] = {
			["npcID"] = 165222,
		},
		[353573] = {
			["npcID"] = 179133,
		},
		[331048] = {
			["npcID"] = 170932,
		},
		[292141] = {
			["npcID"] = 150755,
		},
		[355464] = {
			["npcID"] = 178165,
		},
		[258634] = {
			["npcID"] = 154129,
		},
		[326794] = {
			["npcID"] = 167876,
		},
		[227917] = {
			["npcID"] = 114526,
		},
		[204448] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[357508] = {
			["npcID"] = 180495,
		},
		[168894] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 84386,
			["encounterID"] = 1751,
		},
		[166565] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79548,
			["encounterID"] = 1732,
		},
		[167589] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79548,
			["encounterID"] = 1732,
		},
		[209568] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105301,
		},
		[265523] = {
			["npcID"] = 133912,
		},
		[159124] = {
			["npcID"] = 82165,
		},
		[73564] = {
			["encounterName"] = "Siamat",
			["encounterID"] = 1055,
			["npcID"] = 44819,
		},
		[97156] = {
			["npcID"] = 53413,
		},
		[290097] = {
			["npcID"] = 144570,
		},
		[324909] = {
			["npcID"] = 164926,
		},
		[208545] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104534,
		},
		[102472] = {
			["encounterName"] = "Echo of Tyrande",
			["npcID"] = 54544,
			["encounterID"] = 1884,
		},
		[224378] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112655,
		},
		[3436] = {
			["npcID"] = 604,
		},
		[317643] = {
			["npcID"] = 163255,
		},
		[213665] = {
			["npcID"] = 106982,
		},
		[222880] = {
			["npcID"] = 111889,
		},
		[174758] = {
			["npcID"] = 86282,
		},
		[294195] = {
			["npcID"] = 151649,
		},
		[343104] = {
			["npcID"] = 170208,
		},
		[330457] = {
			["npcID"] = 165830,
		},
		[250096] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[356886] = {
			["npcID"] = 180331,
		},
		[148138] = {
			["npcID"] = 73095,
		},
		[340130] = {
			["npcID"] = 162114,
		},
		[201863] = {
			["encounterName"] = "Anub'esset",
			["encounterID"] = 1852,
			["npcID"] = 102246,
		},
		[169012] = {
			["npcID"] = 84446,
		},
		[357497] = {
			["npcID"] = 179070,
		},
		[213576] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[324914] = {
			["npcID"] = 166299,
		},
		[158150] = {
			["npcID"] = 86732,
		},
		[126346] = {
			["npcID"] = 75752,
		},
		[151697] = {
			["npcID"] = 75426,
		},
		[265337] = {
			["npcID"] = 135048,
		},
		[267981] = {
			["npcID"] = 134139,
		},
		[355438] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[60848] = {
			["npcID"] = 30414,
		},
		[365871] = {
			["npcID"] = 184604,
		},
		[318773] = {
			["npcID"] = 167834,
		},
		[230050] = {
			["npcID"] = 115765,
		},
		[173737] = {
			["npcID"] = 84417,
		},
		[225858] = {
			["npcID"] = 112678,
		},
		[341104] = {
			["npcID"] = 164477,
		},
		[320822] = {
			["npcID"] = 165222,
		},
		[290106] = {
			["npcID"] = 150728,
		},
		[12058] = {
			["npcID"] = 11838,
		},
		[32363] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18344,
		},
		[172714] = {
			["npcID"] = 80696,
		},
		[39347] = {
			["npcID"] = 19507,
		},
		[201983] = {
			["npcID"] = 113537,
		},
		[252475] = {
			["npcID"] = 121250,
		},
		[353588] = {
			["npcID"] = 179133,
		},
		[64944] = {
			["npcID"] = 34197,
		},
		[357684] = {
			["npcID"] = 178855,
		},
		[251170] = {
			["npcID"] = 121548,
		},
		[320825] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164568,
			["encounterID"] = 2394,
		},
		[355637] = {
			["npcID"] = 179840,
		},
		[158381] = {
			["npcID"] = 73261,
		},
		[359733] = {
			["npcID"] = 182272,
		},
		[194442] = {
			["npcID"] = 99188,
		},
		[202408] = {
			["npcID"] = 114712,
		},
		[329425] = {
			["npcID"] = 171488,
		},
		[359734] = {
			["npcID"] = 185755,
		},
		[331481] = {
			["npcID"] = 167948,
		},
		[331066] = {
			["npcID"] = 164391,
		},
		[324923] = {
			["npcID"] = 164926,
		},
		[302398] = {
			["npcID"] = 83687,
		},
		[164261] = {
			["npcID"] = 75835,
		},
		[355640] = {
			["npcID"] = 179840,
		},
		[329917] = {
			["npcID"] = 168578,
		},
		[302399] = {
			["npcID"] = 83687,
		},
		[44503] = {
			["npcID"] = 24690,
		},
		[355641] = {
			["npcID"] = 179841,
		},
		[349498] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[59083] = {
			["npcID"] = 26554,
		},
		[168622] = {
			["npcID"] = 84155,
		},
		[355642] = {
			["npcID"] = 179841,
		},
		[187052] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 93881,
			["encounterID"] = 1778,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["npcID"] = 29306,
			["encounterID"] = 1981,
		},
		[221864] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105299,
		},
		[157360] = {
			["npcID"] = 75484,
		},
		[293986] = {
			["npcID"] = 151476,
		},
		[159408] = {
			["encounterName"] = "Blast Furnace",
			["encounterID"] = 1690,
			["npcID"] = 76821,
		},
		[355418] = {
			["npcID"] = 178527,
		},
		[300129] = {
			["npcID"] = 152009,
		},
		[211439] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 111022,
		},
		[321633] = {
			["npcID"] = 168266,
		},
		[88010] = {
			["npcID"] = 85133,
		},
		[173307] = {
			["npcID"] = 83390,
		},
		[110125] = {
			["npcID"] = 57109,
		},
		[175791] = {
			["npcID"] = 81252,
		},
		[356207] = {
			["npcID"] = 177372,
		},
		[355646] = {
			["npcID"] = 178191,
		},
		[260773] = {
			["encounterName"] = "Heartsbane Triad",
			["encounterID"] = 2113,
			["npcID"] = 131824,
		},
		[317284] = {
			["npcID"] = 162880,
		},
		[174124] = {
			["npcID"] = 85128,
		},
		[323640] = {
			["npcID"] = 168192,
		},
		[174768] = {
			["npcID"] = 81747,
		},
		[359743] = {
			["npcID"] = 182357,
		},
		[56862] = {
			["npcID"] = 30419,
		},
		[166605] = {
			["npcID"] = 83449,
		},
		[228280] = {
			["npcID"] = 114629,
		},
		[329825] = {
			["npcID"] = 160393,
		},
		[302166] = {
			["npcID"] = 150190,
		},
		[330611] = {
			["npcID"] = 155795,
		},
		[174769] = {
			["npcID"] = 81747,
		},
		[358236] = {
			["npcID"] = 178856,
		},
		[320838] = {
			["npcID"] = 160356,
		},
		[153268] = {
			["npcID"] = 77700,
		},
		[228011] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114522,
		},
		[31707] = {
			["npcID"] = 78116,
		},
		[205486] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[202290] = {
			["npcID"] = 126941,
		},
		[171894] = {
			["npcID"] = 80984,
		},
		[359747] = {
			["npcID"] = 181453,
		},
		[182333] = {
			["npcID"] = 88087,
		},
		[224510] = {
			["npcID"] = 112671,
		},
		[324079] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[163379] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80875,
		},
		[345414] = {
			["npcID"] = 162114,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["encounterID"] = 1682,
			["npcID"] = 76407,
		},
		[29583] = {
			["npcID"] = 114625,
		},
		[262145] = {
			["npcID"] = 175670,
		},
		[347151] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[197168] = {
			["npcID"] = 104693,
		},
		[328773] = {
			["npcID"] = 159460,
		},
		[157742] = {
			["npcID"] = 73261,
		},
		[17501] = {
			["npcID"] = 11199,
		},
		[336964] = {
			["npcID"] = 168515,
		},
		[199345] = {
			["encounterName"] = "Dresaron",
			["encounterID"] = 1838,
			["npcID"] = 99200,
		},
		[120670] = {
			["npcID"] = 60402,
		},
		[168629] = {
			["npcID"] = 81065,
		},
		[322892] = {
			["npcID"] = 156560,
		},
		[158252] = {
			["npcID"] = 87700,
		},
		[46036] = {
			["npcID"] = 24685,
		},
		[337227] = {
			["npcID"] = 169102,
		},
		[325232] = {
			["npcID"] = 170663,
		},
		[341323] = {
			["npcID"] = 173973,
		},
		[224943] = {
			["npcID"] = 113012,
		},
		[168630] = {
			["npcID"] = 77256,
		},
		[206883] = {
			["encounterName"] = "Gul'dan",
			["encounterID"] = 1866,
			["npcID"] = 104534,
		},
		[159089] = {
			["npcID"] = 82284,
		},
		[102241] = {
			["encounterName"] = "Echo of Tyrande",
			["npcID"] = 54544,
			["encounterID"] = 1884,
		},
		[189108] = {
			["npcID"] = 114442,
		},
		[157368] = {
			["npcID"] = 78088,
		},
		[109334] = {
			["npcID"] = 57807,
		},
		[224944] = {
			["npcID"] = 113012,
		},
		[112992] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 56717,
			["encounterID"] = 1413,
		},
		[320571] = {
			["npcID"] = 163128,
		},
		[330435] = {
			["npcID"] = 165830,
		},
		[69582] = {
			["npcID"] = 36879,
		},
		[156345] = {
			["npcID"] = 77504,
		},
		[57780] = {
			["npcID"] = 33236,
		},
		[174775] = {
			["npcID"] = 82062,
		},
		[277040] = {
			["npcID"] = 154016,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 40792,
		},
		[202420] = {
			["npcID"] = 126941,
		},
		[195253] = {
			["npcID"] = 97173,
		},
		[22414] = {
			["npcID"] = 78553,
		},
		[172728] = {
			["npcID"] = 80697,
		},
		[227339] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
			["encounterID"] = 1960,
		},
		[35511] = {
			["npcID"] = 16704,
		},
		[225825] = {
			["npcID"] = 111303,
		},
		[184371] = {
			["npcID"] = 157149,
		},
		[169657] = {
			["npcID"] = 84767,
		},
		[195254] = {
			["encounterName"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["npcID"] = 98542,
		},
		[335187] = {
			["npcID"] = 163415,
		},
		[337235] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[358271] = {
			["npcID"] = 179914,
		},
		[174777] = {
			["npcID"] = 82062,
		},
		[326997] = {
			["npcID"] = 167607,
		},
		[168634] = {
			["npcID"] = 81087,
		},
		[158549] = {
			["npcID"] = 82037,
		},
		[228019] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114522,
		},
		[207642] = {
			["npcID"] = 178409,
		},
		[213685] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[149181] = {
			["npcID"] = 75387,
		},
		[232115] = {
			["npcID"] = 116549,
		},
		[336911] = {
			["npcID"] = 178979,
		},
		[201399] = {
			["npcID"] = 100527,
		},
		[148004] = {
			["npcID"] = 72898,
		},
		[59994] = {
			["encounterName"] = "Herald Volazj",
			["npcID"] = 30621,
			["encounterID"] = 1968,
		},
		[204471] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[106851] = {
			["npcID"] = 59519,
		},
		[265568] = {
			["npcID"] = 133685,
		},
		[320185] = {
			["npcID"] = 169191,
		},
		[225043] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112603,
		},
		[59154] = {
			["npcID"] = 28920,
		},
		[218806] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109038,
		},
		[332836] = {
			["npcID"] = 169927,
		},
		[351894] = {
			["npcID"] = 178180,
		},
		[189114] = {
			["npcID"] = 118759,
		},
		[330496] = {
			["npcID"] = 155250,
		},
		[267618] = {
			["encounterName"] = "Mchimba the Embalmer",
			["npcID"] = 134993,
			["encounterID"] = 2142,
		},
		[159085] = {
			["npcID"] = 81422,
		},
		[68774] = {
			["encounterName"] = "Forgemaster Garfrost",
			["npcID"] = 36494,
			["encounterID"] = 1999,
		},
		[161470] = {
			["npcID"] = 84955,
		},
		[172042] = {
			["npcID"] = 86138,
		},
		[318813] = {
			["npcID"] = 164021,
		},
		[213688] = {
			["npcID"] = 107024,
		},
		[322909] = {
			["npcID"] = 160145,
		},
		[308575] = {
			["npcID"] = 158610,
		},
		[304075] = {
			["npcID"] = 155908,
		},
		[301075] = {
			["npcID"] = 144574,
		},
		[214001] = {
			["npcID"] = 102095,
		},
		[353952] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[322554] = {
			["encounterName"] = "Executor Tarvold",
			["npcID"] = 162103,
			["encounterID"] = 2361,
		},
		[156717] = {
			["npcID"] = 76104,
		},
		[355675] = {
			["npcID"] = 176705,
		},
		[175462] = {
			["npcID"] = 86520,
		},
		[75529] = {
			["npcID"] = 51077,
		},
		[355256] = {
			["npcID"] = 178631,
		},
		[273766] = {
			["npcID"] = 177539,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26929,
		},
		[76826] = {
			["npcID"] = 40268,
		},
		[106853] = {
			["encounterName"] = "Master Snowdrift",
			["npcID"] = 56541,
			["encounterID"] = 1304,
		},
		[273767] = {
			["npcID"] = 157003,
		},
		[197144] = {
			["npcID"] = 100216,
		},
		[224953] = {
			["npcID"] = 170661,
		},
		[257397] = {
			["npcID"] = 129788,
		},
		[273768] = {
			["npcID"] = 145036,
		},
		[228025] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114329,
		},
		[209410] = {
			["npcID"] = 104247,
		},
		[337249] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[149187] = {
			["npcID"] = 72367,
		},
		[259597] = {
			["npcID"] = 158110,
		},
		[338959] = {
			["npcID"] = 162114,
		},
		[46608] = {
			["npcID"] = 11949,
		},
		[273770] = {
			["npcID"] = 145036,
		},
		[332646] = {
			["npcID"] = 162872,
		},
		[200185] = {
			["encounterName"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["npcID"] = 99192,
		},
		[154135] = {
			["encounterName"] = "Araknath",
			["npcID"] = 76141,
			["encounterID"] = 1699,
		},
		[347490] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[357729] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178072,
		},
		[149416] = {
			["npcID"] = 183257,
		},
		[178060] = {
			["npcID"] = 80491,
		},
		[159966] = {
			["npcID"] = 77721,
		},
		[224246] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 112655,
		},
		[325605] = {
			["npcID"] = 176337,
		},
		[353635] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[265582] = {
			["npcID"] = 149654,
		},
		[341349] = {
			["npcID"] = 173973,
		},
		[270264] = {
			["npcID"] = 154131,
		},
		[144070] = {
			["encounterName"] = "Kor'kron Dark Shaman",
			["npcID"] = 71859,
			["encounterID"] = 1606,
		},
		[354223] = {
			["npcID"] = 177514,
		},
		[162500] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77803,
			["encounterID"] = 1715,
		},
		[327016] = {
			["npcID"] = 159156,
		},
		[337255] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[82794] = {
			["npcID"] = 44926,
		},
		[174787] = {
			["npcID"] = 82062,
		},
		[25054] = {
			["npcID"] = 10423,
		},
		[336158] = {
			["npcID"] = 172217,
		},
		[114826] = {
			["npcID"] = 59553,
		},
		[187074] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 92911,
			["encounterID"] = 1778,
		},
		[342963] = {
			["npcID"] = 158259,
		},
		[59575] = {
			["encounterName"] = "Skarvold & Dalronn",
			["encounterID"] = 2024,
			["npcID"] = 24201,
		},
		[178702] = {
			["npcID"] = 131674,
		},
		[362316] = {
			["npcID"] = 184425,
		},
		[365215] = {
			["npcID"] = 178563,
		},
		[59246] = {
			["npcID"] = 26691,
		},
		[194242] = {
			["npcID"] = 94983,
		},
		[326574] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[18399] = {
			["npcID"] = 17395,
		},
		[21559] = {
			["npcID"] = 13378,
		},
		[359313] = {
			["npcID"] = 181208,
		},
		[331743] = {
			["npcID"] = 166276,
		},
		[268050] = {
			["npcID"] = 136186,
		},
		[362308] = {
			["npcID"] = 185755,
		},
		[175100] = {
			["npcID"] = 84887,
		},
		[332792] = {
			["npcID"] = 165566,
		},
		[345078] = {
			["npcID"] = 170026,
		},
		[165715] = {
			["npcID"] = 82016,
		},
		[338867] = {
			["npcID"] = 167526,
		},
		[200154] = {
			["npcID"] = 102253,
		},
		[358342] = {
			["npcID"] = 179851,
		},
		[201411] = {
			["npcID"] = 100527,
		},
		[32011] = {
			["npcID"] = 46953,
		},
		[267639] = {
			["encounterName"] = "Mchimba the Embalmer",
			["npcID"] = 134993,
			["encounterID"] = 2142,
		},
		[188101] = {
			["npcID"] = 94873,
		},
		[345454] = {
			["npcID"] = 157833,
		},
		[295698] = {
			["npcID"] = 144531,
		},
		[358316] = {
			["npcID"] = 180681,
		},
		[338852] = {
			["npcID"] = 167527,
		},
		[172046] = {
			["npcID"] = 86138,
		},
		[173563] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 86684,
			["encounterID"] = 1756,
		},
		[177551] = {
			["npcID"] = 75878,
		},
		[342931] = {
			["npcID"] = 169410,
		},
		[322262] = {
			["npcID"] = 166754,
		},
		[322931] = {
			["npcID"] = 166930,
		},
		[359337] = {
			["npcID"] = 184010,
		},
		[322470] = {
			["npcID"] = 166875,
		},
		[345457] = {
			["npcID"] = 157833,
		},
		[198641] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["npcID"] = 98965,
		},
		[162665] = {
			["npcID"] = 75749,
		},
		[192003] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 97259,
		},
		[123654] = {
			["encounterName"] = "Trial of the King",
			["encounterID"] = 1442,
			["npcID"] = 61444,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["encounterID"] = 1679,
			["npcID"] = 75452,
		},
		[15536] = {
			["npcID"] = 38926,
		},
		[176070] = {
			["npcID"] = 173114,
		},
		[106434] = {
			["encounterName"] = "Master Snowdrift",
			["npcID"] = 56541,
			["encounterID"] = 1304,
		},
		[362976] = {
			["npcID"] = 183721,
		},
		[364180] = {
			["npcID"] = 183596,
		},
		[240006] = {
			["npcID"] = 182863,
		},
		[161781] = {
			["npcID"] = 81360,
		},
		[310249] = {
			["npcID"] = 167717,
		},
		[362480] = {
			["npcID"] = 182322,
		},
		[228239] = {
			["npcID"] = 114627,
		},
		[64696] = {
			["encounterName"] = "Razorscale",
			["npcID"] = 33453,
			["encounterID"] = 1139,
		},
		[322936] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[368890] = {
			["npcID"] = 181408,
		},
		[196296] = {
			["encounterName"] = "Serpentrix",
			["encounterID"] = 1813,
			["npcID"] = 91792,
		},
		[29575] = {
			["npcID"] = 16424,
		},
		[181962] = {
			["npcID"] = 91646,
		},
		[23337] = {
			["npcID"] = 53823,
		},
		[357286] = {
			["npcID"] = 180392,
		},
		[331689] = {
			["npcID"] = 165181,
		},
		[161485] = {
			["npcID"] = 75207,
		},
		[366074] = {
			["npcID"] = 183927,
		},
		[364495] = {
			["npcID"] = 181625,
		},
		[329082] = {
			["npcID"] = 166042,
		},
		[70512] = {
			["npcID"] = 36990,
		},
		[324987] = {
			["npcID"] = 166301,
		},
		[318844] = {
			["npcID"] = 163979,
		},
		[329083] = {
			["npcID"] = 166042,
		},
		[322940] = {
			["npcID"] = 172067,
		},
		[193018] = {
			["encounterName"] = "King Deepbeard",
			["encounterID"] = 1812,
			["npcID"] = 91797,
		},
		[332706] = {
			["npcID"] = 170490,
		},
		[29885] = {
			["npcID"] = 16488,
		},
		[368163] = {
			["npcID"] = 178229,
		},
		[42723] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["npcID"] = 23954,
		},
		[330711] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[368522] = {
			["npcID"] = 183764,
		},
		[331133] = {
			["npcID"] = 160048,
		},
		[171231] = {
			["npcID"] = 75207,
		},
		[336277] = {
			["npcID"] = 172265,
		},
		[227777] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114260,
			["encounterID"] = 1957,
		},
		[339325] = {
			["npcID"] = 173298,
		},
		[123648] = {
			["npcID"] = 61946,
		},
		[187895] = {
			["npcID"] = 149515,
		},
		[368506] = {
			["npcID"] = 180924,
		},
		[338846] = {
			["npcID"] = 167525,
		},
		[288278] = {
			["npcID"] = 148651,
		},
		[368446] = {
			["npcID"] = 180978,
		},
		[350086] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176705,
		},
		[289048] = {
			["npcID"] = 148787,
		},
		[215754] = {
			["npcID"] = 108655,
		},
		[59696] = {
			["npcID"] = 24082,
		},
		[17293] = {
			["encounterName"] = "Instructor Galford",
			["encounterID"] = 477,
			["npcID"] = 10811,
		},
		[329437] = {
			["npcID"] = 182791,
		},
		[162066] = {
			["encounterName"] = "Skylord Tovra",
			["npcID"] = 80005,
			["encounterID"] = 1736,
		},
		[335233] = {
			["npcID"] = 176334,
		},
		[193364] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["npcID"] = 96756,
			["encounterID"] = 1822,
		},
		[29919] = {
			["npcID"] = 16530,
		},
		[366171] = {
			["npcID"] = 184952,
		},
		[332683] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 169835,
			["encounterID"] = 2417,
		},
		[185039] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90018,
			["encounterID"] = 1778,
		},
		[338858] = {
			["npcID"] = 167526,
		},
		[366406] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 184908,
			["encounterID"] = 2381,
		},
		[360213] = {
			["npcID"] = 181839,
		},
		[343722] = {
			["npcID"] = 162965,
		},
		[66290] = {
			["encounterName"] = "Balnazzar",
			["encounterID"] = 478,
			["npcID"] = 10813,
		},
		[300424] = {
			["npcID"] = 150160,
		},
		[189259] = {
			["npcID"] = 91921,
		},
		[41093] = {
			["npcID"] = 23018,
		},
		[272342] = {
			["npcID"] = 136616,
		},
		[368478] = {
			["npcID"] = 180746,
		},
		[260264] = {
			["npcID"] = 137771,
		},
		[194545] = {
			["npcID"] = 147236,
		},
		[181969] = {
			["npcID"] = 91520,
		},
		[59617] = {
			["npcID"] = 23960,
		},
		[257736] = {
			["npcID"] = 126919,
		},
		[206685] = {
			["npcID"] = 104493,
		},
		[44164] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24656,
		},
		[40066] = {
			["npcID"] = 22877,
		},
		[351621] = {
			["npcID"] = 176573,
		},
		[29926] = {
			["npcID"] = 16525,
		},
		[170480] = {
			["npcID"] = 79589,
		},
		[227817] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[368514] = {
			["npcID"] = 183764,
		},
		[185042] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90018,
			["encounterID"] = 1778,
		},
		[367375] = {
			["npcID"] = 178778,
		},
		[176127] = {
			["npcID"] = 80935,
		},
		[188114] = {
			["encounterName"] = "Rokmora",
			["encounterID"] = 1790,
			["npcID"] = 91003,
		},
		[167385] = {
			["npcID"] = 154586,
		},
		[59835] = {
			["encounterName"] = "Loken",
			["npcID"] = 28923,
			["encounterID"] = 1986,
		},
		[188907] = {
			["npcID"] = 92789,
		},
		[224974] = {
			["npcID"] = 113043,
		},
		[168661] = {
			["npcID"] = 81087,
		},
		[40536] = {
			["encounterName"] = "Illidan Stormrage",
			["npcID"] = 23089,
			["encounterID"] = 609,
		},
		[227800] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[317661] = {
			["npcID"] = 163503,
		},
		[279954] = {
			["npcID"] = 142793,
		},
		[166341] = {
			["npcID"] = 82579,
		},
		[232142] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 116574,
		},
		[277907] = {
			["npcID"] = 175672,
		},
		[144089] = {
			["encounterName"] = "Kor'kron Dark Shaman",
			["npcID"] = 71859,
			["encounterID"] = 1606,
		},
		[76717] = {
			["npcID"] = 40023,
		},
		[170411] = {
			["npcID"] = 85232,
		},
		[327054] = {
			["npcID"] = 158869,
		},
		[228637] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114802,
			["encounterID"] = 1960,
		},
		[118940] = {
			["npcID"] = 61239,
		},
		[300434] = {
			["npcID"] = 150160,
		},
		[277909] = {
			["npcID"] = 147061,
		},
		[329103] = {
			["npcID"] = 165834,
		},
		[147289] = {
			["npcID"] = 72841,
		},
		[341390] = {
			["npcID"] = 174012,
		},
		[318865] = {
			["npcID"] = 162849,
		},
		[361868] = {
			["npcID"] = 182688,
		},
		[331152] = {
			["npcID"] = 167164,
		},
		[300436] = {
			["npcID"] = 150146,
		},
		[200404] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[229705] = {
			["npcID"] = 115418,
		},
		[226287] = {
			["npcID"] = 101438,
		},
		[68982] = {
			["encounterName"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["npcID"] = 36502,
		},
		[249306] = {
			["encounterName"] = "Viceroy Nezhar",
			["encounterID"] = 2067,
			["npcID"] = 122056,
		},
		[177150] = {
			["npcID"] = 81725,
		},
		[132829] = {
			["npcID"] = 73718,
		},
		[147674] = {
			["npcID"] = 72892,
		},
		[269972] = {
			["npcID"] = 134174,
		},
		[329107] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169219,
			["encounterID"] = 2405,
		},
		[169689] = {
			["npcID"] = 76116,
		},
		[154331] = {
			["npcID"] = 133104,
		},
		[335251] = {
			["npcID"] = 170064,
		},
		[106546] = {
			["npcID"] = 59518,
		},
		[322965] = {
			["npcID"] = 160143,
		},
		[341395] = {
			["npcID"] = 174012,
		},
		[365477] = {
			["npcID"] = 181797,
		},
		[353682] = {
			["npcID"] = 176880,
		},
		[169690] = {
			["npcID"] = 76116,
		},
		[162523] = {
			["npcID"] = 80400,
		},
		[283422] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 145185,
		},
		[329110] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[245601] = {
			["npcID"] = 122405,
		},
		[170367] = {
			["npcID"] = 73468,
		},
		[250318] = {
			["encounterName"] = "L'ura",
			["encounterID"] = 2068,
			["npcID"] = 123187,
		},
		[358563] = {
			["npcID"] = 175616,
		},
		[322968] = {
			["npcID"] = 165111,
		},
		[219861] = {
			["npcID"] = 110321,
		},
		[204901] = {
			["npcID"] = 102336,
		},
		[304539] = {
			["npcID"] = 152298,
		},
		[355230] = {
			["npcID"] = 152656,
		},
		[332705] = {
			["npcID"] = 170490,
		},
		[224981] = {
			["npcID"] = 110614,
		},
		[345495] = {
			["npcID"] = 175519,
		},
		[176606] = {
			["npcID"] = 85960,
		},
		[329322] = {
			["npcID"] = 155831,
		},
		[229567] = {
			["npcID"] = 115407,
		},
		[35008] = {
			["encounterName"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["encounterID"] = 1941,
		},
		[339353] = {
			["npcID"] = 158259,
		},
		[227461] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114324,
		},
		[362572] = {
			["npcID"] = 182728,
		},
		[169851] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 84990,
			["encounterID"] = 1751,
		},
		[220248] = {
			["npcID"] = 169270,
		},
		[143423] = {
			["encounterName"] = "Fallen Protectors",
			["encounterID"] = 1598,
			["npcID"] = 71480,
		},
		[163550] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79545,
			["encounterID"] = 1732,
		},
		[299475] = {
			["npcID"] = 150254,
		},
		[355737] = {
			["npcID"] = 179446,
		},
		[316830] = {
			["npcID"] = 158631,
		},
		[196870] = {
			["npcID"] = 91783,
		},
		[166766] = {
			["npcID"] = 167937,
		},
		[184416] = {
			["npcID"] = 169277,
		},
		[341404] = {
			["npcID"] = 174017,
		},
		[318879] = {
			["npcID"] = 163476,
		},
		[41071] = {
			["npcID"] = 22882,
		},
		[347548] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[183005] = {
			["npcID"] = 93496,
		},
		[146223] = {
			["npcID"] = 72847,
		},
		[296355] = {
			["npcID"] = 152612,
		},
		[363042] = {
			["npcID"] = 181208,
		},
		[341406] = {
			["npcID"] = 174012,
		},
		[114548] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["npcID"] = 59479,
			["encounterID"] = 1414,
		},
		[229698] = {
			["npcID"] = 115417,
		},
		[322977] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[289043] = {
			["npcID"] = 148787,
		},
		[351646] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[242391] = {
			["npcID"] = 156212,
		},
		[322978] = {
			["npcID"] = 159174,
		},
		[164187] = {
			["npcID"] = 81407,
		},
		[241808] = {
			["npcID"] = 183424,
		},
		[299153] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[291613] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[316836] = {
			["npcID"] = 165831,
		},
		[151267] = {
			["encounterName"] = "Aku'mai",
			["npcID"] = 75157,
			["encounterID"] = 1672,
		},
		[44224] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24664,
		},
		[322980] = {
			["npcID"] = 163350,
		},
		[292264] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[351649] = {
			["npcID"] = 176576,
		},
		[143497] = {
			["encounterName"] = "Fallen Protectors",
			["encounterID"] = 1598,
			["npcID"] = 71480,
		},
		[298898] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153755,
		},
		[268403] = {
			["encounterName"] = "King Dazar",
			["npcID"] = 136160,
			["encounterID"] = 2143,
		},
		[335268] = {
			["npcID"] = 170064,
		},
		[342280] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[34791] = {
			["npcID"] = 18405,
		},
		[68987] = {
			["encounterName"] = "Krick",
			["encounterID"] = 2001,
			["npcID"] = 36476,
		},
		[229083] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["encounterID"] = 2017,
			["npcID"] = 114790,
		},
		[361890] = {
			["npcID"] = 181453,
		},
		[360730] = {
			["npcID"] = 181114,
		},
		[154623] = {
			["npcID"] = 77131,
		},
		[368034] = {
			["npcID"] = 183722,
		},
		[368457] = {
			["npcID"] = 180746,
		},
		[334263] = {
			["npcID"] = 168977,
		},
		[105847] = {
			["encounterName"] = "Spine of Deathwing",
			["encounterID"] = 1291,
			["npcID"] = 56341,
		},
		[165851] = {
			["npcID"] = 82284,
		},
		[172771] = {
			["npcID"] = 86809,
		},
		[166675] = {
			["npcID"] = 80937,
		},
		[325033] = {
			["npcID"] = 178467,
		},
		[146781] = {
			["encounterName"] = "Galakras",
			["npcID"] = 72302,
			["encounterID"] = 1622,
		},
		[258777] = {
			["npcID"] = 127111,
		},
		[339368] = {
			["npcID"] = 158259,
		},
		[333225] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 170851,
		},
		[368037] = {
			["npcID"] = 185677,
		},
		[35010] = {
			["encounterName"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["encounterID"] = 1939,
		},
		[59839] = {
			["encounterName"] = "Slad'ran",
			["npcID"] = 29304,
			["encounterID"] = 1978,
		},
		[166629] = {
			["npcID"] = 84862,
		},
		[318892] = {
			["npcID"] = 164021,
		},
		[350916] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 179269,
		},
		[161510] = {
			["npcID"] = 84955,
		},
		[333227] = {
			["npcID"] = 169905,
		},
		[270901] = {
			["npcID"] = 134251,
		},
		[90490] = {
			["npcID"] = 39961,
		},
		[355753] = {
			["npcID"] = 179894,
		},
		[9143] = {
			["encounterName"] = "Tinkerer Gizlock",
			["encounterID"] = 427,
			["npcID"] = 13601,
		},
		[310703] = {
			["npcID"] = 159459,
		},
		[353706] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[273844] = {
			["npcID"] = 167664,
		},
		[328254] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 168700,
		},
		[270865] = {
			["npcID"] = 137484,
		},
		[172774] = {
			["npcID"] = 81246,
		},
		[173798] = {
			["npcID"] = 82372,
		},
		[336262] = {
			["npcID"] = 173972,
		},
		[257756] = {
			["npcID"] = 129527,
		},
		[340308] = {
			["npcID"] = 162797,
		},
		[334708] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 171557,
		},
		[333231] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[359852] = {
			["npcID"] = 181981,
		},
		[296372] = {
			["npcID"] = 152612,
		},
		[123767] = {
			["npcID"] = 68241,
		},
		[276441] = {
			["npcID"] = 141485,
		},
		[75645] = {
			["npcID"] = 39679,
		},
		[152298] = {
			["npcID"] = 75820,
		},
		[357229] = {
			["npcID"] = 180348,
		},
		[339629] = {
			["npcID"] = 173145,
		},
		[147720] = {
			["npcID"] = 72894,
		},
		[345520] = {
			["npcID"] = 157833,
		},
		[70616] = {
			["npcID"] = 37582,
		},
		[147447] = {
			["npcID"] = 72770,
		},
		[31747] = {
			["npcID"] = 44573,
		},
		[113017] = {
			["encounterName"] = "Lorewalker Stonestep",
			["npcID"] = 58826,
			["encounterID"] = 1417,
		},
		[325877] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[183539] = {
			["npcID"] = 91002,
		},
		[368047] = {
			["npcID"] = 178508,
		},
		[197350] = {
			["npcID"] = 111474,
		},
		[340807] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[22883] = {
			["npcID"] = 18317,
		},
		[165193] = {
			["npcID"] = 72627,
		},
		[345523] = {
			["npcID"] = 156203,
		},
		[260879] = {
			["encounterName"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["npcID"] = 131318,
		},
		[38595] = {
			["encounterName"] = "Priestess Delrissa",
			["npcID"] = 24558,
			["encounterID"] = 1895,
		},
		[341715] = {
			["npcID"] = 174162,
		},
		[329256] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169271,
			["encounterID"] = 2405,
		},
		[322999] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[204611] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[257458] = {
			["encounterName"] = "Lord Harlan Sweete",
			["npcID"] = 126983,
			["encounterID"] = 2096,
		},
		[341822] = {
			["npcID"] = 166145,
		},
		[150405] = {
			["npcID"] = 74980,
		},
		[195720] = {
			["npcID"] = 101077,
		},
		[59357] = {
			["npcID"] = 28733,
		},
		[258338] = {
			["encounterName"] = "Council o' Captains",
			["npcID"] = 126847,
			["encounterID"] = 2094,
		},
		[22421] = {
			["encounterName"] = "Hydrospawn",
			["encounterID"] = 344,
			["npcID"] = 13280,
		},
		[69068] = {
			["npcID"] = 36620,
		},
		[327887] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[62016] = {
			["encounterName"] = "Thorim",
			["npcID"] = 32865,
			["encounterID"] = 1141,
		},
		[200784] = {
			["npcID"] = 98792,
		},
		[333241] = {
			["npcID"] = 170850,
		},
		[351066] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[274680] = {
			["npcID"] = 124024,
		},
		[272609] = {
			["npcID"] = 138281,
		},
		[299432] = {
			["npcID"] = 151301,
		},
		[114855] = {
			["npcID"] = 58783,
		},
		[257402] = {
			["encounterName"] = "Lord Harlan Sweete",
			["npcID"] = 126983,
			["encounterID"] = 2096,
		},
		[69056] = {
			["npcID"] = 36478,
		},
		[39133] = {
			["encounterName"] = "Warp Splinter",
			["npcID"] = 17977,
			["encounterID"] = 1929,
		},
		[120320] = {
			["npcID"] = 61705,
		},
		[353721] = {
			["npcID"] = 179135,
		},
		[265668] = {
			["npcID"] = 133852,
		},
		[272469] = {
			["npcID"] = 138538,
		},
		[233196] = {
			["encounterName"] = "Mephistroth",
			["npcID"] = 116944,
			["encounterID"] = 2039,
		},
		[149908] = {
			["encounterName"] = "Thruk",
			["npcID"] = 74505,
			["encounterID"] = 1675,
		},
		[54722] = {
			["npcID"] = 16168,
		},
		[292290] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[126842] = {
			["npcID"] = 63681,
		},
		[279264] = {
			["npcID"] = 161874,
		},
		[198379] = {
			["encounterName"] = "Archdruid Glaidalis",
			["encounterID"] = 1836,
			["npcID"] = 96512,
		},
		[114848] = {
			["encounterName"] = "High Inquisitor Whitemane",
			["encounterID"] = 1425,
			["npcID"] = 3977,
		},
		[356812] = {
			["npcID"] = 180286,
		},
		[329151] = {
			["npcID"] = 165834,
		},
		[194284] = {
			["npcID"] = 145287,
		},
		[111008] = {
			["npcID"] = 58590,
		},
		[49091] = {
			["npcID"] = 26692,
		},
		[164592] = {
			["npcID"] = 75198,
		},
		[339391] = {
			["npcID"] = 158259,
		},
		[124283] = {
			["encounterName"] = "General Pa'valak",
			["encounterID"] = 1447,
			["npcID"] = 61485,
		},
		[351678] = {
			["npcID"] = 178271,
		},
		[346762] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[339392] = {
			["npcID"] = 158259,
		},
		[146163] = {
			["npcID"] = 72770,
		},
		[174066] = {
			["npcID"] = 85264,
		},
		[20787] = {
			["encounterName"] = "Lethtendris",
			["encounterID"] = 345,
			["npcID"] = 14327,
		},
		[59842] = {
			["encounterName"] = "Slad'ran",
			["npcID"] = 29304,
			["encounterID"] = 1978,
		},
		[341441] = {
			["npcID"] = 174069,
		},
		[351680] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[337346] = {
			["npcID"] = 159459,
		},
		[363967] = {
			["npcID"] = 184109,
		},
		[119902] = {
			["npcID"] = 61672,
		},
		[111010] = {
			["npcID"] = 58590,
		},
		[205549] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[189531] = {
			["npcID"] = 95603,
		},
		[175065] = {
			["npcID"] = 79629,
		},
		[244750] = {
			["encounterName"] = "Viceroy Nezhar",
			["encounterID"] = 2067,
			["npcID"] = 122056,
		},
		[337348] = {
			["npcID"] = 159459,
		},
		[314823] = {
			["npcID"] = 161436,
		},
		[170738] = {
			["npcID"] = 85496,
		},
		[270543] = {
			["npcID"] = 164515,
		},
		[337349] = {
			["npcID"] = 159459,
		},
		[157762] = {
			["npcID"] = 77696,
		},
		[176517] = {
			["npcID"] = 83690,
		},
		[164788] = {
			["npcID"] = 138299,
		},
		[9232] = {
			["encounterName"] = "High Inquisitor Whitemane",
			["encounterID"] = 1425,
			["npcID"] = 3977,
		},
		[314825] = {
			["npcID"] = 161436,
		},
		[181155] = {
			["npcID"] = 93931,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["encounterID"] = 1688,
			["npcID"] = 75829,
		},
		[337351] = {
			["npcID"] = 159459,
		},
		[365009] = {
			["npcID"] = 184409,
		},
		[260857] = {
			["npcID"] = 149018,
		},
		[16869] = {
			["npcID"] = 13256,
		},
		[185156] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 92916,
			["encounterID"] = 1778,
		},
		[355782] = {
			["npcID"] = 179842,
		},
		[184065] = {
			["npcID"] = 94604,
		},
		[335305] = {
			["npcID"] = 171799,
		},
		[329162] = {
			["npcID"] = 165834,
		},
		[119420] = {
			["encounterName"] = "Adarogg",
			["encounterID"] = 1443,
			["npcID"] = 61408,
		},
		[272592] = {
			["npcID"] = 138281,
		},
		[187638] = {
			["npcID"] = 94663,
		},
		[329163] = {
			["npcID"] = 168837,
		},
		[36173] = {
			["encounterName"] = "Dalliah the Doomsayer",
			["npcID"] = 20885,
			["encounterID"] = 1913,
		},
		[161552] = {
			["npcID"] = 80250,
		},
		[302543] = {
			["npcID"] = 155483,
		},
		[22662] = {
			["encounterName"] = "Alzzin the Wildshaper",
			["encounterID"] = 346,
			["npcID"] = 11492,
		},
		[37480] = {
			["npcID"] = 21702,
		},
		[56065] = {
			["npcID"] = 15981,
		},
		[335308] = {
			["npcID"] = 171799,
		},
		[288210] = {
			["npcID"] = 163032,
		},
		[36123] = {
			["encounterName"] = "Zereketh the Unbound",
			["npcID"] = 20870,
			["encounterID"] = 1916,
		},
		[109952] = {
			["npcID"] = 54511,
		},
		[22709] = {
			["encounterName"] = "Lethtendris",
			["encounterID"] = 345,
			["npcID"] = 14327,
		},
		[37479] = {
			["npcID"] = 21702,
		},
		[355787] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[111599] = {
			["npcID"] = 58757,
		},
		[315963] = {
			["npcID"] = 170146,
		},
		[36837] = {
			["npcID"] = 20898,
		},
		[97154] = {
			["npcID"] = 53413,
		},
		[350280] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[34762] = {
			["encounterName"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["encounterID"] = 1926,
		},
		[329168] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[339407] = {
			["npcID"] = 173280,
		},
		[275927] = {
			["npcID"] = 182728,
		},
		[159481] = {
			["npcID"] = 81318,
		},
		[168696] = {
			["npcID"] = 84102,
		},
		[84868] = {
			["npcID"] = 44016,
		},
		[113629] = {
			["npcID"] = 59193,
		},
		[34759] = {
			["encounterName"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["encounterID"] = 1926,
		},
		[345552] = {
			["npcID"] = 168585,
		},
		[29924] = {
			["npcID"] = 16526,
		},
		[31287] = {
			["npcID"] = 81749,
		},
		[30180] = {
			["npcID"] = 16539,
		},
		[345553] = {
			["npcID"] = 174843,
		},
		[97155] = {
			["npcID"] = 53413,
		},
		[22373] = {
			["npcID"] = 11461,
		},
		[161087] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77816,
			["encounterID"] = 1715,
		},
	},
}
